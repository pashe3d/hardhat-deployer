{"id":"320910cf338e525e9ab57e2b08101305","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (governance/utils/Votes.sol)\npragma solidity ^0.8.20;\n\nimport {IERC5805} from \"@openzeppelin/contracts/interfaces/IERC5805.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {NoncesUpgradeable} from \"../../utils/NoncesUpgradeable.sol\";\nimport {EIP712Upgradeable} from \"../../utils/cryptography/EIP712Upgradeable.sol\";\nimport {Checkpoints} from \"@openzeppelin/contracts/utils/structs/Checkpoints.sol\";\nimport {SafeCast} from \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport {Time} from \"@openzeppelin/contracts/utils/types/Time.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n * transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n * \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n * decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n * delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n *\n * This contract is often combined with a token contract such that voting units correspond to token units. For an\n * example, see {ERC721Votes}.\n *\n * The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n * at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n * cost of this history tracking optional.\n *\n * When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n * {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n * previous example, it would be included in {ERC721-_update}).\n */\nabstract contract VotesUpgradeable is Initializable, ContextUpgradeable, EIP712Upgradeable, NoncesUpgradeable, IERC5805 {\n    using Checkpoints for Checkpoints.Trace208;\n\n    bytes32 private constant DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.Votes\n    struct VotesStorage {\n        mapping(address account => address) _delegatee;\n\n        mapping(address delegatee => Checkpoints.Trace208) _delegateCheckpoints;\n\n        Checkpoints.Trace208 _totalCheckpoints;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Votes\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant VotesStorageLocation = 0xe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d00;\n\n    function _getVotesStorage() private pure returns (VotesStorage storage $) {\n        assembly {\n            $.slot := VotesStorageLocation\n        }\n    }\n\n    /**\n     * @dev The clock was incorrectly modified.\n     */\n    error ERC6372InconsistentClock();\n\n    /**\n     * @dev Lookup to future votes is not available.\n     */\n    error ERC5805FutureLookup(uint256 timepoint, uint48 clock);\n\n    function __Votes_init() internal onlyInitializing {\n    }\n\n    function __Votes_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n     * checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\n     */\n    function clock() public view virtual returns (uint48) {\n        return Time.blockNumber();\n    }\n\n    /**\n     * @dev Machine-readable description of the clock as specified in EIP-6372.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual returns (string memory) {\n        // Check that the clock was not modified\n        if (clock() != Time.blockNumber()) {\n            revert ERC6372InconsistentClock();\n        }\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) public view virtual returns (uint256) {\n        VotesStorage storage $ = _getVotesStorage();\n        return $._delegateCheckpoints[account].latest();\n    }\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual returns (uint256) {\n        VotesStorage storage $ = _getVotesStorage();\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) {\n            revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        }\n        return $._delegateCheckpoints[account].upperLookupRecent(SafeCast.toUint48(timepoint));\n    }\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual returns (uint256) {\n        VotesStorage storage $ = _getVotesStorage();\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) {\n            revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        }\n        return $._totalCheckpoints.upperLookupRecent(SafeCast.toUint48(timepoint));\n    }\n\n    /**\n     * @dev Returns the current total supply of votes.\n     */\n    function _getTotalSupply() internal view virtual returns (uint256) {\n        VotesStorage storage $ = _getVotesStorage();\n        return $._totalCheckpoints.latest();\n    }\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) public view virtual returns (address) {\n        VotesStorage storage $ = _getVotesStorage();\n        return $._delegatee[account];\n    }\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual {\n        address account = _msgSender();\n        _delegate(account, delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > expiry) {\n            revert VotesExpiredSignature(expiry);\n        }\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        _useCheckedNonce(signer, nonce);\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Delegate all of `account`'s voting units to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address account, address delegatee) internal virtual {\n        VotesStorage storage $ = _getVotesStorage();\n        address oldDelegate = delegates(account);\n        $._delegatee[account] = delegatee;\n\n        emit DelegateChanged(account, oldDelegate, delegatee);\n        _moveDelegateVotes(oldDelegate, delegatee, _getVotingUnits(account));\n    }\n\n    /**\n     * @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n     * should be zero. Total supply of voting units will be adjusted with mints and burns.\n     */\n    function _transferVotingUnits(address from, address to, uint256 amount) internal virtual {\n        VotesStorage storage $ = _getVotesStorage();\n        if (from == address(0)) {\n            _push($._totalCheckpoints, _add, SafeCast.toUint208(amount));\n        }\n        if (to == address(0)) {\n            _push($._totalCheckpoints, _subtract, SafeCast.toUint208(amount));\n        }\n        _moveDelegateVotes(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Moves delegated votes from one delegate to another.\n     */\n    function _moveDelegateVotes(address from, address to, uint256 amount) private {\n        VotesStorage storage $ = _getVotesStorage();\n        if (from != to && amount > 0) {\n            if (from != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    $._delegateCheckpoints[from],\n                    _subtract,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(from, oldValue, newValue);\n            }\n            if (to != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    $._delegateCheckpoints[to],\n                    _add,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(to, oldValue, newValue);\n            }\n        }\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function _numCheckpoints(address account) internal view virtual returns (uint32) {\n        VotesStorage storage $ = _getVotesStorage();\n        return SafeCast.toUint32($._delegateCheckpoints[account].length());\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function _checkpoints(\n        address account,\n        uint32 pos\n    ) internal view virtual returns (Checkpoints.Checkpoint208 memory) {\n        VotesStorage storage $ = _getVotesStorage();\n        return $._delegateCheckpoints[account].at(pos);\n    }\n\n    function _push(\n        Checkpoints.Trace208 storage store,\n        function(uint208, uint208) view returns (uint208) op,\n        uint208 delta\n    ) private returns (uint208, uint208) {\n        return store.push(clock(), op(store.latest(), delta));\n    }\n\n    function _add(uint208 a, uint208 b) private pure returns (uint208) {\n        return a + b;\n    }\n\n    function _subtract(uint208 a, uint208 b) private pure returns (uint208) {\n        return a - b;\n    }\n\n    /**\n     * @dev Must return the voting units held by an account.\n     */\n    function _getVotingUnits(address) internal view virtual returns (uint256);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {ContextUpgradeable} from \"../../../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\n    function __ERC20Burnable_init() internal onlyInitializing {\n    }\n\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20FlashMint.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC3156FlashBorrower} from \"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\";\nimport {IERC3156FlashLender} from \"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\";\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the ERC3156 Flash loans extension, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n *\n * Adds the {flashLoan} method, which provides flash loan support at the token\n * level. By default there is no fee, but this can be changed by overriding {flashFee}.\n *\n * NOTE: When this extension is used along with the {ERC20Capped} or {ERC20Votes} extensions,\n * {maxFlashLoan} will not correctly reflect the maximum that can be flash minted. We recommend\n * overriding {maxFlashLoan} so that it correctly reflects the supply cap.\n */\nabstract contract ERC20FlashMintUpgradeable is Initializable, ERC20Upgradeable, IERC3156FlashLender {\n    bytes32 private constant RETURN_VALUE = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n\n    /**\n     * @dev The loan token is not valid.\n     */\n    error ERC3156UnsupportedToken(address token);\n\n    /**\n     * @dev The requested loan exceeds the max loan value for `token`.\n     */\n    error ERC3156ExceededMaxLoan(uint256 maxLoan);\n\n    /**\n     * @dev The receiver of a flashloan is not a valid {onFlashLoan} implementer.\n     */\n    error ERC3156InvalidReceiver(address receiver);\n\n    function __ERC20FlashMint_init() internal onlyInitializing {\n    }\n\n    function __ERC20FlashMint_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the maximum amount of tokens available for loan.\n     * @param token The address of the token that is requested.\n     * @return The amount of token that can be loaned.\n     *\n     * NOTE: This function does not consider any form of supply cap, so in case\n     * it's used in a token with a cap like {ERC20Capped}, make sure to override this\n     * function to integrate the cap instead of `type(uint256).max`.\n     */\n    function maxFlashLoan(address token) public view virtual returns (uint256) {\n        return token == address(this) ? type(uint256).max - totalSupply() : 0;\n    }\n\n    /**\n     * @dev Returns the fee applied when doing flash loans. This function calls\n     * the {_flashFee} function which returns the fee applied when doing flash\n     * loans.\n     * @param token The token to be flash loaned.\n     * @param value The amount of tokens to be loaned.\n     * @return The fees applied to the corresponding flash loan.\n     */\n    function flashFee(address token, uint256 value) public view virtual returns (uint256) {\n        if (token != address(this)) {\n            revert ERC3156UnsupportedToken(token);\n        }\n        return _flashFee(token, value);\n    }\n\n    /**\n     * @dev Returns the fee applied when doing flash loans. By default this\n     * implementation has 0 fees. This function can be overloaded to make\n     * the flash loan mechanism deflationary.\n     * @param token The token to be flash loaned.\n     * @param value The amount of tokens to be loaned.\n     * @return The fees applied to the corresponding flash loan.\n     */\n    function _flashFee(address token, uint256 value) internal view virtual returns (uint256) {\n        // silence warning about unused variable without the addition of bytecode.\n        token;\n        value;\n        return 0;\n    }\n\n    /**\n     * @dev Returns the receiver address of the flash fee. By default this\n     * implementation returns the address(0) which means the fee amount will be burnt.\n     * This function can be overloaded to change the fee receiver.\n     * @return The address for which the flash fee will be sent to.\n     */\n    function _flashFeeReceiver() internal view virtual returns (address) {\n        return address(0);\n    }\n\n    /**\n     * @dev Performs a flash loan. New tokens are minted and sent to the\n     * `receiver`, who is required to implement the {IERC3156FlashBorrower}\n     * interface. By the end of the flash loan, the receiver is expected to own\n     * value + fee tokens and have them approved back to the token contract itself so\n     * they can be burned.\n     * @param receiver The receiver of the flash loan. Should implement the\n     * {IERC3156FlashBorrower-onFlashLoan} interface.\n     * @param token The token to be flash loaned. Only `address(this)` is\n     * supported.\n     * @param value The amount of tokens to be loaned.\n     * @param data An arbitrary datafield that is passed to the receiver.\n     * @return `true` if the flash loan was successful.\n     */\n    // This function can reenter, but it doesn't pose a risk because it always preserves the property that the amount\n    // minted at the beginning is always recovered and burned at the end, or else the entire function will revert.\n    // slither-disable-next-line reentrancy-no-eth\n    function flashLoan(\n        IERC3156FlashBorrower receiver,\n        address token,\n        uint256 value,\n        bytes calldata data\n    ) public virtual returns (bool) {\n        uint256 maxLoan = maxFlashLoan(token);\n        if (value > maxLoan) {\n            revert ERC3156ExceededMaxLoan(maxLoan);\n        }\n        uint256 fee = flashFee(token, value);\n        _mint(address(receiver), value);\n        if (receiver.onFlashLoan(_msgSender(), token, value, fee, data) != RETURN_VALUE) {\n            revert ERC3156InvalidReceiver(address(receiver));\n        }\n        address flashFeeReceiver = _flashFeeReceiver();\n        _spendAllowance(address(receiver), address(this), value + fee);\n        if (fee == 0 || flashFeeReceiver == address(0)) {\n            _burn(address(receiver), value + fee);\n        } else {\n            _burn(address(receiver), value);\n            _transfer(address(receiver), flashFeeReceiver, fee);\n        }\n        return true;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {PausableUpgradeable} from \"../../../utils/PausableUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20PausableUpgradeable is Initializable, ERC20Upgradeable, PausableUpgradeable {\n    function __ERC20Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __ERC20Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\";\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport {EIP712Upgradeable} from \"../../../utils/cryptography/EIP712Upgradeable.sol\";\nimport {NoncesUpgradeable} from \"../../../utils/NoncesUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20PermitUpgradeable is Initializable, ERC20Upgradeable, IERC20Permit, EIP712Upgradeable, NoncesUpgradeable {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    function __ERC20Permit_init(string memory name) internal onlyInitializing {\n        __EIP712_init_unchained(name, \"1\");\n    }\n\n    function __ERC20Permit_init_unchained(string memory) internal onlyInitializing {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, NoncesUpgradeable) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {VotesUpgradeable} from \"../../../governance/utils/VotesUpgradeable.sol\";\nimport {Checkpoints} from \"@openzeppelin/contracts/utils/structs/Checkpoints.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n */\nabstract contract ERC20VotesUpgradeable is Initializable, ERC20Upgradeable, VotesUpgradeable {\n    /**\n     * @dev Total supply cap has been exceeded, introducing a risk of votes overflowing.\n     */\n    error ERC20ExceededSafeSupply(uint256 increasedSupply, uint256 cap);\n\n    function __ERC20Votes_init() internal onlyInitializing {\n    }\n\n    function __ERC20Votes_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n     *\n     * This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n     * so that checkpoints can be stored in the Trace208 structure used by {{Votes}}. Increasing this value will not\n     * remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n     * {_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n     * additional logic requires it. When resolving override conflicts on this function, the minimum should be\n     * returned.\n     */\n    function _maxSupply() internal view virtual returns (uint256) {\n        return type(uint208).max;\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n        if (from == address(0)) {\n            uint256 supply = totalSupply();\n            uint256 cap = _maxSupply();\n            if (supply > cap) {\n                revert ERC20ExceededSafeSupply(supply, cap);\n            }\n        }\n        _transferVotingUnits(from, to, value);\n    }\n\n    /**\n     * @dev Returns the voting units of an `account`.\n     *\n     * WARNING: Overriding this function may compromise the internal vote accounting.\n     * `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change.\n     */\n    function _getVotingUnits(address account) internal view virtual override returns (uint256) {\n        return balanceOf(account);\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return _numCheckpoints(account);\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _checkpoints(account, pos);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\nimport {IERC5267} from \"@openzeppelin/contracts/interfaces/IERC5267.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n */\nabstract contract EIP712Upgradeable is Initializable, IERC5267 {\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.EIP712\n    struct EIP712Storage {\n        /// @custom:oz-renamed-from _HASHED_NAME\n        bytes32 _hashedName;\n        /// @custom:oz-renamed-from _HASHED_VERSION\n        bytes32 _hashedVersion;\n\n        string _name;\n        string _version;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.EIP712\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant EIP712StorageLocation = 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100;\n\n    function _getEIP712Storage() private pure returns (EIP712Storage storage $) {\n        assembly {\n            $.slot := EIP712StorageLocation\n        }\n    }\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    function __EIP712_init(string memory name, string memory version) internal onlyInitializing {\n        __EIP712_init_unchained(name, version);\n    }\n\n    function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {\n        EIP712Storage storage $ = _getEIP712Storage();\n        $._name = name;\n        $._version = version;\n\n        // Reset prior values in storage if upgrading\n        $._hashedName = 0;\n        $._hashedVersion = 0;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        return _buildDomainSeparator();\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        EIP712Storage storage $ = _getEIP712Storage();\n        // If the hashed name and version in storage are non-zero, the contract hasn't been properly initialized\n        // and the EIP712 domain is not reliable, as it will be missing name and version.\n        require($._hashedName == 0 && $._hashedVersion == 0, \"EIP712: Uninitialized\");\n\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Name() internal view virtual returns (string memory) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Version() internal view virtual returns (string memory) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        return $._version;\n    }\n\n    /**\n     * @dev The hash of the name parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead.\n     */\n    function _EIP712NameHash() internal view returns (bytes32) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        string memory name = _EIP712Name();\n        if (bytes(name).length > 0) {\n            return keccak256(bytes(name));\n        } else {\n            // If the name is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the name hash in storage if non-zero, otherwise we assume the name is empty by design.\n            bytes32 hashedName = $._hashedName;\n            if (hashedName != 0) {\n                return hashedName;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n\n    /**\n     * @dev The hash of the version parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead.\n     */\n    function _EIP712VersionHash() internal view returns (bytes32) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        string memory version = _EIP712Version();\n        if (bytes(version).length > 0) {\n            return keccak256(bytes(version));\n        } else {\n            // If the version is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the version hash in storage if non-zero, otherwise we assume the version is empty by design.\n            bytes32 hashedVersion = $._hashedVersion;\n            if (hashedVersion != 0) {\n                return hashedVersion;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract NoncesUpgradeable is Initializable {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.Nonces\n    struct NoncesStorage {\n        mapping(address account => uint256) _nonces;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Nonces\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant NoncesStorageLocation = 0x5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00;\n\n    function _getNoncesStorage() private pure returns (NoncesStorage storage $) {\n        assembly {\n            $.slot := NoncesStorageLocation\n        }\n    }\n\n    function __Nonces_init() internal onlyInitializing {\n    }\n\n    function __Nonces_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        NoncesStorage storage $ = _getNoncesStorage();\n        return $._nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        NoncesStorage storage $ = _getNoncesStorage();\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return $._nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n */\ninterface IVotes {\n    /**\n     * @dev The signature used has expired.\n     */\n    error VotesExpiredSignature(uint256 expiry);\n\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC3156FlashBorrower.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC3156 FlashBorrower, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n */\ninterface IERC3156FlashBorrower {\n    /**\n     * @dev Receive a flash loan.\n     * @param initiator The initiator of the loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param fee The additional amount of tokens to repay.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     * @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\"\n     */\n    function onFlashLoan(\n        address initiator,\n        address token,\n        uint256 amount,\n        uint256 fee,\n        bytes calldata data\n    ) external returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC3156FlashLender.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC3156FlashBorrower} from \"./IERC3156FlashBorrower.sol\";\n\n/**\n * @dev Interface of the ERC3156 FlashLender, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n */\ninterface IERC3156FlashLender {\n    /**\n     * @dev The amount of currency available to be lended.\n     * @param token The loan currency.\n     * @return The amount of `token` that can be borrowed.\n     */\n    function maxFlashLoan(address token) external view returns (uint256);\n\n    /**\n     * @dev The fee to be charged for a given loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @return The amount of `token` to be charged for the loan, on top of the returned principal.\n     */\n    function flashFee(address token, uint256 amount) external view returns (uint256);\n\n    /**\n     * @dev Initiate a flash loan.\n     * @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     */\n    function flashLoan(\n        IERC3156FlashBorrower receiver,\n        address token,\n        uint256 amount,\n        bytes calldata data\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.20;\n\nimport {IVotes} from \"../governance/utils/IVotes.sol\";\nimport {IERC6372} from \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/Checkpoints.sol)\n// This file was procedurally generated from scripts/generate/templates/Checkpoints.js.\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\n\n/**\n * @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n * time, and later looking up past values by block number. See {Votes} as an example.\n *\n * To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n * checkpoint for the current transaction block using the {push} function.\n */\nlibrary Checkpoints {\n    /**\n     * @dev A value was attempted to be inserted on a past checkpoint.\n     */\n    error CheckpointUnorderedInsertion();\n\n    struct Trace224 {\n        Checkpoint224[] _checkpoints;\n    }\n\n    struct Checkpoint224 {\n        uint32 _key;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n     * library.\n     */\n    function push(Trace224 storage self, uint32 key, uint224 value) internal returns (uint224, uint224) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace224 storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace224 storage self) internal view returns (bool exists, uint32 _key, uint224 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint224 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace224 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace224 storage self, uint32 pos) internal view returns (Checkpoint224 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint224[] storage self, uint32 key, uint224 value) private returns (uint224, uint224) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint224 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            if (last._key > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint224({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint224({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n     * `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n     * exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint224[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint224 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace208 {\n        Checkpoint208[] _checkpoints;\n    }\n\n    struct Checkpoint208 {\n        uint48 _key;\n        uint208 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n     * library.\n     */\n    function push(Trace208 storage self, uint48 key, uint208 value) internal returns (uint208, uint208) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace208 storage self) internal view returns (uint208) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace208 storage self) internal view returns (bool exists, uint48 _key, uint208 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint208 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace208 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace208 storage self, uint32 pos) internal view returns (Checkpoint208 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint208[] storage self, uint48 key, uint208 value) private returns (uint208, uint208) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint208 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            if (last._key > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint208({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint208({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n     * `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n     * exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint208[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint208 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace160 {\n        Checkpoint160[] _checkpoints;\n    }\n\n    struct Checkpoint160 {\n        uint96 _key;\n        uint160 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n     * library.\n     */\n    function push(Trace160 storage self, uint96 key, uint160 value) internal returns (uint160, uint160) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace160 storage self) internal view returns (uint160) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace160 storage self) internal view returns (bool exists, uint96 _key, uint160 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint160 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace160 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace160 storage self, uint32 pos) internal view returns (Checkpoint160 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint160[] storage self, uint96 key, uint160 value) private returns (uint160, uint160) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint160 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            if (last._key > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint160({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint160({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n     * `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n     * exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint160[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint160 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/types/Time.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/types/Time.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\nimport {SafeCast} from \"../math/SafeCast.sol\";\n\n/**\n * @dev This library provides helpers for manipulating time-related objects.\n *\n * It uses the following types:\n * - `uint48` for timepoints\n * - `uint32` for durations\n *\n * While the library doesn't provide specific types for timepoints and duration, it does provide:\n * - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n * - additional helper functions\n */\nlibrary Time {\n    using Time for *;\n\n    /**\n     * @dev Get the block timestamp as a Timepoint.\n     */\n    function timestamp() internal view returns (uint48) {\n        return SafeCast.toUint48(block.timestamp);\n    }\n\n    /**\n     * @dev Get the block number as a Timepoint.\n     */\n    function blockNumber() internal view returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    // ==================================================== Delay =====================================================\n    /**\n     * @dev A `Delay` is a uint32 duration that can be programmed to change value automatically at a given point in the\n     * future. The \"effect\" timepoint describes when the transitions happens from the \"old\" value to the \"new\" value.\n     * This allows updating the delay applied to some operation while keeping some guarantees.\n     *\n     * In particular, the {update} function guarantees that if the delay is reduced, the old delay still applies for\n     * some time. For example if the delay is currently 7 days to do an upgrade, the admin should not be able to set\n     * the delay to 0 and upgrade immediately. If the admin wants to reduce the delay, the old delay (7 days) should\n     * still apply for some time.\n     *\n     *\n     * The `Delay` type is 112 bits long, and packs the following:\n     *\n     * ```\n     *   | [uint48]: effect date (timepoint)\n     *   |           | [uint32]: value before (duration)\n     *   ↓           ↓       ↓ [uint32]: value after (duration)\n     * 0xAAAAAAAAAAAABBBBBBBBCCCCCCCC\n     * ```\n     *\n     * NOTE: The {get} and {withUpdate} functions operate using timestamps. Block number based delays are not currently\n     * supported.\n     */\n    type Delay is uint112;\n\n    /**\n     * @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature\n     */\n    function toDelay(uint32 duration) internal pure returns (Delay) {\n        return Delay.wrap(duration);\n    }\n\n    /**\n     * @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n     * change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered.\n     */\n    function _getFullAt(Delay self, uint48 timepoint) private pure returns (uint32, uint32, uint48) {\n        (uint32 valueBefore, uint32 valueAfter, uint48 effect) = self.unpack();\n        return effect <= timepoint ? (valueAfter, 0, 0) : (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n     * effect timepoint is 0, then the pending value should not be considered.\n     */\n    function getFull(Delay self) internal view returns (uint32, uint32, uint48) {\n        return _getFullAt(self, timestamp());\n    }\n\n    /**\n     * @dev Get the current value.\n     */\n    function get(Delay self) internal view returns (uint32) {\n        (uint32 delay, , ) = self.getFull();\n        return delay;\n    }\n\n    /**\n     * @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n     * enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n     * new delay becomes effective.\n     */\n    function withUpdate(\n        Delay self,\n        uint32 newValue,\n        uint32 minSetback\n    ) internal view returns (Delay updatedDelay, uint48 effect) {\n        uint32 value = self.get();\n        uint32 setback = uint32(Math.max(minSetback, value > newValue ? value - newValue : 0));\n        effect = timestamp() + setback;\n        return (pack(value, newValue, effect), effect);\n    }\n\n    /**\n     * @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint).\n     */\n    function unpack(Delay self) internal pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        uint112 raw = Delay.unwrap(self);\n\n        valueAfter = uint32(raw);\n        valueBefore = uint32(raw >> 32);\n        effect = uint48(raw >> 64);\n\n        return (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev pack the components into a Delay object.\n     */\n    function pack(uint32 valueBefore, uint32 valueAfter, uint48 effect) internal pure returns (Delay) {\n        return Delay.wrap((uint112(effect) << 64) | (uint112(valueBefore) << 32) | uint112(valueAfter));\n    }\n}\n"},"contracts/ERC20UpgradableV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\ncontract WAY is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, ERC20PausableUpgradeable, OwnableUpgradeable, ERC20PermitUpgradeable, ERC20VotesUpgradeable, ERC20FlashMintUpgradeable {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(address initialOwner) initializer public {\n        __ERC20_init(\"WAY\", \"WAY\");\n        __ERC20Burnable_init();\n        __ERC20Pausable_init();\n        __Ownable_init(initialOwner);\n        __ERC20Permit_init(\"WAY\");\n        __ERC20Votes_init();\n        __ERC20FlashMint_init();\n\n        _mint(msg.sender, 540000000 * 10 ** decimals());\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address from, address to, uint256 value)\n    internal\n    override(ERC20Upgradeable, ERC20PausableUpgradeable, ERC20VotesUpgradeable)\n    {\n        super._update(from, to, value);\n    }\n\n    function nonces(address owner)\n    public\n    view\n    override(ERC20PermitUpgradeable, NoncesUpgradeable)\n    returns (uint256)\n    {\n        return super.nonces(owner);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":1000000},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2452],"Initializable":[1097],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":2453,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":1098,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":1097,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":2452,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,2452,1097],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nodeType":"YulBlock","src":"1289:56:0","statements":[{"nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,860,863],"usedEvents":[41,868]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol","exportedSymbols":{"Checkpoints":[8716],"ContextUpgradeable":[2452],"ECDSA":[4156],"EIP712Upgradeable":[3083],"IERC5805":[3261],"Initializable":[1097],"NoncesUpgradeable":[2563],"SafeCast":[7039],"Time":[8991],"VotesUpgradeable":[843]},"id":844,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","file":"@openzeppelin/contracts/interfaces/IERC5805.sol","id":198,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":844,"sourceUnit":3262,"src":"135:73:1","symbolAliases":[{"foreign":{"id":197,"name":"IERC5805","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"143:8:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":200,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":844,"sourceUnit":2453,"src":"209:70:1","symbolAliases":[{"foreign":{"id":199,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"217:18:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol","file":"../../utils/NoncesUpgradeable.sol","id":202,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":844,"sourceUnit":2564,"src":"280:68:1","symbolAliases":[{"foreign":{"id":201,"name":"NoncesUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"288:17:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","file":"../../utils/cryptography/EIP712Upgradeable.sol","id":204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":844,"sourceUnit":3084,"src":"349:81:1","symbolAliases":[{"foreign":{"id":203,"name":"EIP712Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"357:17:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","id":206,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":844,"sourceUnit":8717,"src":"431:82:1","symbolAliases":[{"foreign":{"id":205,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"439:11:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"@openzeppelin/contracts/utils/math/SafeCast.sol","id":208,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":844,"sourceUnit":7040,"src":"514:73:1","symbolAliases":[{"foreign":{"id":207,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"522:8:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":210,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":844,"sourceUnit":4157,"src":"588:75:1","symbolAliases":[{"foreign":{"id":209,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"596:5:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","file":"@openzeppelin/contracts/utils/types/Time.sol","id":212,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":844,"sourceUnit":8992,"src":"664:66:1","symbolAliases":[{"foreign":{"id":211,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"672:4:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":214,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":844,"sourceUnit":1098,"src":"731:66:1","symbolAliases":[{"foreign":{"id":213,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"739:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":216,"name":"Initializable","nameLocations":["2153:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":1097,"src":"2153:13:1"},"id":217,"nodeType":"InheritanceSpecifier","src":"2153:13:1"},{"baseName":{"id":218,"name":"ContextUpgradeable","nameLocations":["2168:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":2452,"src":"2168:18:1"},"id":219,"nodeType":"InheritanceSpecifier","src":"2168:18:1"},{"baseName":{"id":220,"name":"EIP712Upgradeable","nameLocations":["2188:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":3083,"src":"2188:17:1"},"id":221,"nodeType":"InheritanceSpecifier","src":"2188:17:1"},{"baseName":{"id":222,"name":"NoncesUpgradeable","nameLocations":["2207:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":2563,"src":"2207:17:1"},"id":223,"nodeType":"InheritanceSpecifier","src":"2207:17:1"},{"baseName":{"id":224,"name":"IERC5805","nameLocations":["2226:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":3261,"src":"2226:8:1"},"id":225,"nodeType":"InheritanceSpecifier","src":"2226:8:1"}],"canonicalName":"VotesUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"799:1315:1","text":" @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n This contract is often combined with a token contract such that voting units correspond to token units. For an\n example, see {ERC721Votes}.\n The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n cost of this history tracking optional.\n When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n previous example, it would be included in {ERC721-_update})."},"fullyImplemented":false,"id":843,"internalFunctionIDs":{"820":1,"834":2},"linearizedBaseContracts":[843,3261,3166,3276,2563,3083,3250,2452,1097],"name":"VotesUpgradeable","nameLocation":"2133:16:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":229,"libraryName":{"id":226,"name":"Checkpoints","nameLocations":["2247:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":8716,"src":"2247:11:1"},"nodeType":"UsingForDirective","src":"2241:43:1","typeName":{"id":228,"nodeType":"UserDefinedTypeName","pathNode":{"id":227,"name":"Checkpoints.Trace208","nameLocations":["2263:11:1","2275:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":7678,"src":"2263:20:1"},"referencedDeclaration":7678,"src":"2263:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},{"constant":true,"id":234,"mutability":"constant","name":"DELEGATION_TYPEHASH","nameLocation":"2315:19:1","nodeType":"VariableDeclaration","scope":843,"src":"2290:126:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2290:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2355:60:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":231,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2345:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2345:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"canonicalName":"VotesUpgradeable.VotesStorage","documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"2423:63:1","text":"@custom:storage-location erc7201:openzeppelin.storage.Votes"},"id":248,"members":[{"constant":false,"id":239,"mutability":"mutable","name":"_delegatee","nameLocation":"2557:10:1","nodeType":"VariableDeclaration","scope":248,"src":"2521:46:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":238,"keyName":"account","keyNameLocation":"2537:7:1","keyType":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"2529:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2521:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"2548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"_delegateCheckpoints","nameLocation":"2629:20:1","nodeType":"VariableDeclaration","scope":248,"src":"2578:71:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7678_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"typeName":{"id":243,"keyName":"delegatee","keyNameLocation":"2594:9:1","keyType":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"2586:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2578:50:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7678_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":242,"nodeType":"UserDefinedTypeName","pathNode":{"id":241,"name":"Checkpoints.Trace208","nameLocations":["2607:11:1","2619:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":7678,"src":"2607:20:1"},"referencedDeclaration":7678,"src":"2607:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"_totalCheckpoints","nameLocation":"2681:17:1","nodeType":"VariableDeclaration","scope":248,"src":"2660:38:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":246,"nodeType":"UserDefinedTypeName","pathNode":{"id":245,"name":"Checkpoints.Trace208","nameLocations":["2660:11:1","2672:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":7678,"src":"2660:20:1"},"referencedDeclaration":7678,"src":"2660:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"name":"VotesStorage","nameLocation":"2498:12:1","nodeType":"StructDefinition","scope":843,"src":"2491:214:1","visibility":"public"},{"constant":true,"id":251,"mutability":"constant","name":"VotesStorageLocation","nameLocation":"2845:20:1","nodeType":"VariableDeclaration","scope":843,"src":"2820:114:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2820:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865386232366333306661643734313938393536303332613335333364393033333835643536646437393561663536303139366639633738643461663430643030","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:66:1","typeDescriptions":{"typeIdentifier":"t_rational_105251826357947872113247120617884647161698350478488980636452940128408986455296_by_1","typeString":"int_const 1052...(70 digits omitted)...5296"},"value":"0xe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d00"},"visibility":"private"},{"body":{"id":258,"nodeType":"Block","src":"3015:79:1","statements":[{"AST":{"nodeType":"YulBlock","src":"3034:54:1","statements":[{"nodeType":"YulAssignment","src":"3048:30:1","value":{"name":"VotesStorageLocation","nodeType":"YulIdentifier","src":"3058:20:1"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"3048:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":255,"isOffset":false,"isSlot":true,"src":"3048:6:1","suffix":"slot","valueSize":1},{"declaration":251,"isOffset":false,"isSlot":false,"src":"3058:20:1","valueSize":1}],"id":257,"nodeType":"InlineAssembly","src":"3025:63:1"}]},"id":259,"implemented":true,"kind":"function","modifiers":[],"name":"_getVotesStorage","nameLocation":"2950:16:1","nodeType":"FunctionDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[],"src":"2966:2:1"},"returnParameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"$","nameLocation":"3012:1:1","nodeType":"VariableDeclaration","scope":259,"src":"2991:22:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"},"typeName":{"id":254,"nodeType":"UserDefinedTypeName","pathNode":{"id":253,"name":"VotesStorage","nameLocations":["2991:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"2991:12:1"},"referencedDeclaration":248,"src":"2991:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"}},"visibility":"internal"}],"src":"2990:24:1"},"scope":843,"src":"2941:153:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"3100:59:1","text":" @dev The clock was incorrectly modified."},"errorSelector":"6ff07140","id":262,"name":"ERC6372InconsistentClock","nameLocation":"3170:24:1","nodeType":"ErrorDefinition","parameters":{"id":261,"nodeType":"ParameterList","parameters":[],"src":"3194:2:1"},"src":"3164:33:1"},{"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"3203:64:1","text":" @dev Lookup to future votes is not available."},"errorSelector":"ecd3f81e","id":269,"name":"ERC5805FutureLookup","nameLocation":"3278:19:1","nodeType":"ErrorDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"timepoint","nameLocation":"3306:9:1","nodeType":"VariableDeclaration","scope":269,"src":"3298:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"3298:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"clock","nameLocation":"3324:5:1","nodeType":"VariableDeclaration","scope":269,"src":"3317:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":266,"name":"uint48","nodeType":"ElementaryTypeName","src":"3317:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3297:33:1"},"src":"3272:59:1"},{"body":{"id":274,"nodeType":"Block","src":"3387:7:1","statements":[]},"id":275,"implemented":true,"kind":"function","modifiers":[{"id":272,"kind":"modifierInvocation","modifierName":{"id":271,"name":"onlyInitializing","nameLocations":["3370:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"3370:16:1"},"nodeType":"ModifierInvocation","src":"3370:16:1"}],"name":"__Votes_init","nameLocation":"3346:12:1","nodeType":"FunctionDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[],"src":"3358:2:1"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[],"src":"3387:0:1"},"scope":843,"src":"3337:57:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":280,"nodeType":"Block","src":"3460:7:1","statements":[]},"id":281,"implemented":true,"kind":"function","modifiers":[{"id":278,"kind":"modifierInvocation","modifierName":{"id":277,"name":"onlyInitializing","nameLocations":["3443:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"3443:16:1"},"nodeType":"ModifierInvocation","src":"3443:16:1"}],"name":"__Votes_init_unchained","nameLocation":"3409:22:1","nodeType":"FunctionDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[],"src":"3431:2:1"},"returnParameters":{"id":279,"nodeType":"ParameterList","parameters":[],"src":"3460:0:1"},"scope":843,"src":"3400:67:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3269],"body":{"id":291,"nodeType":"Block","src":"3737:42:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":287,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"3754:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$8991_$","typeString":"type(library Time)"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3759:11:1","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":8751,"src":"3754:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3754:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":286,"id":290,"nodeType":"Return","src":"3747:25:1"}]},"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"3472:206:1","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match."},"functionSelector":"91ddadf4","id":292,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"3692:5:1","nodeType":"FunctionDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[],"src":"3697:2:1"},"returnParameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":292,"src":"3729:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":284,"name":"uint48","nodeType":"ElementaryTypeName","src":"3729:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3728:8:1"},"scope":843,"src":"3683:96:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3275],"body":{"id":311,"nodeType":"Block","src":"4000:206:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":298,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"4063:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4063:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":300,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"4074:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$8991_$","typeString":"type(library Time)"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4079:11:1","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":8751,"src":"4074:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4074:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4063:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":308,"nodeType":"IfStatement","src":"4059:93:1","trueBody":{"id":307,"nodeType":"Block","src":"4094:58:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":304,"name":"ERC6372InconsistentClock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"4115:24:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4115:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":306,"nodeType":"RevertStatement","src":"4108:33:1"}]}},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4168:31:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":297,"id":310,"nodeType":"Return","src":"4161:38:1"}]},"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"3785:91:1","text":" @dev Machine-readable description of the clock as specified in EIP-6372."},"functionSelector":"4bf5d7e9","id":312,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"3943:10:1","nodeType":"FunctionDefinition","parameters":{"id":294,"nodeType":"ParameterList","parameters":[],"src":"3953:2:1"},"returnParameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":312,"src":"3985:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":295,"name":"string","nodeType":"ElementaryTypeName","src":"3985:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3984:15:1"},"scope":843,"src":"3934:272:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3117],"body":{"id":333,"nodeType":"Block","src":"4369:117:1","statements":[{"assignments":[322],"declarations":[{"constant":false,"id":322,"mutability":"mutable","name":"$","nameLocation":"4400:1:1","nodeType":"VariableDeclaration","scope":333,"src":"4379:22:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"},"typeName":{"id":321,"nodeType":"UserDefinedTypeName","pathNode":{"id":320,"name":"VotesStorage","nameLocations":["4379:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"4379:12:1"},"referencedDeclaration":248,"src":"4379:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"}},"visibility":"internal"}],"id":325,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":323,"name":"_getVotesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"4404:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VotesStorage_$248_storage_ptr_$","typeString":"function () pure returns (struct VotesUpgradeable.VotesStorage storage pointer)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4404:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4379:43:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"expression":{"id":326,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"4439:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4441:20:1","memberName":"_delegateCheckpoints","nodeType":"MemberAccess","referencedDeclaration":244,"src":"4439:22:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7678_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":329,"indexExpression":{"id":328,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"4462:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4439:31:1","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4471:6:1","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":7903,"src":"4439:38:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7678_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7678_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4439:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":319,"id":332,"nodeType":"Return","src":"4432:47:1"}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"4212:79:1","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"4305:8:1","nodeType":"FunctionDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"account","nameLocation":"4322:7:1","nodeType":"VariableDeclaration","scope":334,"src":"4314:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"4314:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4313:17:1"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"4360:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"4360:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4359:9:1"},"scope":843,"src":"4296:190:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3127],"body":{"id":376,"nodeType":"Block","src":"4967:323:1","statements":[{"assignments":[346],"declarations":[{"constant":false,"id":346,"mutability":"mutable","name":"$","nameLocation":"4998:1:1","nodeType":"VariableDeclaration","scope":376,"src":"4977:22:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"},"typeName":{"id":345,"nodeType":"UserDefinedTypeName","pathNode":{"id":344,"name":"VotesStorage","nameLocations":["4977:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"4977:12:1"},"referencedDeclaration":248,"src":"4977:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"}},"visibility":"internal"}],"id":349,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":347,"name":"_getVotesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"5002:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VotesStorage_$248_storage_ptr_$","typeString":"function () pure returns (struct VotesUpgradeable.VotesStorage storage pointer)"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5002:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4977:43:1"},{"assignments":[351],"declarations":[{"constant":false,"id":351,"mutability":"mutable","name":"currentTimepoint","nameLocation":"5037:16:1","nodeType":"VariableDeclaration","scope":376,"src":"5030:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":350,"name":"uint48","nodeType":"ElementaryTypeName","src":"5030:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":354,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"5056:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5056:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"5030:33:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":355,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5077:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":356,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"5090:16:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"5077:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":364,"nodeType":"IfStatement","src":"5073:115:1","trueBody":{"id":363,"nodeType":"Block","src":"5108:80:1","statements":[{"errorCall":{"arguments":[{"id":359,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5149:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":360,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"5160:16:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":358,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"5129:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5129:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"RevertStatement","src":"5122:55:1"}]}},{"expression":{"arguments":[{"arguments":[{"id":372,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5272:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":370,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"5254:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7039_$","typeString":"type(library SafeCast)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5263:8:1","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6039,"src":"5254:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5254:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"baseExpression":{"expression":{"id":365,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5204:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"id":366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5206:20:1","memberName":"_delegateCheckpoints","nodeType":"MemberAccess","referencedDeclaration":244,"src":"5204:22:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7678_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":368,"indexExpression":{"id":367,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5227:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5204:31:1","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":369,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5236:17:1","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":7873,"src":"5204:49:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7678_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7678_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5204:79:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":343,"id":375,"nodeType":"Return","src":"5197:86:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"4492:374:1","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"3a46b1a8","id":377,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"4880:12:1","nodeType":"FunctionDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"account","nameLocation":"4901:7:1","nodeType":"VariableDeclaration","scope":377,"src":"4893:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"4893:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"timepoint","nameLocation":"4918:9:1","nodeType":"VariableDeclaration","scope":377,"src":"4910:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"4910:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4892:36:1"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":377,"src":"4958:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"4958:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4957:9:1"},"scope":843,"src":"4871:419:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3135],"body":{"id":415,"nodeType":"Block","src":"6011:311:1","statements":[{"assignments":[387],"declarations":[{"constant":false,"id":387,"mutability":"mutable","name":"$","nameLocation":"6042:1:1","nodeType":"VariableDeclaration","scope":415,"src":"6021:22:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"},"typeName":{"id":386,"nodeType":"UserDefinedTypeName","pathNode":{"id":385,"name":"VotesStorage","nameLocations":["6021:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"6021:12:1"},"referencedDeclaration":248,"src":"6021:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"}},"visibility":"internal"}],"id":390,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":388,"name":"_getVotesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6046:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VotesStorage_$248_storage_ptr_$","typeString":"function () pure returns (struct VotesUpgradeable.VotesStorage storage pointer)"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6046:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6021:43:1"},{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"currentTimepoint","nameLocation":"6081:16:1","nodeType":"VariableDeclaration","scope":415,"src":"6074:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":391,"name":"uint48","nodeType":"ElementaryTypeName","src":"6074:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":395,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":393,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"6100:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6100:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"6074:33:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":396,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"6121:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":397,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"6134:16:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"6121:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":405,"nodeType":"IfStatement","src":"6117:115:1","trueBody":{"id":404,"nodeType":"Block","src":"6152:80:1","statements":[{"errorCall":{"arguments":[{"id":400,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"6193:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":401,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"6204:16:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":399,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"6173:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6173:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":403,"nodeType":"RevertStatement","src":"6166:55:1"}]}},{"expression":{"arguments":[{"arguments":[{"id":411,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"6304:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":409,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"6286:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7039_$","typeString":"type(library SafeCast)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6295:8:1","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6039,"src":"6286:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6286:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"expression":{"id":406,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"6248:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"id":407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6250:17:1","memberName":"_totalCheckpoints","nodeType":"MemberAccess","referencedDeclaration":247,"src":"6248:19:1","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6268:17:1","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":7873,"src":"6248:37:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7678_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7678_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6248:67:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":384,"id":414,"nodeType":"Return","src":"6241:74:1"}]},"documentation":{"id":378,"nodeType":"StructuredDocumentation","src":"5296:625:1","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"8e539e8c","id":416,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"5935:18:1","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"timepoint","nameLocation":"5962:9:1","nodeType":"VariableDeclaration","scope":416,"src":"5954:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":379,"name":"uint256","nodeType":"ElementaryTypeName","src":"5954:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5953:19:1"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":416,"src":"6002:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":382,"name":"uint256","nodeType":"ElementaryTypeName","src":"6002:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6001:9:1"},"scope":843,"src":"5926:396:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":433,"nodeType":"Block","src":"6466:105:1","statements":[{"assignments":[424],"declarations":[{"constant":false,"id":424,"mutability":"mutable","name":"$","nameLocation":"6497:1:1","nodeType":"VariableDeclaration","scope":433,"src":"6476:22:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"},"typeName":{"id":423,"nodeType":"UserDefinedTypeName","pathNode":{"id":422,"name":"VotesStorage","nameLocations":["6476:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"6476:12:1"},"referencedDeclaration":248,"src":"6476:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"}},"visibility":"internal"}],"id":427,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":425,"name":"_getVotesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6501:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VotesStorage_$248_storage_ptr_$","typeString":"function () pure returns (struct VotesUpgradeable.VotesStorage storage pointer)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6501:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6476:43:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":428,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"6536:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"id":429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6538:17:1","memberName":"_totalCheckpoints","nodeType":"MemberAccess","referencedDeclaration":247,"src":"6536:19:1","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6556:6:1","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":7903,"src":"6536:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7678_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7678_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6536:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":421,"id":432,"nodeType":"Return","src":"6529:35:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"6328:66:1","text":" @dev Returns the current total supply of votes."},"id":434,"implemented":true,"kind":"function","modifiers":[],"name":"_getTotalSupply","nameLocation":"6408:15:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"6423:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":434,"src":"6457:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"6457:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6456:9:1"},"scope":843,"src":"6399:172:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[3143],"body":{"id":453,"nodeType":"Block","src":"6727:98:1","statements":[{"assignments":[444],"declarations":[{"constant":false,"id":444,"mutability":"mutable","name":"$","nameLocation":"6758:1:1","nodeType":"VariableDeclaration","scope":453,"src":"6737:22:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"},"typeName":{"id":443,"nodeType":"UserDefinedTypeName","pathNode":{"id":442,"name":"VotesStorage","nameLocations":["6737:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"6737:12:1"},"referencedDeclaration":248,"src":"6737:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"}},"visibility":"internal"}],"id":447,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":445,"name":"_getVotesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6762:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VotesStorage_$248_storage_ptr_$","typeString":"function () pure returns (struct VotesUpgradeable.VotesStorage storage pointer)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6762:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6737:43:1"},{"expression":{"baseExpression":{"expression":{"id":448,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"6797:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"id":449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6799:10:1","memberName":"_delegatee","nodeType":"MemberAccess","referencedDeclaration":239,"src":"6797:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":451,"indexExpression":{"id":450,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"6810:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6797:21:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":441,"id":452,"nodeType":"Return","src":"6790:28:1"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"6577:71:1","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":454,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"6662:9:1","nodeType":"FunctionDefinition","parameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"account","nameLocation":"6680:7:1","nodeType":"VariableDeclaration","scope":454,"src":"6672:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"6672:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6671:17:1"},"returnParameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":454,"src":"6718:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":439,"name":"address","nodeType":"ElementaryTypeName","src":"6718:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6717:9:1"},"scope":843,"src":"6653:172:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3149],"body":{"id":470,"nodeType":"Block","src":"6959:86:1","statements":[{"assignments":[461],"declarations":[{"constant":false,"id":461,"mutability":"mutable","name":"account","nameLocation":"6977:7:1","nodeType":"VariableDeclaration","scope":470,"src":"6969:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"6969:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":464,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":462,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"6987:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6987:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6969:30:1"},{"expression":{"arguments":[{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7019:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":467,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"7028:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":465,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"7009:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7009:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":469,"nodeType":"ExpressionStatement","src":"7009:29:1"}]},"documentation":{"id":455,"nodeType":"StructuredDocumentation","src":"6831:71:1","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":471,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"6916:8:1","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"delegatee","nameLocation":"6933:9:1","nodeType":"VariableDeclaration","scope":471,"src":"6925:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"6925:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6924:19:1"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"6959:0:1"},"scope":843,"src":"6907:138:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3165],"body":{"id":527,"nodeType":"Block","src":"7296:381:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":487,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7310:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7316:9:1","memberName":"timestamp","nodeType":"MemberAccess","src":"7310:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":489,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"7328:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":496,"nodeType":"IfStatement","src":"7306:91:1","trueBody":{"id":495,"nodeType":"Block","src":"7336:61:1","statements":[{"errorCall":{"arguments":[{"id":492,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"7379:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":491,"name":"VotesExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"7357:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7357:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"RevertStatement","src":"7350:36:1"}]}},{"assignments":[498],"declarations":[{"constant":false,"id":498,"mutability":"mutable","name":"signer","nameLocation":"7414:6:1","nodeType":"VariableDeclaration","scope":527,"src":"7406:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"7406:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":516,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":505,"name":"DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"7488:19:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":506,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"7509:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":507,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"7520:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":508,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"7527:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":503,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7477:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7481:6:1","memberName":"encode","nodeType":"MemberAccess","src":"7477:10:1","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7477:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":502,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7467:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7467:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":501,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"7450:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7450:86:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":512,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"7550:1:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":513,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"7565:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":514,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"7580:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":499,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"7423:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4156_$","typeString":"type(library ECDSA)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7429:7:1","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4106,"src":"7423:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7423:168:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7406:185:1"},{"expression":{"arguments":[{"id":518,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"7618:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":519,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"7626:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":517,"name":"_useCheckedNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"7601:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7601:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":521,"nodeType":"ExpressionStatement","src":"7601:31:1"},{"expression":{"arguments":[{"id":523,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"7652:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":524,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"7660:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":522,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"7642:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7642:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":526,"nodeType":"ExpressionStatement","src":"7642:28:1"}]},"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"7051:67:1","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":528,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"7132:13:1","nodeType":"FunctionDefinition","parameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"delegatee","nameLocation":"7163:9:1","nodeType":"VariableDeclaration","scope":528,"src":"7155:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"7155:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"nonce","nameLocation":"7190:5:1","nodeType":"VariableDeclaration","scope":528,"src":"7182:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"7182:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"expiry","nameLocation":"7213:6:1","nodeType":"VariableDeclaration","scope":528,"src":"7205:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"7205:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"v","nameLocation":"7235:1:1","nodeType":"VariableDeclaration","scope":528,"src":"7229:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":479,"name":"uint8","nodeType":"ElementaryTypeName","src":"7229:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"r","nameLocation":"7254:1:1","nodeType":"VariableDeclaration","scope":528,"src":"7246:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7246:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":484,"mutability":"mutable","name":"s","nameLocation":"7273:1:1","nodeType":"VariableDeclaration","scope":528,"src":"7265:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7265:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7145:135:1"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[],"src":"7296:0:1"},"scope":843,"src":"7123:554:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":570,"nodeType":"Block","src":"7927:295:1","statements":[{"assignments":[538],"declarations":[{"constant":false,"id":538,"mutability":"mutable","name":"$","nameLocation":"7958:1:1","nodeType":"VariableDeclaration","scope":570,"src":"7937:22:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"},"typeName":{"id":537,"nodeType":"UserDefinedTypeName","pathNode":{"id":536,"name":"VotesStorage","nameLocations":["7937:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"7937:12:1"},"referencedDeclaration":248,"src":"7937:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"}},"visibility":"internal"}],"id":541,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":539,"name":"_getVotesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"7962:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VotesStorage_$248_storage_ptr_$","typeString":"function () pure returns (struct VotesUpgradeable.VotesStorage storage pointer)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7962:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7937:43:1"},{"assignments":[543],"declarations":[{"constant":false,"id":543,"mutability":"mutable","name":"oldDelegate","nameLocation":"7998:11:1","nodeType":"VariableDeclaration","scope":570,"src":"7990:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"7990:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":547,"initialValue":{"arguments":[{"id":545,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"8022:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":544,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"8012:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8012:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7990:40:1"},{"expression":{"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":548,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"8040:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"id":551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8042:10:1","memberName":"_delegatee","nodeType":"MemberAccess","referencedDeclaration":239,"src":"8040:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":552,"indexExpression":{"id":550,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"8053:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8040:21:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":553,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"8064:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8040:33:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":555,"nodeType":"ExpressionStatement","src":"8040:33:1"},{"eventCall":{"arguments":[{"id":557,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"8105:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":558,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"8114:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":559,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"8127:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":556,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"8089:15:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8089:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":561,"nodeType":"EmitStatement","src":"8084:53:1"},{"expression":{"arguments":[{"id":563,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"8166:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":564,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"8179:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":566,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"8206:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":565,"name":"_getVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"8190:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8190:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":562,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"8147:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8147:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":569,"nodeType":"ExpressionStatement","src":"8147:68:1"}]},"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"7683:167:1","text":" @dev Delegate all of `account`'s voting units to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":571,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"7864:9:1","nodeType":"FunctionDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"account","nameLocation":"7882:7:1","nodeType":"VariableDeclaration","scope":571,"src":"7874:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"7874:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"delegatee","nameLocation":"7899:9:1","nodeType":"VariableDeclaration","scope":571,"src":"7891:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"7891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7873:36:1"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[],"src":"7927:0:1"},"scope":843,"src":"7855:367:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":633,"nodeType":"Block","src":"8545:367:1","statements":[{"assignments":[583],"declarations":[{"constant":false,"id":583,"mutability":"mutable","name":"$","nameLocation":"8576:1:1","nodeType":"VariableDeclaration","scope":633,"src":"8555:22:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"},"typeName":{"id":582,"nodeType":"UserDefinedTypeName","pathNode":{"id":581,"name":"VotesStorage","nameLocations":["8555:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"8555:12:1"},"referencedDeclaration":248,"src":"8555:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"}},"visibility":"internal"}],"id":586,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":584,"name":"_getVotesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"8580:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VotesStorage_$248_storage_ptr_$","typeString":"function () pure returns (struct VotesUpgradeable.VotesStorage storage pointer)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8580:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"8555:43:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":587,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"8612:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8628:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8620:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"8620:7:1","typeDescriptions":{}}},"id":591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8620:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8612:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":604,"nodeType":"IfStatement","src":"8608:109:1","trueBody":{"id":603,"nodeType":"Block","src":"8632:85:1","statements":[{"expression":{"arguments":[{"expression":{"id":594,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"8652:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"id":595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8654:17:1","memberName":"_totalCheckpoints","nodeType":"MemberAccess","referencedDeclaration":247,"src":"8652:19:1","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":596,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"8673:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":599,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"8698:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":597,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"8679:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7039_$","typeString":"type(library SafeCast)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8688:9:1","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5479,"src":"8679:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8679:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$7678_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":593,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"8646:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7678_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8646:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":602,"nodeType":"ExpressionStatement","src":"8646:60:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":605,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"8730:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8744:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8736:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"8736:7:1","typeDescriptions":{}}},"id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8736:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8730:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":622,"nodeType":"IfStatement","src":"8726:112:1","trueBody":{"id":621,"nodeType":"Block","src":"8748:90:1","statements":[{"expression":{"arguments":[{"expression":{"id":612,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"8768:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"id":613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8770:17:1","memberName":"_totalCheckpoints","nodeType":"MemberAccess","referencedDeclaration":247,"src":"8768:19:1","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":614,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"8789:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":617,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"8819:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":615,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"8800:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7039_$","typeString":"type(library SafeCast)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8809:9:1","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5479,"src":"8800:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8800:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$7678_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":611,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"8762:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7678_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8762:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":620,"nodeType":"ExpressionStatement","src":"8762:65:1"}]}},{"expression":{"arguments":[{"arguments":[{"id":625,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"8876:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":624,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"8866:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8866:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":628,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"8893:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":627,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"8883:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":630,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"8898:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":623,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"8847:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8847:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":632,"nodeType":"ExpressionStatement","src":"8847:58:1"}]},"documentation":{"id":572,"nodeType":"StructuredDocumentation","src":"8228:223:1","text":" @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n should be zero. Total supply of voting units will be adjusted with mints and burns."},"id":634,"implemented":true,"kind":"function","modifiers":[],"name":"_transferVotingUnits","nameLocation":"8465:20:1","nodeType":"FunctionDefinition","parameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"from","nameLocation":"8494:4:1","nodeType":"VariableDeclaration","scope":634,"src":"8486:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"8486:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"to","nameLocation":"8508:2:1","nodeType":"VariableDeclaration","scope":634,"src":"8500:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"8500:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":578,"mutability":"mutable","name":"amount","nameLocation":"8520:6:1","nodeType":"VariableDeclaration","scope":634,"src":"8512:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"8512:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8485:42:1"},"returnParameters":{"id":580,"nodeType":"ParameterList","parameters":[],"src":"8545:0:1"},"scope":843,"src":"8456:456:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":719,"nodeType":"Block","src":"9076:759:1","statements":[{"assignments":[646],"declarations":[{"constant":false,"id":646,"mutability":"mutable","name":"$","nameLocation":"9107:1:1","nodeType":"VariableDeclaration","scope":719,"src":"9086:22:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"},"typeName":{"id":645,"nodeType":"UserDefinedTypeName","pathNode":{"id":644,"name":"VotesStorage","nameLocations":["9086:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"9086:12:1"},"referencedDeclaration":248,"src":"9086:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"}},"visibility":"internal"}],"id":649,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":647,"name":"_getVotesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"9111:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VotesStorage_$248_storage_ptr_$","typeString":"function () pure returns (struct VotesUpgradeable.VotesStorage storage pointer)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9111:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"9086:43:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":650,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9143:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":651,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"9151:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9143:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":653,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"9157:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9166:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9157:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9143:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":718,"nodeType":"IfStatement","src":"9139:690:1","trueBody":{"id":717,"nodeType":"Block","src":"9169:660:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":657,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9187:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9195:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"9195:7:1","typeDescriptions":{}}},"id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9195:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9187:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":686,"nodeType":"IfStatement","src":"9183:317:1","trueBody":{"id":685,"nodeType":"Block","src":"9207:293:1","statements":[{"assignments":[664,666],"declarations":[{"constant":false,"id":664,"mutability":"mutable","name":"oldValue","nameLocation":"9234:8:1","nodeType":"VariableDeclaration","scope":685,"src":"9226:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":663,"name":"uint256","nodeType":"ElementaryTypeName","src":"9226:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"newValue","nameLocation":"9252:8:1","nodeType":"VariableDeclaration","scope":685,"src":"9244:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"9244:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":678,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":668,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"9291:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"id":669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9293:20:1","memberName":"_delegateCheckpoints","nodeType":"MemberAccess","referencedDeclaration":244,"src":"9291:22:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7678_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":671,"indexExpression":{"id":670,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9314:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9291:28:1","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":672,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"9341:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":675,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"9391:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":673,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"9372:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7039_$","typeString":"type(library SafeCast)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9381:9:1","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5479,"src":"9372:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9372:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$7678_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":667,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"9264:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7678_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9264:152:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"9225:191:1"},{"eventCall":{"arguments":[{"id":680,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9460:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":681,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"9466:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":682,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"9476:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":679,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"9439:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9439:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":684,"nodeType":"EmitStatement","src":"9434:51:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":687,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"9517:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9531:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9523:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"9523:7:1","typeDescriptions":{}}},"id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9523:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9517:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"9513:306:1","trueBody":{"id":715,"nodeType":"Block","src":"9535:284:1","statements":[{"assignments":[694,696],"declarations":[{"constant":false,"id":694,"mutability":"mutable","name":"oldValue","nameLocation":"9562:8:1","nodeType":"VariableDeclaration","scope":715,"src":"9554:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"9554:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"newValue","nameLocation":"9580:8:1","nodeType":"VariableDeclaration","scope":715,"src":"9572:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"9572:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":708,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":698,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"9619:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"id":699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9621:20:1","memberName":"_delegateCheckpoints","nodeType":"MemberAccess","referencedDeclaration":244,"src":"9619:22:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7678_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":701,"indexExpression":{"id":700,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"9642:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9619:26:1","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":702,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"9667:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":705,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"9712:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":703,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"9693:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7039_$","typeString":"type(library SafeCast)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9702:9:1","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5479,"src":"9693:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9693:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$7678_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":697,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"9592:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7678_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9592:145:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"9553:184:1"},{"eventCall":{"arguments":[{"id":710,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"9781:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":711,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"9785:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":712,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"9795:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":709,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"9760:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9760:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":714,"nodeType":"EmitStatement","src":"9755:49:1"}]}}]}}]},"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"8918:75:1","text":" @dev Moves delegated votes from one delegate to another."},"id":720,"implemented":true,"kind":"function","modifiers":[],"name":"_moveDelegateVotes","nameLocation":"9007:18:1","nodeType":"FunctionDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"from","nameLocation":"9034:4:1","nodeType":"VariableDeclaration","scope":720,"src":"9026:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"9026:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"to","nameLocation":"9048:2:1","nodeType":"VariableDeclaration","scope":720,"src":"9040:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":638,"name":"address","nodeType":"ElementaryTypeName","src":"9040:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":641,"mutability":"mutable","name":"amount","nameLocation":"9060:6:1","nodeType":"VariableDeclaration","scope":720,"src":"9052:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"9052:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9025:42:1"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[],"src":"9076:0:1"},"scope":843,"src":"8998:837:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":744,"nodeType":"Block","src":"9991:136:1","statements":[{"assignments":[730],"declarations":[{"constant":false,"id":730,"mutability":"mutable","name":"$","nameLocation":"10022:1:1","nodeType":"VariableDeclaration","scope":744,"src":"10001:22:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"},"typeName":{"id":729,"nodeType":"UserDefinedTypeName","pathNode":{"id":728,"name":"VotesStorage","nameLocations":["10001:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"10001:12:1"},"referencedDeclaration":248,"src":"10001:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"}},"visibility":"internal"}],"id":733,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":731,"name":"_getVotesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"10026:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VotesStorage_$248_storage_ptr_$","typeString":"function () pure returns (struct VotesUpgradeable.VotesStorage storage pointer)"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10026:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10001:43:1"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"expression":{"id":736,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"10079:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"id":737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10081:20:1","memberName":"_delegateCheckpoints","nodeType":"MemberAccess","referencedDeclaration":244,"src":"10079:22:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7678_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":739,"indexExpression":{"id":738,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"10102:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10079:31:1","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10111:6:1","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"10079:38:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7678_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Trace208_$7678_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint256)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10079:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":734,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"10061:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7039_$","typeString":"type(library SafeCast)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10070:8:1","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":6095,"src":"10061:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10061:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":727,"id":743,"nodeType":"Return","src":"10054:66:1"}]},"documentation":{"id":721,"nodeType":"StructuredDocumentation","src":"9841:64:1","text":" @dev Get number of checkpoints for `account`."},"id":745,"implemented":true,"kind":"function","modifiers":[],"name":"_numCheckpoints","nameLocation":"9919:15:1","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"mutability":"mutable","name":"account","nameLocation":"9943:7:1","nodeType":"VariableDeclaration","scope":745,"src":"9935:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"9935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9934:17:1"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":745,"src":"9983:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":725,"name":"uint32","nodeType":"ElementaryTypeName","src":"9983:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"9982:8:1"},"scope":843,"src":"9910:217:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":770,"nodeType":"Block","src":"10342:116:1","statements":[{"assignments":[758],"declarations":[{"constant":false,"id":758,"mutability":"mutable","name":"$","nameLocation":"10373:1:1","nodeType":"VariableDeclaration","scope":770,"src":"10352:22:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"},"typeName":{"id":757,"nodeType":"UserDefinedTypeName","pathNode":{"id":756,"name":"VotesStorage","nameLocations":["10352:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"10352:12:1"},"referencedDeclaration":248,"src":"10352:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage"}},"visibility":"internal"}],"id":761,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":759,"name":"_getVotesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"10377:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VotesStorage_$248_storage_ptr_$","typeString":"function () pure returns (struct VotesUpgradeable.VotesStorage storage pointer)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10377:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10352:43:1"},{"expression":{"arguments":[{"id":767,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10447:3:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"baseExpression":{"expression":{"id":762,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"10412:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_VotesStorage_$248_storage_ptr","typeString":"struct VotesUpgradeable.VotesStorage storage pointer"}},"id":763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10414:20:1","memberName":"_delegateCheckpoints","nodeType":"MemberAccess","referencedDeclaration":244,"src":"10412:22:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7678_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":765,"indexExpression":{"id":764,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"10435:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10412:31:1","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10444:2:1","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":7984,"src":"10412:34:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7678_storage_ptr_$_t_uint32_$returns$_t_struct$_Checkpoint208_$7683_memory_ptr_$attached_to$_t_struct$_Trace208_$7678_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10412:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":755,"id":769,"nodeType":"Return","src":"10405:46:1"}]},"documentation":{"id":746,"nodeType":"StructuredDocumentation","src":"10133:66:1","text":" @dev Get the `pos`-th checkpoint for `account`."},"id":771,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpoints","nameLocation":"10213:12:1","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":748,"mutability":"mutable","name":"account","nameLocation":"10243:7:1","nodeType":"VariableDeclaration","scope":771,"src":"10235:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"10235:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":750,"mutability":"mutable","name":"pos","nameLocation":"10267:3:1","nodeType":"VariableDeclaration","scope":771,"src":"10260:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":749,"name":"uint32","nodeType":"ElementaryTypeName","src":"10260:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"10225:51:1"},"returnParameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":771,"src":"10308:32:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":753,"nodeType":"UserDefinedTypeName","pathNode":{"id":752,"name":"Checkpoints.Checkpoint208","nameLocations":["10308:11:1","10320:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":7683,"src":"10308:25:1"},"referencedDeclaration":7683,"src":"10308:25:1","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"10307:34:1"},"scope":843,"src":"10204:254:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":805,"nodeType":"Block","src":"10649:70:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":795,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"10677:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10677:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":798,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"10689:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10695:6:1","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":7903,"src":"10689:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7678_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7678_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10689:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":801,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10705:5:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint208","typeString":"uint208"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":797,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"10686:2:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10686:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"expression":{"id":793,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"10666:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":794,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10672:4:1","memberName":"push","nodeType":"MemberAccess","referencedDeclaration":7706,"src":"10666:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7678_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$attached_to$_t_struct$_Trace208_$7678_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10666:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":792,"id":804,"nodeType":"Return","src":"10659:53:1"}]},"id":806,"implemented":true,"kind":"function","modifiers":[],"name":"_push","nameLocation":"10473:5:1","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"store","nameLocation":"10517:5:1","nodeType":"VariableDeclaration","scope":806,"src":"10488:34:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":773,"nodeType":"UserDefinedTypeName","pathNode":{"id":772,"name":"Checkpoints.Trace208","nameLocations":["10488:11:1","10500:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":7678,"src":"10488:20:1"},"referencedDeclaration":7678,"src":"10488:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"op","nameLocation":"10582:2:1","nodeType":"VariableDeclaration","scope":806,"src":"10532:52:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"typeName":{"id":783,"nodeType":"FunctionTypeName","parameterTypes":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"10541:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":775,"name":"uint208","nodeType":"ElementaryTypeName","src":"10541:7:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"10550:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":777,"name":"uint208","nodeType":"ElementaryTypeName","src":"10550:7:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10540:18:1"},"returnParameterTypes":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"10573:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":780,"name":"uint208","nodeType":"ElementaryTypeName","src":"10573:7:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10572:9:1"},"src":"10532:52:1","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"delta","nameLocation":"10602:5:1","nodeType":"VariableDeclaration","scope":806,"src":"10594:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":785,"name":"uint208","nodeType":"ElementaryTypeName","src":"10594:7:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10478:135:1"},"returnParameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":806,"src":"10631:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":788,"name":"uint208","nodeType":"ElementaryTypeName","src":"10631:7:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":806,"src":"10640:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":790,"name":"uint208","nodeType":"ElementaryTypeName","src":"10640:7:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10630:18:1"},"scope":843,"src":"10464:255:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":819,"nodeType":"Block","src":"10792:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":815,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"10809:1:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":816,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"10813:1:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"10809:5:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":814,"id":818,"nodeType":"Return","src":"10802:12:1"}]},"id":820,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"10734:4:1","nodeType":"FunctionDefinition","parameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"a","nameLocation":"10747:1:1","nodeType":"VariableDeclaration","scope":820,"src":"10739:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":807,"name":"uint208","nodeType":"ElementaryTypeName","src":"10739:7:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"b","nameLocation":"10758:1:1","nodeType":"VariableDeclaration","scope":820,"src":"10750:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":809,"name":"uint208","nodeType":"ElementaryTypeName","src":"10750:7:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10738:22:1"},"returnParameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":820,"src":"10783:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":812,"name":"uint208","nodeType":"ElementaryTypeName","src":"10783:7:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10782:9:1"},"scope":843,"src":"10725:96:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":833,"nodeType":"Block","src":"10899:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":829,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"10916:1:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":830,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"10920:1:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"10916:5:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":828,"id":832,"nodeType":"Return","src":"10909:12:1"}]},"id":834,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"10836:9:1","nodeType":"FunctionDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"a","nameLocation":"10854:1:1","nodeType":"VariableDeclaration","scope":834,"src":"10846:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":821,"name":"uint208","nodeType":"ElementaryTypeName","src":"10846:7:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"b","nameLocation":"10865:1:1","nodeType":"VariableDeclaration","scope":834,"src":"10857:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":823,"name":"uint208","nodeType":"ElementaryTypeName","src":"10857:7:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10845:22:1"},"returnParameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"10890:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":826,"name":"uint208","nodeType":"ElementaryTypeName","src":"10890:7:1","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10889:9:1"},"scope":843,"src":"10827:101:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"10934:72:1","text":" @dev Must return the voting units held by an account."},"id":842,"implemented":false,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"11020:15:1","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":842,"src":"11036:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"11036:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11035:9:1"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":842,"src":"11076:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":839,"name":"uint256","nodeType":"ElementaryTypeName","src":"11076:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11075:9:1"},"scope":843,"src":"11011:74:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":844,"src":"2115:8972:1","usedErrors":[262,269,860,863,2466,3091,3819,3824,3829,5294,7152],"usedEvents":[868,3100,3109,3230]}],"src":"109:10979:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[1097]},"id":1098,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":845,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"139:2209:2","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":1097,"linearizedBaseContracts":[1097],"name":"Initializable","nameLocation":"2367:13:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":847,"nodeType":"StructuredDocumentation","src":"2387:293:2","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":854,"members":[{"constant":false,"id":850,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:2","nodeType":"VariableDeclaration","scope":854,"src":"2813:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":849,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:2","nodeType":"VariableDeclaration","scope":854,"src":"2950:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":852,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:2","nodeType":"StructDefinition","scope":1097,"src":"2685:290:2","visibility":"public"},{"constant":true,"id":857,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:2","nodeType":"VariableDeclaration","scope":1097,"src":"3098:115:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:2","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":858,"nodeType":"StructuredDocumentation","src":"3220:60:2","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":860,"name":"InvalidInitialization","nameLocation":"3291:21:2","nodeType":"ErrorDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[],"src":"3312:2:2"},"src":"3285:30:2"},{"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"3321:57:2","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":863,"name":"NotInitializing","nameLocation":"3389:15:2","nodeType":"ErrorDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[],"src":"3404:2:2"},"src":"3383:24:2"},{"anonymous":false,"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"3413:90:2","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":868,"name":"Initialized","nameLocation":"3514:11:2","nodeType":"EventDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:2","nodeType":"VariableDeclaration","scope":868,"src":"3526:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":865,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:2"},"src":"3508:34:2"},{"body":{"id":950,"nodeType":"Block","src":"4092:1081:2","statements":[{"assignments":[873],"declarations":[{"constant":false,"id":873,"mutability":"mutable","name":"$","nameLocation":"4187:1:2","nodeType":"VariableDeclaration","scope":950,"src":"4158:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":872,"nodeType":"UserDefinedTypeName","pathNode":{"id":871,"name":"InitializableStorage","nameLocations":["4158:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"4158:20:2"},"referencedDeclaration":854,"src":"4158:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":876,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":874,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"4191:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$854_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:2"},{"assignments":[878],"declarations":[{"constant":false,"id":878,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:2","nodeType":"VariableDeclaration","scope":950,"src":"4279:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":877,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":882,"initialValue":{"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:2","subExpression":{"expression":{"id":879,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"4302:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":853,"src":"4302:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:2"},{"assignments":[884],"declarations":[{"constant":false,"id":884,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:2","nodeType":"VariableDeclaration","scope":950,"src":"4327:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":883,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":887,"initialValue":{"expression":{"id":885,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"4348:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":850,"src":"4348:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:2"},{"assignments":[889],"declarations":[{"constant":false,"id":889,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:2","nodeType":"VariableDeclaration","scope":950,"src":"4706:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":888,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":895,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":890,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"4726:11:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":893,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"4746:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:2"},{"assignments":[897],"declarations":[{"constant":false,"id":897,"mutability":"mutable","name":"construction","nameLocation":"4775:12:2","nodeType":"VariableDeclaration","scope":950,"src":"4770:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":896,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":910,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":898,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"4790:11:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":903,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$1097","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$1097","typeString":"contract Initializable"}],"id":902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:2","typeDescriptions":{}}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:2","memberName":"code","nodeType":"MemberAccess","src":"4810:18:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:2","memberName":"length","nodeType":"MemberAccess","src":"4810:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:2","subExpression":{"id":911,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"4856:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:2","subExpression":{"id":913,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"4873:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":920,"nodeType":"IfStatement","src":"4851:91:2","trueBody":{"id":919,"nodeType":"Block","src":"4887:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":916,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"4908:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":918,"nodeType":"RevertStatement","src":"4901:30:2"}]}},{"expression":{"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":921,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"4951:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":850,"src":"4951:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":926,"nodeType":"ExpressionStatement","src":"4951:18:2"},{"condition":{"id":927,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"4983:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":935,"nodeType":"IfStatement","src":"4979:67:2","trueBody":{"id":934,"nodeType":"Block","src":"4999:47:2","statements":[{"expression":{"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":928,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"5013:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":853,"src":"5013:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":933,"nodeType":"ExpressionStatement","src":"5013:22:2"}]}},{"id":936,"nodeType":"PlaceholderStatement","src":"5055:1:2"},{"condition":{"id":937,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"5070:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":949,"nodeType":"IfStatement","src":"5066:101:2","trueBody":{"id":948,"nodeType":"Block","src":"5086:81:2","statements":[{"expression":{"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":938,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"5100:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":853,"src":"5100:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":943,"nodeType":"ExpressionStatement","src":"5100:23:2"},{"eventCall":{"arguments":[{"hexValue":"31","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":944,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"5142:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":947,"nodeType":"EmitStatement","src":"5137:19:2"}]}}]},"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"3548:516:2","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":951,"name":"initializer","nameLocation":"4078:11:2","nodeType":"ModifierDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[],"src":"4089:2:2"},"src":"4069:1104:2","virtual":false,"visibility":"internal"},{"body":{"id":997,"nodeType":"Block","src":"6291:392:2","statements":[{"assignments":[958],"declarations":[{"constant":false,"id":958,"mutability":"mutable","name":"$","nameLocation":"6386:1:2","nodeType":"VariableDeclaration","scope":997,"src":"6357:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":957,"nodeType":"UserDefinedTypeName","pathNode":{"id":956,"name":"InitializableStorage","nameLocations":["6357:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"6357:20:2"},"referencedDeclaration":854,"src":"6357:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":961,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":959,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"6390:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$854_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":962,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"6431:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":853,"src":"6431:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":964,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"6450:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":965,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":850,"src":"6450:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":966,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"6468:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":973,"nodeType":"IfStatement","src":"6427:105:2","trueBody":{"id":972,"nodeType":"Block","src":"6477:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":969,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"6498:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":971,"nodeType":"RevertStatement","src":"6491:30:2"}]}},{"expression":{"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":974,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"6541:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":850,"src":"6541:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":977,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"6558:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":979,"nodeType":"ExpressionStatement","src":"6541:24:2"},{"expression":{"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":980,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"6575:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":853,"src":"6575:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":985,"nodeType":"ExpressionStatement","src":"6575:22:2"},{"id":986,"nodeType":"PlaceholderStatement","src":"6607:1:2"},{"expression":{"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":987,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"6618:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":853,"src":"6618:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":992,"nodeType":"ExpressionStatement","src":"6618:23:2"},{"eventCall":{"arguments":[{"id":994,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"6668:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":993,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6656:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":996,"nodeType":"EmitStatement","src":"6651:25:2"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"5179:1068:2","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":998,"name":"reinitializer","nameLocation":"6261:13:2","nodeType":"ModifierDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"version","nameLocation":"6282:7:2","nodeType":"VariableDeclaration","scope":998,"src":"6275:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":953,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:2"},"src":"6252:431:2","virtual":false,"visibility":"internal"},{"body":{"id":1005,"nodeType":"Block","src":"6921:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1001,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"6931:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1003,"nodeType":"ExpressionStatement","src":"6931:20:2"},{"id":1004,"nodeType":"PlaceholderStatement","src":"6961:1:2"}]},"documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"6689:199:2","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":1006,"name":"onlyInitializing","nameLocation":"6902:16:2","nodeType":"ModifierDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"6918:2:2"},"src":"6893:76:2","virtual":false,"visibility":"internal"},{"body":{"id":1018,"nodeType":"Block","src":"7136:89:2","statements":[{"condition":{"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:2","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1010,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"7151:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1017,"nodeType":"IfStatement","src":"7146:73:2","trueBody":{"id":1016,"nodeType":"Block","src":"7170:49:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1013,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"7191:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1015,"nodeType":"RevertStatement","src":"7184:24:2"}]}}]},"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"6975:104:2","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":1019,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:2","nodeType":"FunctionDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[],"src":"7111:2:2"},"returnParameters":{"id":1009,"nodeType":"ParameterList","parameters":[],"src":"7136:0:2"},"scope":1097,"src":"7084:141:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1064,"nodeType":"Block","src":"7760:373:2","statements":[{"assignments":[1025],"declarations":[{"constant":false,"id":1025,"mutability":"mutable","name":"$","nameLocation":"7855:1:2","nodeType":"VariableDeclaration","scope":1064,"src":"7826:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":1024,"nodeType":"UserDefinedTypeName","pathNode":{"id":1023,"name":"InitializableStorage","nameLocations":["7826:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"7826:20:2"},"referencedDeclaration":854,"src":"7826:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":1028,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1026,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"7859:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$854_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:2"},{"condition":{"expression":{"id":1029,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"7900:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":1030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":853,"src":"7900:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1035,"nodeType":"IfStatement","src":"7896:76:2","trueBody":{"id":1034,"nodeType":"Block","src":"7917:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1031,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"7938:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1033,"nodeType":"RevertStatement","src":"7931:30:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1036,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"7985:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":1037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":850,"src":"7985:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1039,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":1038,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:2","memberName":"max","nodeType":"MemberAccess","src":"8003:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1063,"nodeType":"IfStatement","src":"7981:146:2","trueBody":{"id":1062,"nodeType":"Block","src":"8021:106:2","statements":[{"expression":{"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1044,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"8035:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":1046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":850,"src":"8035:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":1049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1048,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":1047,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:2","memberName":"max","nodeType":"MemberAccess","src":"8052:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":1053,"nodeType":"ExpressionStatement","src":"8035:33:2"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":1057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1056,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":1055,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:2","memberName":"max","nodeType":"MemberAccess","src":"8099:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1054,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"8087:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1061,"nodeType":"EmitStatement","src":"8082:34:2"}]}}]},"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"7231:475:2","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:2","nodeType":"FunctionDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[],"src":"7740:2:2"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[],"src":"7760:0:2"},"scope":1097,"src":"7711:422:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1075,"nodeType":"Block","src":"8308:63:2","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1071,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"8325:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$854_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":1073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":850,"src":"8325:39:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":1070,"id":1074,"nodeType":"Return","src":"8318:46:2"}]},"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"8139:99:2","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":1076,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:2","nodeType":"FunctionDefinition","parameters":{"id":1067,"nodeType":"ParameterList","parameters":[],"src":"8274:2:2"},"returnParameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1076,"src":"8300:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1068,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:2"},"scope":1097,"src":"8243:128:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1086,"nodeType":"Block","src":"8543:64:2","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1082,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"8560:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$854_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":1084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":853,"src":"8560:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1081,"id":1085,"nodeType":"Return","src":"8553:47:2"}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"8377:105:2","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":1087,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:2","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[],"src":"8511:2:2"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1087,"src":"8537:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1079,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:2"},"scope":1097,"src":"8487:120:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1095,"nodeType":"Block","src":"8827:80:2","statements":[{"AST":{"nodeType":"YulBlock","src":"8846:55:2","statements":[{"nodeType":"YulAssignment","src":"8860:31:2","value":{"name":"INITIALIZABLE_STORAGE","nodeType":"YulIdentifier","src":"8870:21:2"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"8860:6:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1092,"isOffset":false,"isSlot":true,"src":"8860:6:2","suffix":"slot","valueSize":1},{"declaration":857,"isOffset":false,"isSlot":false,"src":"8870:21:2","valueSize":1}],"id":1094,"nodeType":"InlineAssembly","src":"8837:64:2"}]},"documentation":{"id":1088,"nodeType":"StructuredDocumentation","src":"8613:67:2","text":" @dev Returns a pointer to the storage namespace."},"id":1096,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:2","nodeType":"FunctionDefinition","parameters":{"id":1089,"nodeType":"ParameterList","parameters":[],"src":"8770:2:2"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"$","nameLocation":"8824:1:2","nodeType":"VariableDeclaration","scope":1096,"src":"8795:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":1091,"nodeType":"UserDefinedTypeName","pathNode":{"id":1090,"name":"InitializableStorage","nameLocations":["8795:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"8795:20:2"},"referencedDeclaration":854,"src":"8795:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$854_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:2"},"scope":1097,"src":"8737:170:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1098,"src":"2349:6560:2","usedErrors":[860,863],"usedEvents":[868]}],"src":"113:8797:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2452],"ERC20Upgradeable":[1714],"IERC20":[3491],"IERC20Errors":[3318],"IERC20Metadata":[3517],"Initializable":[1097]},"id":1715,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1099,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1101,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1715,"sourceUnit":3492,"src":"131:70:3","symbolAliases":[{"foreign":{"id":1100,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":1103,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1715,"sourceUnit":3518,"src":"202:97:3","symbolAliases":[{"foreign":{"id":1102,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"210:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":1105,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1715,"sourceUnit":2453,"src":"300:70:3","symbolAliases":[{"foreign":{"id":1104,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"308:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":1107,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1715,"sourceUnit":3414,"src":"371:83:3","symbolAliases":[{"foreign":{"id":1106,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"379:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1109,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1715,"sourceUnit":1098,"src":"455:66:3","symbolAliases":[{"foreign":{"id":1108,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"463:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1111,"name":"Initializable","nameLocations":["1614:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":1097,"src":"1614:13:3"},"id":1112,"nodeType":"InheritanceSpecifier","src":"1614:13:3"},{"baseName":{"id":1113,"name":"ContextUpgradeable","nameLocations":["1629:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":2452,"src":"1629:18:3"},"id":1114,"nodeType":"InheritanceSpecifier","src":"1629:18:3"},{"baseName":{"id":1115,"name":"IERC20","nameLocations":["1649:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":3491,"src":"1649:6:3"},"id":1116,"nodeType":"InheritanceSpecifier","src":"1649:6:3"},{"baseName":{"id":1117,"name":"IERC20Metadata","nameLocations":["1657:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":3517,"src":"1657:14:3"},"id":1118,"nodeType":"InheritanceSpecifier","src":"1657:14:3"},{"baseName":{"id":1119,"name":"IERC20Errors","nameLocations":["1673:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":3318,"src":"1673:12:3"},"id":1120,"nodeType":"InheritanceSpecifier","src":"1673:12:3"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"523:1052:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1714,"linearizedBaseContracts":[1714,3318,3517,3491,2452,1097],"name":"ERC20Upgradeable","nameLocation":"1594:16:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Upgradeable.ERC20Storage","documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"1692:63:3","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC20"},"id":1138,"members":[{"constant":false,"id":1125,"mutability":"mutable","name":"_balances","nameLocation":"1826:9:3","nodeType":"VariableDeclaration","scope":1138,"src":"1790:45:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1124,"keyName":"account","keyNameLocation":"1806:7:3","keyType":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"1798:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1790:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"_allowances","nameLocation":"1910:11:3","nodeType":"VariableDeclaration","scope":1138,"src":"1846:75:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1130,"keyName":"account","keyNameLocation":"1862:7:3","keyType":{"id":1126,"name":"address","nodeType":"ElementaryTypeName","src":"1854:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1846:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1129,"keyName":"spender","keyNameLocation":"1889:7:3","keyType":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1873:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1128,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"_totalSupply","nameLocation":"1940:12:3","nodeType":"VariableDeclaration","scope":1138,"src":"1932:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1932:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"_name","nameLocation":"1970:5:3","nodeType":"VariableDeclaration","scope":1138,"src":"1963:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1134,"name":"string","nodeType":"ElementaryTypeName","src":"1963:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"_symbol","nameLocation":"1992:7:3","nodeType":"VariableDeclaration","scope":1138,"src":"1985:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1136,"name":"string","nodeType":"ElementaryTypeName","src":"1985:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC20Storage","nameLocation":"1767:12:3","nodeType":"StructDefinition","scope":1714,"src":"1760:246:3","visibility":"public"},{"constant":true,"id":1141,"mutability":"constant","name":"ERC20StorageLocation","nameLocation":"2146:20:3","nodeType":"VariableDeclaration","scope":1714,"src":"2121:114:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2121:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2169:66:3","typeDescriptions":{"typeIdentifier":"t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1","typeString":"int_const 3743...(69 digits omitted)...2592"},"value":"0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"},"visibility":"private"},{"body":{"id":1148,"nodeType":"Block","src":"2316:79:3","statements":[{"AST":{"nodeType":"YulBlock","src":"2335:54:3","statements":[{"nodeType":"YulAssignment","src":"2349:30:3","value":{"name":"ERC20StorageLocation","nodeType":"YulIdentifier","src":"2359:20:3"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"2349:6:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1145,"isOffset":false,"isSlot":true,"src":"2349:6:3","suffix":"slot","valueSize":1},{"declaration":1141,"isOffset":false,"isSlot":false,"src":"2359:20:3","valueSize":1}],"id":1147,"nodeType":"InlineAssembly","src":"2326:63:3"}]},"id":1149,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC20Storage","nameLocation":"2251:16:3","nodeType":"FunctionDefinition","parameters":{"id":1142,"nodeType":"ParameterList","parameters":[],"src":"2267:2:3"},"returnParameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"$","nameLocation":"2313:1:3","nodeType":"VariableDeclaration","scope":1149,"src":"2292:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1144,"nodeType":"UserDefinedTypeName","pathNode":{"id":1143,"name":"ERC20Storage","nameLocations":["2292:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1138,"src":"2292:12:3"},"referencedDeclaration":1138,"src":"2292:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"src":"2291:24:3"},"scope":1714,"src":"2242:153:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1164,"nodeType":"Block","src":"2669:55:3","statements":[{"expression":{"arguments":[{"id":1160,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"2702:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1161,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"2709:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1159,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"2679:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2679:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1163,"nodeType":"ExpressionStatement","src":"2679:38:3"}]},"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"2401:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1165,"implemented":true,"kind":"function","modifiers":[{"id":1157,"kind":"modifierInvocation","modifierName":{"id":1156,"name":"onlyInitializing","nameLocations":["2652:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"2652:16:3"},"nodeType":"ModifierInvocation","src":"2652:16:3"}],"name":"__ERC20_init","nameLocation":"2586:12:3","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"name_","nameLocation":"2613:5:3","nodeType":"VariableDeclaration","scope":1165,"src":"2599:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1151,"name":"string","nodeType":"ElementaryTypeName","src":"2599:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"symbol_","nameLocation":"2634:7:3","nodeType":"VariableDeclaration","scope":1165,"src":"2620:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1153,"name":"string","nodeType":"ElementaryTypeName","src":"2620:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2598:44:3"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[],"src":"2669:0:3"},"scope":1714,"src":"2577:147:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1192,"nodeType":"Block","src":"2832:114:3","statements":[{"assignments":[1176],"declarations":[{"constant":false,"id":1176,"mutability":"mutable","name":"$","nameLocation":"2863:1:3","nodeType":"VariableDeclaration","scope":1192,"src":"2842:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1175,"nodeType":"UserDefinedTypeName","pathNode":{"id":1174,"name":"ERC20Storage","nameLocations":["2842:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1138,"src":"2842:12:3"},"referencedDeclaration":1138,"src":"2842:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1179,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1177,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"2867:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$1138_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2867:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2842:43:3"},{"expression":{"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1180,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"2895:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2897:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"2895:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1183,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"2905:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2895:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1185,"nodeType":"ExpressionStatement","src":"2895:15:3"},{"expression":{"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1186,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"2920:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2922:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":1137,"src":"2920:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1189,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2932:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2920:19:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1191,"nodeType":"ExpressionStatement","src":"2920:19:3"}]},"id":1193,"implemented":true,"kind":"function","modifiers":[{"id":1172,"kind":"modifierInvocation","modifierName":{"id":1171,"name":"onlyInitializing","nameLocations":["2815:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"2815:16:3"},"nodeType":"ModifierInvocation","src":"2815:16:3"}],"name":"__ERC20_init_unchained","nameLocation":"2739:22:3","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"name_","nameLocation":"2776:5:3","nodeType":"VariableDeclaration","scope":1193,"src":"2762:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1166,"name":"string","nodeType":"ElementaryTypeName","src":"2762:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"symbol_","nameLocation":"2797:7:3","nodeType":"VariableDeclaration","scope":1193,"src":"2783:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1168,"name":"string","nodeType":"ElementaryTypeName","src":"2783:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2761:44:3"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[],"src":"2832:0:3"},"scope":1714,"src":"2730:216:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3504],"body":{"id":1208,"nodeType":"Block","src":"3071:84:3","statements":[{"assignments":[1201],"declarations":[{"constant":false,"id":1201,"mutability":"mutable","name":"$","nameLocation":"3102:1:3","nodeType":"VariableDeclaration","scope":1208,"src":"3081:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1200,"nodeType":"UserDefinedTypeName","pathNode":{"id":1199,"name":"ERC20Storage","nameLocations":["3081:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1138,"src":"3081:12:3"},"referencedDeclaration":1138,"src":"3081:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1204,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1202,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"3106:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$1138_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3106:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3081:43:3"},{"expression":{"expression":{"id":1205,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"3141:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3143:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"3141:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1198,"id":1207,"nodeType":"Return","src":"3134:14:3"}]},"documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"2952:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1209,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3020:4:3","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[],"src":"3024:2:3"},"returnParameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1209,"src":"3056:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1196,"name":"string","nodeType":"ElementaryTypeName","src":"3056:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3055:15:3"},"scope":1714,"src":"3011:144:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3510],"body":{"id":1224,"nodeType":"Block","src":"3330:86:3","statements":[{"assignments":[1217],"declarations":[{"constant":false,"id":1217,"mutability":"mutable","name":"$","nameLocation":"3361:1:3","nodeType":"VariableDeclaration","scope":1224,"src":"3340:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1216,"nodeType":"UserDefinedTypeName","pathNode":{"id":1215,"name":"ERC20Storage","nameLocations":["3340:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1138,"src":"3340:12:3"},"referencedDeclaration":1138,"src":"3340:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1220,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1218,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"3365:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$1138_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3340:43:3"},{"expression":{"expression":{"id":1221,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"3400:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3402:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":1137,"src":"3400:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1214,"id":1223,"nodeType":"Return","src":"3393:16:3"}]},"documentation":{"id":1210,"nodeType":"StructuredDocumentation","src":"3161:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1225,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3277:6:3","nodeType":"FunctionDefinition","parameters":{"id":1211,"nodeType":"ParameterList","parameters":[],"src":"3283:2:3"},"returnParameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1225,"src":"3315:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1212,"name":"string","nodeType":"ElementaryTypeName","src":"3315:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3314:15:3"},"scope":1714,"src":"3268:148:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3516],"body":{"id":1233,"nodeType":"Block","src":"4105:26:3","statements":[{"expression":{"hexValue":"3138","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4122:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1230,"id":1232,"nodeType":"Return","src":"4115:9:3"}]},"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"3422:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1234,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"4058:8:3","nodeType":"FunctionDefinition","parameters":{"id":1227,"nodeType":"ParameterList","parameters":[],"src":"4066:2:3"},"returnParameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1234,"src":"4098:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1228,"name":"uint8","nodeType":"ElementaryTypeName","src":"4098:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4097:7:3"},"scope":1714,"src":"4049:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3440],"body":{"id":1249,"nodeType":"Block","src":"4252:91:3","statements":[{"assignments":[1242],"declarations":[{"constant":false,"id":1242,"mutability":"mutable","name":"$","nameLocation":"4283:1:3","nodeType":"VariableDeclaration","scope":1249,"src":"4262:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1241,"nodeType":"UserDefinedTypeName","pathNode":{"id":1240,"name":"ERC20Storage","nameLocations":["4262:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1138,"src":"4262:12:3"},"referencedDeclaration":1138,"src":"4262:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1245,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1243,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4287:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$1138_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4287:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4262:43:3"},{"expression":{"expression":{"id":1246,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"4322:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4324:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"4322:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1239,"id":1248,"nodeType":"Return","src":"4315:21:3"}]},"documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"4137:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1250,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"4200:11:3","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[],"src":"4211:2:3"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1250,"src":"4243:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1237,"name":"uint256","nodeType":"ElementaryTypeName","src":"4243:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4242:9:3"},"scope":1714,"src":"4191:152:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3448],"body":{"id":1269,"nodeType":"Block","src":"4475:97:3","statements":[{"assignments":[1260],"declarations":[{"constant":false,"id":1260,"mutability":"mutable","name":"$","nameLocation":"4506:1:3","nodeType":"VariableDeclaration","scope":1269,"src":"4485:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1259,"nodeType":"UserDefinedTypeName","pathNode":{"id":1258,"name":"ERC20Storage","nameLocations":["4485:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1138,"src":"4485:12:3"},"referencedDeclaration":1138,"src":"4485:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1263,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1261,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4510:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$1138_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4510:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4485:43:3"},{"expression":{"baseExpression":{"expression":{"id":1264,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"4545:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4547:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":1125,"src":"4545:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1267,"indexExpression":{"id":1266,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"4557:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4545:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1257,"id":1268,"nodeType":"Return","src":"4538:27:3"}]},"documentation":{"id":1251,"nodeType":"StructuredDocumentation","src":"4349:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1270,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4410:9:3","nodeType":"FunctionDefinition","parameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"account","nameLocation":"4428:7:3","nodeType":"VariableDeclaration","scope":1270,"src":"4420:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"4420:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:17:3"},"returnParameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1270,"src":"4466:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"4466:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4465:9:3"},"scope":1714,"src":"4401:171:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3458],"body":{"id":1293,"nodeType":"Block","src":"4842:103:3","statements":[{"assignments":[1281],"declarations":[{"constant":false,"id":1281,"mutability":"mutable","name":"owner","nameLocation":"4860:5:3","nodeType":"VariableDeclaration","scope":1293,"src":"4852:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"4852:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1284,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"4868:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4868:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4852:28:3"},{"expression":{"arguments":[{"id":1286,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"4900:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1287,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"4907:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"4911:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1285,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"4890:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4890:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1290,"nodeType":"ExpressionStatement","src":"4890:27:3"},{"expression":{"hexValue":"74727565","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4934:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1279,"id":1292,"nodeType":"Return","src":"4927:11:3"}]},"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"4578:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1294,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4776:8:3","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"to","nameLocation":"4793:2:3","nodeType":"VariableDeclaration","scope":1294,"src":"4785:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"4785:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"value","nameLocation":"4805:5:3","nodeType":"VariableDeclaration","scope":1294,"src":"4797:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1274,"name":"uint256","nodeType":"ElementaryTypeName","src":"4797:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4784:27:3"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1294,"src":"4836:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1277,"name":"bool","nodeType":"ElementaryTypeName","src":"4836:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4835:6:3"},"scope":1714,"src":"4767:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3468],"body":{"id":1317,"nodeType":"Block","src":"5092:106:3","statements":[{"assignments":[1306],"declarations":[{"constant":false,"id":1306,"mutability":"mutable","name":"$","nameLocation":"5123:1:3","nodeType":"VariableDeclaration","scope":1317,"src":"5102:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1305,"nodeType":"UserDefinedTypeName","pathNode":{"id":1304,"name":"ERC20Storage","nameLocations":["5102:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1138,"src":"5102:12:3"},"referencedDeclaration":1138,"src":"5102:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1309,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1307,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"5127:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$1138_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5127:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5102:43:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":1310,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"5162:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5164:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"5162:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1313,"indexExpression":{"id":1312,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"5176:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1315,"indexExpression":{"id":1314,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"5183:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1303,"id":1316,"nodeType":"Return","src":"5155:36:3"}]},"documentation":{"id":1295,"nodeType":"StructuredDocumentation","src":"4951:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1318,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"5012:9:3","nodeType":"FunctionDefinition","parameters":{"id":1300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"owner","nameLocation":"5030:5:3","nodeType":"VariableDeclaration","scope":1318,"src":"5022:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"5022:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1299,"mutability":"mutable","name":"spender","nameLocation":"5045:7:3","nodeType":"VariableDeclaration","scope":1318,"src":"5037:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"5037:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5021:32:3"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1318,"src":"5083:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"5083:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5082:9:3"},"scope":1714,"src":"5003:195:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3478],"body":{"id":1341,"nodeType":"Block","src":"5584:107:3","statements":[{"assignments":[1329],"declarations":[{"constant":false,"id":1329,"mutability":"mutable","name":"owner","nameLocation":"5602:5:3","nodeType":"VariableDeclaration","scope":1341,"src":"5594:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"5594:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1332,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1330,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"5610:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5594:28:3"},{"expression":{"arguments":[{"id":1334,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"5641:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1335,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"5648:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"5657:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1333,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1597,1665],"referencedDeclaration":1597,"src":"5632:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1338,"nodeType":"ExpressionStatement","src":"5632:31:3"},{"expression":{"hexValue":"74727565","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5680:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1327,"id":1340,"nodeType":"Return","src":"5673:11:3"}]},"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"5204:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1342,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"5514:7:3","nodeType":"FunctionDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"spender","nameLocation":"5530:7:3","nodeType":"VariableDeclaration","scope":1342,"src":"5522:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"5522:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"value","nameLocation":"5547:5:3","nodeType":"VariableDeclaration","scope":1342,"src":"5539:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"5539:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5521:32:3"},"returnParameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1342,"src":"5578:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1325,"name":"bool","nodeType":"ElementaryTypeName","src":"5578:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5577:6:3"},"scope":1714,"src":"5505:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3490],"body":{"id":1373,"nodeType":"Block","src":"6344:151:3","statements":[{"assignments":[1355],"declarations":[{"constant":false,"id":1355,"mutability":"mutable","name":"spender","nameLocation":"6362:7:3","nodeType":"VariableDeclaration","scope":1373,"src":"6354:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"6354:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1358,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1356,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"6372:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6372:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6354:30:3"},{"expression":{"arguments":[{"id":1360,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"6410:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1361,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"6416:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"6425:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1359,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"6394:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6394:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1364,"nodeType":"ExpressionStatement","src":"6394:37:3"},{"expression":{"arguments":[{"id":1366,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"6451:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1367,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"6457:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"6461:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1365,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"6441:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6441:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1370,"nodeType":"ExpressionStatement","src":"6441:26:3"},{"expression":{"hexValue":"74727565","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6484:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1353,"id":1372,"nodeType":"Return","src":"6477:11:3"}]},"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"5697:549:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1374,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"6260:12:3","nodeType":"FunctionDefinition","parameters":{"id":1350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"from","nameLocation":"6281:4:3","nodeType":"VariableDeclaration","scope":1374,"src":"6273:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"6273:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"to","nameLocation":"6295:2:3","nodeType":"VariableDeclaration","scope":1374,"src":"6287:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"6287:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"value","nameLocation":"6307:5:3","nodeType":"VariableDeclaration","scope":1374,"src":"6299:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"6299:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6272:41:3"},"returnParameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1374,"src":"6338:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1351,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6337:6:3"},"scope":1714,"src":"6251:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1420,"nodeType":"Block","src":"6937:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1384,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"6951:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6967:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6959:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"6959:7:3","typeDescriptions":{}}},"id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6959:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6951:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1398,"nodeType":"IfStatement","src":"6947:86:3","trueBody":{"id":1397,"nodeType":"Block","src":"6971:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7019:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7011:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"7011:7:3","typeDescriptions":{}}},"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1390,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"6992:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6992:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1396,"nodeType":"RevertStatement","src":"6985:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1399,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"7046:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7060:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7052:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1400,"name":"address","nodeType":"ElementaryTypeName","src":"7052:7:3","typeDescriptions":{}}},"id":1403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7052:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7046:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1413,"nodeType":"IfStatement","src":"7042:86:3","trueBody":{"id":1412,"nodeType":"Block","src":"7064:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7114:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7106:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"7106:7:3","typeDescriptions":{}}},"id":1409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1405,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"7085:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7085:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1411,"nodeType":"RevertStatement","src":"7078:39:3"}]}},{"expression":{"arguments":[{"id":1415,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"7145:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1416,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"7151:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"7155:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1414,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"7137:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7137:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1419,"nodeType":"ExpressionStatement","src":"7137:24:3"}]},"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"6501:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6877:9:3","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"from","nameLocation":"6895:4:3","nodeType":"VariableDeclaration","scope":1421,"src":"6887:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"6887:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1379,"mutability":"mutable","name":"to","nameLocation":"6909:2:3","nodeType":"VariableDeclaration","scope":1421,"src":"6901:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"6901:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"value","nameLocation":"6921:5:3","nodeType":"VariableDeclaration","scope":1421,"src":"6913:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"6913:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6886:41:3"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[],"src":"6937:0:3"},"scope":1714,"src":"6868:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1512,"nodeType":"Block","src":"7558:1095:3","statements":[{"assignments":[1433],"declarations":[{"constant":false,"id":1433,"mutability":"mutable","name":"$","nameLocation":"7589:1:3","nodeType":"VariableDeclaration","scope":1512,"src":"7568:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1432,"nodeType":"UserDefinedTypeName","pathNode":{"id":1431,"name":"ERC20Storage","nameLocations":["7568:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1138,"src":"7568:12:3"},"referencedDeclaration":1138,"src":"7568:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1436,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1434,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"7593:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$1138_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7568:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1437,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"7625:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7641:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7633:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1438,"name":"address","nodeType":"ElementaryTypeName","src":"7633:7:3","typeDescriptions":{}}},"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7633:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7625:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1479,"nodeType":"Block","src":"7801:366:3","statements":[{"assignments":[1451],"declarations":[{"constant":false,"id":1451,"mutability":"mutable","name":"fromBalance","nameLocation":"7823:11:3","nodeType":"VariableDeclaration","scope":1479,"src":"7815:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1450,"name":"uint256","nodeType":"ElementaryTypeName","src":"7815:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1456,"initialValue":{"baseExpression":{"expression":{"id":1452,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"7837:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1453,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7839:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":1125,"src":"7837:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1455,"indexExpression":{"id":1454,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"7849:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7837:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7815:39:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1457,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"7872:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"7886:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7872:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1467,"nodeType":"IfStatement","src":"7868:115:3","trueBody":{"id":1466,"nodeType":"Block","src":"7893:90:3","statements":[{"errorCall":{"arguments":[{"id":1461,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"7943:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1462,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"7949:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"7962:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1460,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"7918:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7918:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1465,"nodeType":"RevertStatement","src":"7911:57:3"}]}},{"id":1478,"nodeType":"UncheckedBlock","src":"7996:161:3","statements":[{"expression":{"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1468,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"8103:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8105:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":1125,"src":"8103:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1472,"indexExpression":{"id":1470,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"8115:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8103:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1473,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"8123:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"8137:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8123:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8103:39:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1477,"nodeType":"ExpressionStatement","src":"8103:39:3"}]}]},"id":1480,"nodeType":"IfStatement","src":"7621:546:3","trueBody":{"id":1449,"nodeType":"Block","src":"7645:150:3","statements":[{"expression":{"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1443,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"7761:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7763:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"7761:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"7779:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7761:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1448,"nodeType":"ExpressionStatement","src":"7761:23:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1481,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"8181:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8195:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8187:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"8187:7:3","typeDescriptions":{}}},"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8187:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8181:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1504,"nodeType":"Block","src":"8398:208:3","statements":[{"id":1503,"nodeType":"UncheckedBlock","src":"8412:184:3","statements":[{"expression":{"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1495,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"8557:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8559:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":1125,"src":"8557:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1499,"indexExpression":{"id":1497,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"8569:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8557:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"8576:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8557:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1502,"nodeType":"ExpressionStatement","src":"8557:24:3"}]}]},"id":1505,"nodeType":"IfStatement","src":"8177:429:3","trueBody":{"id":1494,"nodeType":"Block","src":"8199:193:3","statements":[{"id":1493,"nodeType":"UncheckedBlock","src":"8213:169:3","statements":[{"expression":{"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1487,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"8344:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8346:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"8344:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"8362:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8344:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1492,"nodeType":"ExpressionStatement","src":"8344:23:3"}]}]}},{"eventCall":{"arguments":[{"id":1507,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"8630:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1508,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"8636:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"8640:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1506,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"8621:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8621:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1511,"nodeType":"EmitStatement","src":"8616:30:3"}]},"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"7174:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1513,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7492:7:3","nodeType":"FunctionDefinition","parameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"from","nameLocation":"7508:4:3","nodeType":"VariableDeclaration","scope":1513,"src":"7500:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"7500:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"to","nameLocation":"7522:2:3","nodeType":"VariableDeclaration","scope":1513,"src":"7514:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1425,"name":"address","nodeType":"ElementaryTypeName","src":"7514:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"value","nameLocation":"7534:5:3","nodeType":"VariableDeclaration","scope":1513,"src":"7526:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"7526:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7499:41:3"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[],"src":"7558:0:3"},"scope":1714,"src":"7483:1170:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1545,"nodeType":"Block","src":"9052:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1521,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"9066:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9085:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9077:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1522,"name":"address","nodeType":"ElementaryTypeName","src":"9077:7:3","typeDescriptions":{}}},"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9077:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9066:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1535,"nodeType":"IfStatement","src":"9062:91:3","trueBody":{"id":1534,"nodeType":"Block","src":"9089:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9139:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9131:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"9131:7:3","typeDescriptions":{}}},"id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9131:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1527,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"9110:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9110:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1533,"nodeType":"RevertStatement","src":"9103:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9178:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9170:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1537,"name":"address","nodeType":"ElementaryTypeName","src":"9170:7:3","typeDescriptions":{}}},"id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9170:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1541,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"9182:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"9191:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1536,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"9162:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9162:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1544,"nodeType":"ExpressionStatement","src":"9162:35:3"}]},"documentation":{"id":1514,"nodeType":"StructuredDocumentation","src":"8659:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1546,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9005:5:3","nodeType":"FunctionDefinition","parameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"account","nameLocation":"9019:7:3","nodeType":"VariableDeclaration","scope":1546,"src":"9011:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1515,"name":"address","nodeType":"ElementaryTypeName","src":"9011:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1518,"mutability":"mutable","name":"value","nameLocation":"9036:5:3","nodeType":"VariableDeclaration","scope":1546,"src":"9028:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"9028:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9010:32:3"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[],"src":"9052:0:3"},"scope":1714,"src":"8996:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1578,"nodeType":"Block","src":"9578:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1554,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"9592:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9611:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9603:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"9603:7:3","typeDescriptions":{}}},"id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9603:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9592:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1568,"nodeType":"IfStatement","src":"9588:89:3","trueBody":{"id":1567,"nodeType":"Block","src":"9615:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9663:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9655:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"9655:7:3","typeDescriptions":{}}},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9655:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1560,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"9636:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9636:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1566,"nodeType":"RevertStatement","src":"9629:37:3"}]}},{"expression":{"arguments":[{"id":1570,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"9694:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9711:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9703:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1571,"name":"address","nodeType":"ElementaryTypeName","src":"9703:7:3","typeDescriptions":{}}},"id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9703:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"9715:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1569,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"9686:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9686:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1577,"nodeType":"ExpressionStatement","src":"9686:35:3"}]},"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"9210:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1579,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9531:5:3","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"account","nameLocation":"9545:7:3","nodeType":"VariableDeclaration","scope":1579,"src":"9537:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1548,"name":"address","nodeType":"ElementaryTypeName","src":"9537:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"value","nameLocation":"9562:5:3","nodeType":"VariableDeclaration","scope":1579,"src":"9554:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1550,"name":"uint256","nodeType":"ElementaryTypeName","src":"9554:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9536:32:3"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"9578:0:3"},"scope":1714,"src":"9522:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1596,"nodeType":"Block","src":"10338:54:3","statements":[{"expression":{"arguments":[{"id":1590,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"10357:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1591,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"10364:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"10373:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10380:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1589,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1597,1665],"referencedDeclaration":1665,"src":"10348:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10348:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1595,"nodeType":"ExpressionStatement","src":"10348:37:3"}]},"documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"9734:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10273:8:3","nodeType":"FunctionDefinition","parameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"owner","nameLocation":"10290:5:3","nodeType":"VariableDeclaration","scope":1597,"src":"10282:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"10282:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"spender","nameLocation":"10305:7:3","nodeType":"VariableDeclaration","scope":1597,"src":"10297:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"10297:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"value","nameLocation":"10322:5:3","nodeType":"VariableDeclaration","scope":1597,"src":"10314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"10314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10281:47:3"},"returnParameters":{"id":1588,"nodeType":"ParameterList","parameters":[],"src":"10338:0:3"},"scope":1714,"src":"10264:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1664,"nodeType":"Block","src":"11322:389:3","statements":[{"assignments":[1611],"declarations":[{"constant":false,"id":1611,"mutability":"mutable","name":"$","nameLocation":"11353:1:3","nodeType":"VariableDeclaration","scope":1664,"src":"11332:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1610,"nodeType":"UserDefinedTypeName","pathNode":{"id":1609,"name":"ERC20Storage","nameLocations":["11332:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1138,"src":"11332:12:3"},"referencedDeclaration":1138,"src":"11332:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1614,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1612,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"11357:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$1138_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11357:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11332:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"11389:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11406:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11398:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1616,"name":"address","nodeType":"ElementaryTypeName","src":"11398:7:3","typeDescriptions":{}}},"id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11398:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11389:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1629,"nodeType":"IfStatement","src":"11385:89:3","trueBody":{"id":1628,"nodeType":"Block","src":"11410:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11460:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11452:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1622,"name":"address","nodeType":"ElementaryTypeName","src":"11452:7:3","typeDescriptions":{}}},"id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11452:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1621,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"11431:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11431:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1627,"nodeType":"RevertStatement","src":"11424:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"11487:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11506:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11498:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1631,"name":"address","nodeType":"ElementaryTypeName","src":"11498:7:3","typeDescriptions":{}}},"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11498:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11487:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1644,"nodeType":"IfStatement","src":"11483:90:3","trueBody":{"id":1643,"nodeType":"Block","src":"11510:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11559:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11551:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:3","typeDescriptions":{}}},"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11551:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1636,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"11531:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11531:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1642,"nodeType":"RevertStatement","src":"11524:38:3"}]}},{"expression":{"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1645,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"11582:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$1138_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11584:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"11582:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1650,"indexExpression":{"id":1647,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"11596:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11582:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1651,"indexExpression":{"id":1648,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"11603:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11582:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"11614:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11582:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1654,"nodeType":"ExpressionStatement","src":"11582:37:3"},{"condition":{"id":1655,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"11633:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1663,"nodeType":"IfStatement","src":"11629:76:3","trueBody":{"id":1662,"nodeType":"Block","src":"11644:61:3","statements":[{"eventCall":{"arguments":[{"id":1657,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"11672:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1658,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"11679:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"11688:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1656,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"11663:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11663:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1661,"nodeType":"EmitStatement","src":"11658:36:3"}]}}]},"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"10398:821:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1665,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"11233:8:3","nodeType":"FunctionDefinition","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"owner","nameLocation":"11250:5:3","nodeType":"VariableDeclaration","scope":1665,"src":"11242:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"11242:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1602,"mutability":"mutable","name":"spender","nameLocation":"11265:7:3","nodeType":"VariableDeclaration","scope":1665,"src":"11257:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1601,"name":"address","nodeType":"ElementaryTypeName","src":"11257:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1604,"mutability":"mutable","name":"value","nameLocation":"11282:5:3","nodeType":"VariableDeclaration","scope":1665,"src":"11274:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"11274:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1606,"mutability":"mutable","name":"emitEvent","nameLocation":"11294:9:3","nodeType":"VariableDeclaration","scope":1665,"src":"11289:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1605,"name":"bool","nodeType":"ElementaryTypeName","src":"11289:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11241:63:3"},"returnParameters":{"id":1608,"nodeType":"ParameterList","parameters":[],"src":"11322:0:3"},"scope":1714,"src":"11224:487:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1712,"nodeType":"Block","src":"12082:388:3","statements":[{"assignments":[1676],"declarations":[{"constant":false,"id":1676,"mutability":"mutable","name":"currentAllowance","nameLocation":"12100:16:3","nodeType":"VariableDeclaration","scope":1712,"src":"12092:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"12092:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1681,"initialValue":{"arguments":[{"id":1678,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"12129:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1679,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"12136:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1677,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"12119:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12119:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12092:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1682,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"12158:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12183:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"12183:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1683,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12178:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12178:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12192:3:3","memberName":"max","nodeType":"MemberAccess","src":"12178:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12158:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1711,"nodeType":"IfStatement","src":"12154:310:3","trueBody":{"id":1710,"nodeType":"Block","src":"12197:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1689,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"12215:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"12234:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12215:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1699,"nodeType":"IfStatement","src":"12211:130:3","trueBody":{"id":1698,"nodeType":"Block","src":"12241:100:3","statements":[{"errorCall":{"arguments":[{"id":1693,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"12293:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1694,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"12302:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"12320:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1692,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"12266:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1697,"nodeType":"RevertStatement","src":"12259:67:3"}]}},{"id":1709,"nodeType":"UncheckedBlock","src":"12354:100:3","statements":[{"expression":{"arguments":[{"id":1701,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"12391:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1702,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"12398:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1703,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"12407:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"12426:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12407:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12433:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1700,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1597,1665],"referencedDeclaration":1665,"src":"12382:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1708,"nodeType":"ExpressionStatement","src":"12382:57:3"}]}]}}]},"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"11717:271:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"12002:15:3","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"owner","nameLocation":"12026:5:3","nodeType":"VariableDeclaration","scope":1713,"src":"12018:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"12018:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1670,"mutability":"mutable","name":"spender","nameLocation":"12041:7:3","nodeType":"VariableDeclaration","scope":1713,"src":"12033:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1669,"name":"address","nodeType":"ElementaryTypeName","src":"12033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1672,"mutability":"mutable","name":"value","nameLocation":"12058:5:3","nodeType":"VariableDeclaration","scope":1713,"src":"12050:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"12050:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12017:47:3"},"returnParameters":{"id":1674,"nodeType":"ParameterList","parameters":[],"src":"12082:0:3"},"scope":1714,"src":"11993:477:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1715,"src":"1576:10896:3","usedErrors":[860,863,3288,3293,3298,3307,3312,3317],"usedEvents":[868,3425,3434]}],"src":"105:12368:3"},"id":3},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2452],"ERC20BurnableUpgradeable":[1776],"ERC20Upgradeable":[1714],"Initializable":[1097]},"id":1777,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1716,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1718,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1777,"sourceUnit":1715,"src":"150:57:4","symbolAliases":[{"foreign":{"id":1717,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"158:16:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../../utils/ContextUpgradeable.sol","id":1720,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1777,"sourceUnit":2453,"src":"208:73:4","symbolAliases":[{"foreign":{"id":1719,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"216:18:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1722,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1777,"sourceUnit":1098,"src":"282:69:4","symbolAliases":[{"foreign":{"id":1721,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"290:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1724,"name":"Initializable","nameLocations":["608:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":1097,"src":"608:13:4"},"id":1725,"nodeType":"InheritanceSpecifier","src":"608:13:4"},{"baseName":{"id":1726,"name":"ContextUpgradeable","nameLocations":["623:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":2452,"src":"623:18:4"},"id":1727,"nodeType":"InheritanceSpecifier","src":"623:18:4"},{"baseName":{"id":1728,"name":"ERC20Upgradeable","nameLocations":["643:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"643:16:4"},"id":1729,"nodeType":"InheritanceSpecifier","src":"643:16:4"}],"canonicalName":"ERC20BurnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"353:208:4","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1776,"linearizedBaseContracts":[1776,1714,3318,3517,3491,2452,1097],"name":"ERC20BurnableUpgradeable","nameLocation":"580:24:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1734,"nodeType":"Block","src":"724:7:4","statements":[]},"id":1735,"implemented":true,"kind":"function","modifiers":[{"id":1732,"kind":"modifierInvocation","modifierName":{"id":1731,"name":"onlyInitializing","nameLocations":["707:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"707:16:4"},"nodeType":"ModifierInvocation","src":"707:16:4"}],"name":"__ERC20Burnable_init","nameLocation":"675:20:4","nodeType":"FunctionDefinition","parameters":{"id":1730,"nodeType":"ParameterList","parameters":[],"src":"695:2:4"},"returnParameters":{"id":1733,"nodeType":"ParameterList","parameters":[],"src":"724:0:4"},"scope":1776,"src":"666:65:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1740,"nodeType":"Block","src":"805:7:4","statements":[]},"id":1741,"implemented":true,"kind":"function","modifiers":[{"id":1738,"kind":"modifierInvocation","modifierName":{"id":1737,"name":"onlyInitializing","nameLocations":["788:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"788:16:4"},"nodeType":"ModifierInvocation","src":"788:16:4"}],"name":"__ERC20Burnable_init_unchained","nameLocation":"746:30:4","nodeType":"FunctionDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[],"src":"776:2:4"},"returnParameters":{"id":1739,"nodeType":"ParameterList","parameters":[],"src":"805:0:4"},"scope":1776,"src":"737:75:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1753,"nodeType":"Block","src":"975:43:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1748,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"991:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"991:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"1005:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1747,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"985:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"985:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1752,"nodeType":"ExpressionStatement","src":"985:26:4"}]},"documentation":{"id":1742,"nodeType":"StructuredDocumentation","src":"817:109:4","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1754,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"940:4:4","nodeType":"FunctionDefinition","parameters":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"value","nameLocation":"953:5:4","nodeType":"VariableDeclaration","scope":1754,"src":"945:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"945:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"944:15:4"},"returnParameters":{"id":1746,"nodeType":"ParameterList","parameters":[],"src":"975:0:4"},"scope":1776,"src":"931:87:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1774,"nodeType":"Block","src":"1399:93:4","statements":[{"expression":{"arguments":[{"id":1763,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"1425:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1764,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"1434:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1434:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"1448:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1762,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"1409:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1409:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1768,"nodeType":"ExpressionStatement","src":"1409:45:4"},{"expression":{"arguments":[{"id":1770,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"1470:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"1479:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1769,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"1464:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1464:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1773,"nodeType":"ExpressionStatement","src":"1464:21:4"}]},"documentation":{"id":1755,"nodeType":"StructuredDocumentation","src":"1024:305:4","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":1775,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1343:8:4","nodeType":"FunctionDefinition","parameters":{"id":1760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"account","nameLocation":"1360:7:4","nodeType":"VariableDeclaration","scope":1775,"src":"1352:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"1352:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"value","nameLocation":"1377:5:4","nodeType":"VariableDeclaration","scope":1775,"src":"1369:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1351:32:4"},"returnParameters":{"id":1761,"nodeType":"ParameterList","parameters":[],"src":"1399:0:4"},"scope":1776,"src":"1334:158:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1777,"src":"562:932:4","usedErrors":[860,863,3288,3293,3298,3307,3312,3317],"usedEvents":[868,3425,3434]}],"src":"124:1371:4"},"id":4},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol","exportedSymbols":{"ERC20FlashMintUpgradeable":[2036],"ERC20Upgradeable":[1714],"IERC3156FlashBorrower":[3186],"IERC3156FlashLender":[3225],"Initializable":[1097]},"id":2037,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1778,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:5"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","file":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","id":1780,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2037,"sourceUnit":3187,"src":"151:99:5","symbolAliases":[{"foreign":{"id":1779,"name":"IERC3156FlashBorrower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"159:21:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol","file":"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol","id":1782,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2037,"sourceUnit":3226,"src":"251:95:5","symbolAliases":[{"foreign":{"id":1781,"name":"IERC3156FlashLender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"259:19:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1784,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2037,"sourceUnit":1715,"src":"347:57:5","symbolAliases":[{"foreign":{"id":1783,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"355:16:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1786,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2037,"sourceUnit":1098,"src":"405:69:5","symbolAliases":[{"foreign":{"id":1785,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"413:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1788,"name":"Initializable","nameLocations":["1098:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1097,"src":"1098:13:5"},"id":1789,"nodeType":"InheritanceSpecifier","src":"1098:13:5"},{"baseName":{"id":1790,"name":"ERC20Upgradeable","nameLocations":["1113:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"1113:16:5"},"id":1791,"nodeType":"InheritanceSpecifier","src":"1113:16:5"},{"baseName":{"id":1792,"name":"IERC3156FlashLender","nameLocations":["1131:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":3225,"src":"1131:19:5"},"id":1793,"nodeType":"InheritanceSpecifier","src":"1131:19:5"}],"canonicalName":"ERC20FlashMintUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1787,"nodeType":"StructuredDocumentation","src":"476:574:5","text":" @dev Implementation of the ERC3156 Flash loans extension, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n Adds the {flashLoan} method, which provides flash loan support at the token\n level. By default there is no fee, but this can be changed by overriding {flashFee}.\n NOTE: When this extension is used along with the {ERC20Capped} or {ERC20Votes} extensions,\n {maxFlashLoan} will not correctly reflect the maximum that can be flash minted. We recommend\n overriding {maxFlashLoan} so that it correctly reflects the supply cap."},"fullyImplemented":true,"id":2036,"linearizedBaseContracts":[2036,3225,1714,3318,3517,3491,2452,1097],"name":"ERC20FlashMintUpgradeable","nameLocation":"1069:25:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1798,"mutability":"constant","name":"RETURN_VALUE","nameLocation":"1182:12:5","nodeType":"VariableDeclaration","scope":2036,"src":"1157:85:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1157:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"45524333313536466c617368426f72726f7765722e6f6e466c6173684c6f616e","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1207:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9","typeString":"literal_string \"ERC3156FlashBorrower.onFlashLoan\""},"value":"ERC3156FlashBorrower.onFlashLoan"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9","typeString":"literal_string \"ERC3156FlashBorrower.onFlashLoan\""}],"id":1795,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1197:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1197:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1799,"nodeType":"StructuredDocumentation","src":"1249:52:5","text":" @dev The loan token is not valid."},"errorSelector":"b5a7db92","id":1803,"name":"ERC3156UnsupportedToken","nameLocation":"1312:23:5","nodeType":"ErrorDefinition","parameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"token","nameLocation":"1344:5:5","nodeType":"VariableDeclaration","scope":1803,"src":"1336:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1800,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1335:15:5"},"src":"1306:45:5"},{"documentation":{"id":1804,"nodeType":"StructuredDocumentation","src":"1357:82:5","text":" @dev The requested loan exceeds the max loan value for `token`."},"errorSelector":"fd9a7609","id":1808,"name":"ERC3156ExceededMaxLoan","nameLocation":"1450:22:5","nodeType":"ErrorDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"maxLoan","nameLocation":"1481:7:5","nodeType":"VariableDeclaration","scope":1808,"src":"1473:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"1473:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1472:17:5"},"src":"1444:46:5"},{"documentation":{"id":1809,"nodeType":"StructuredDocumentation","src":"1496:93:5","text":" @dev The receiver of a flashloan is not a valid {onFlashLoan} implementer."},"errorSelector":"678c5b00","id":1813,"name":"ERC3156InvalidReceiver","nameLocation":"1600:22:5","nodeType":"ErrorDefinition","parameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"mutability":"mutable","name":"receiver","nameLocation":"1631:8:5","nodeType":"VariableDeclaration","scope":1813,"src":"1623:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1810,"name":"address","nodeType":"ElementaryTypeName","src":"1623:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1622:18:5"},"src":"1594:47:5"},{"body":{"id":1818,"nodeType":"Block","src":"1706:7:5","statements":[]},"id":1819,"implemented":true,"kind":"function","modifiers":[{"id":1816,"kind":"modifierInvocation","modifierName":{"id":1815,"name":"onlyInitializing","nameLocations":["1689:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"1689:16:5"},"nodeType":"ModifierInvocation","src":"1689:16:5"}],"name":"__ERC20FlashMint_init","nameLocation":"1656:21:5","nodeType":"FunctionDefinition","parameters":{"id":1814,"nodeType":"ParameterList","parameters":[],"src":"1677:2:5"},"returnParameters":{"id":1817,"nodeType":"ParameterList","parameters":[],"src":"1706:0:5"},"scope":2036,"src":"1647:66:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1824,"nodeType":"Block","src":"1788:7:5","statements":[]},"id":1825,"implemented":true,"kind":"function","modifiers":[{"id":1822,"kind":"modifierInvocation","modifierName":{"id":1821,"name":"onlyInitializing","nameLocations":["1771:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"1771:16:5"},"nodeType":"ModifierInvocation","src":"1771:16:5"}],"name":"__ERC20FlashMint_init_unchained","nameLocation":"1728:31:5","nodeType":"FunctionDefinition","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[],"src":"1759:2:5"},"returnParameters":{"id":1823,"nodeType":"ParameterList","parameters":[],"src":"1788:0:5"},"scope":2036,"src":"1719:76:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3199],"body":{"id":1850,"nodeType":"Block","src":"2321:86:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1833,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"2338:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1836,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2355:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$2036","typeString":"contract ERC20FlashMintUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$2036","typeString":"contract ERC20FlashMintUpgradeable"}],"id":1835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1834,"name":"address","nodeType":"ElementaryTypeName","src":"2347:7:5","typeDescriptions":{}}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2347:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2338:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2399:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2338:62:5","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2368:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1840,"name":"uint256","nodeType":"ElementaryTypeName","src":"2368:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1839,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2363:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2363:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2377:3:5","memberName":"max","nodeType":"MemberAccess","src":"2363:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1844,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"2383:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2383:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2363:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1832,"id":1849,"nodeType":"Return","src":"2331:69:5"}]},"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"1800:441:5","text":" @dev Returns the maximum amount of tokens available for loan.\n @param token The address of the token that is requested.\n @return The amount of token that can be loaned.\n NOTE: This function does not consider any form of supply cap, so in case\n it's used in a token with a cap like {ERC20Capped}, make sure to override this\n function to integrate the cap instead of `type(uint256).max`."},"functionSelector":"613255ab","id":1851,"implemented":true,"kind":"function","modifiers":[],"name":"maxFlashLoan","nameLocation":"2255:12:5","nodeType":"FunctionDefinition","parameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"token","nameLocation":"2276:5:5","nodeType":"VariableDeclaration","scope":1851,"src":"2268:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2267:15:5"},"returnParameters":{"id":1832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1851,"src":"2312:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1830,"name":"uint256","nodeType":"ElementaryTypeName","src":"2312:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2311:9:5"},"scope":2036,"src":"2246:161:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3209],"body":{"id":1878,"nodeType":"Block","src":"2858:146:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1861,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"2872:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":1864,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2889:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$2036","typeString":"contract ERC20FlashMintUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$2036","typeString":"contract ERC20FlashMintUpgradeable"}],"id":1863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2881:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1862,"name":"address","nodeType":"ElementaryTypeName","src":"2881:7:5","typeDescriptions":{}}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2872:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1872,"nodeType":"IfStatement","src":"2868:90:5","trueBody":{"id":1871,"nodeType":"Block","src":"2896:62:5","statements":[{"errorCall":{"arguments":[{"id":1868,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"2941:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1867,"name":"ERC3156UnsupportedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"2917:23:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2917:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1870,"nodeType":"RevertStatement","src":"2910:37:5"}]}},{"expression":{"arguments":[{"id":1874,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"2984:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"2991:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1873,"name":"_flashFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"2974:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2974:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1860,"id":1877,"nodeType":"Return","src":"2967:30:5"}]},"documentation":{"id":1852,"nodeType":"StructuredDocumentation","src":"2413:354:5","text":" @dev Returns the fee applied when doing flash loans. This function calls\n the {_flashFee} function which returns the fee applied when doing flash\n loans.\n @param token The token to be flash loaned.\n @param value The amount of tokens to be loaned.\n @return The fees applied to the corresponding flash loan."},"functionSelector":"d9d98ce4","id":1879,"implemented":true,"kind":"function","modifiers":[],"name":"flashFee","nameLocation":"2781:8:5","nodeType":"FunctionDefinition","parameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1854,"mutability":"mutable","name":"token","nameLocation":"2798:5:5","nodeType":"VariableDeclaration","scope":1879,"src":"2790:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1853,"name":"address","nodeType":"ElementaryTypeName","src":"2790:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"value","nameLocation":"2813:5:5","nodeType":"VariableDeclaration","scope":1879,"src":"2805:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1855,"name":"uint256","nodeType":"ElementaryTypeName","src":"2805:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2789:30:5"},"returnParameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1879,"src":"2849:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2849:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2848:9:5"},"scope":2036,"src":"2772:232:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1895,"nodeType":"Block","src":"3481:138:5","statements":[{"expression":{"id":1889,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"3574:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1890,"nodeType":"ExpressionStatement","src":"3574:5:5"},{"expression":{"id":1891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"3589:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1892,"nodeType":"ExpressionStatement","src":"3589:5:5"},{"expression":{"hexValue":"30","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3611:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1888,"id":1894,"nodeType":"Return","src":"3604:8:5"}]},"documentation":{"id":1880,"nodeType":"StructuredDocumentation","src":"3010:377:5","text":" @dev Returns the fee applied when doing flash loans. By default this\n implementation has 0 fees. This function can be overloaded to make\n the flash loan mechanism deflationary.\n @param token The token to be flash loaned.\n @param value The amount of tokens to be loaned.\n @return The fees applied to the corresponding flash loan."},"id":1896,"implemented":true,"kind":"function","modifiers":[],"name":"_flashFee","nameLocation":"3401:9:5","nodeType":"FunctionDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"token","nameLocation":"3419:5:5","nodeType":"VariableDeclaration","scope":1896,"src":"3411:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1881,"name":"address","nodeType":"ElementaryTypeName","src":"3411:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"value","nameLocation":"3434:5:5","nodeType":"VariableDeclaration","scope":1896,"src":"3426:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"3426:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3410:30:5"},"returnParameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1896,"src":"3472:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1886,"name":"uint256","nodeType":"ElementaryTypeName","src":"3472:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3471:9:5"},"scope":2036,"src":"3392:227:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1907,"nodeType":"Block","src":"4007:34:5","statements":[{"expression":{"arguments":[{"hexValue":"30","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4032:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4024:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1902,"name":"address","nodeType":"ElementaryTypeName","src":"4024:7:5","typeDescriptions":{}}},"id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4024:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1901,"id":1906,"nodeType":"Return","src":"4017:17:5"}]},"documentation":{"id":1897,"nodeType":"StructuredDocumentation","src":"3625:308:5","text":" @dev Returns the receiver address of the flash fee. By default this\n implementation returns the address(0) which means the fee amount will be burnt.\n This function can be overloaded to change the fee receiver.\n @return The address for which the flash fee will be sent to."},"id":1908,"implemented":true,"kind":"function","modifiers":[],"name":"_flashFeeReceiver","nameLocation":"3947:17:5","nodeType":"FunctionDefinition","parameters":{"id":1898,"nodeType":"ParameterList","parameters":[],"src":"3964:2:5"},"returnParameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1908,"src":"3998:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1899,"name":"address","nodeType":"ElementaryTypeName","src":"3998:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3997:9:5"},"scope":2036,"src":"3938:103:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[3224],"body":{"id":2034,"nodeType":"Block","src":"5266:792:5","statements":[{"assignments":[1924],"declarations":[{"constant":false,"id":1924,"mutability":"mutable","name":"maxLoan","nameLocation":"5284:7:5","nodeType":"VariableDeclaration","scope":2034,"src":"5276:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1923,"name":"uint256","nodeType":"ElementaryTypeName","src":"5276:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1928,"initialValue":{"arguments":[{"id":1926,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"5307:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1925,"name":"maxFlashLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"5294:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5294:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5276:37:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"5327:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1930,"name":"maxLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"5335:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5327:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1937,"nodeType":"IfStatement","src":"5323:84:5","trueBody":{"id":1936,"nodeType":"Block","src":"5344:63:5","statements":[{"errorCall":{"arguments":[{"id":1933,"name":"maxLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"5388:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1932,"name":"ERC3156ExceededMaxLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"5365:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1935,"nodeType":"RevertStatement","src":"5358:38:5"}]}},{"assignments":[1939],"declarations":[{"constant":false,"id":1939,"mutability":"mutable","name":"fee","nameLocation":"5424:3:5","nodeType":"VariableDeclaration","scope":2034,"src":"5416:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"5416:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1944,"initialValue":{"arguments":[{"id":1941,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"5439:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"5446:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1940,"name":"flashFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"5430:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5430:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5416:36:5"},{"expression":{"arguments":[{"arguments":[{"id":1948,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"5476:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$3186","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$3186","typeString":"contract IERC3156FlashBorrower"}],"id":1947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5468:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"5468:7:5","typeDescriptions":{}}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"5487:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1945,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"5462:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5462:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1952,"nodeType":"ExpressionStatement","src":"5462:31:5"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1955,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"5528:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5528:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1957,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"5542:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"5549:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1959,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"5556:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1960,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"5561:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1953,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"5507:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$3186","typeString":"contract IERC3156FlashBorrower"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5516:11:5","memberName":"onFlashLoan","nodeType":"MemberAccess","referencedDeclaration":3185,"src":"5507:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes32)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5507:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1962,"name":"RETURN_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"5570:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5507:75:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1972,"nodeType":"IfStatement","src":"5503:154:5","trueBody":{"id":1971,"nodeType":"Block","src":"5584:73:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1967,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"5636:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$3186","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$3186","typeString":"contract IERC3156FlashBorrower"}],"id":1966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5628:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1965,"name":"address","nodeType":"ElementaryTypeName","src":"5628:7:5","typeDescriptions":{}}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5628:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1964,"name":"ERC3156InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"5605:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5605:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1970,"nodeType":"RevertStatement","src":"5598:48:5"}]}},{"assignments":[1974],"declarations":[{"constant":false,"id":1974,"mutability":"mutable","name":"flashFeeReceiver","nameLocation":"5674:16:5","nodeType":"VariableDeclaration","scope":2034,"src":"5666:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1973,"name":"address","nodeType":"ElementaryTypeName","src":"5666:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1977,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1975,"name":"_flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"5693:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5693:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5666:46:5"},{"expression":{"arguments":[{"arguments":[{"id":1981,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"5746:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$3186","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$3186","typeString":"contract IERC3156FlashBorrower"}],"id":1980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5738:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1979,"name":"address","nodeType":"ElementaryTypeName","src":"5738:7:5","typeDescriptions":{}}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5738:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1985,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5765:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$2036","typeString":"contract ERC20FlashMintUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$2036","typeString":"contract ERC20FlashMintUpgradeable"}],"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5757:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1983,"name":"address","nodeType":"ElementaryTypeName","src":"5757:7:5","typeDescriptions":{}}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5757:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"5772:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1988,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"5780:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5772:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1978,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"5722:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5722:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1991,"nodeType":"ExpressionStatement","src":"5722:62:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1992,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"5798:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5798:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1995,"name":"flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"5810:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5838:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5830:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1996,"name":"address","nodeType":"ElementaryTypeName","src":"5830:7:5","typeDescriptions":{}}},"id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5830:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5810:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5798:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2030,"nodeType":"Block","src":"5910:121:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":2016,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"5938:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$3186","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$3186","typeString":"contract IERC3156FlashBorrower"}],"id":2015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5930:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2014,"name":"address","nodeType":"ElementaryTypeName","src":"5930:7:5","typeDescriptions":{}}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5930:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"5949:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2013,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"5924:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5924:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2020,"nodeType":"ExpressionStatement","src":"5924:31:5"},{"expression":{"arguments":[{"arguments":[{"id":2024,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"5987:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$3186","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$3186","typeString":"contract IERC3156FlashBorrower"}],"id":2023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5979:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2022,"name":"address","nodeType":"ElementaryTypeName","src":"5979:7:5","typeDescriptions":{}}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5979:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2026,"name":"flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"5998:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2027,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"6016:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2021,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"5969:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5969:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2029,"nodeType":"ExpressionStatement","src":"5969:51:5"}]},"id":2031,"nodeType":"IfStatement","src":"5794:237:5","trueBody":{"id":2012,"nodeType":"Block","src":"5842:62:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":2005,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"5870:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$3186","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$3186","typeString":"contract IERC3156FlashBorrower"}],"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5862:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2003,"name":"address","nodeType":"ElementaryTypeName","src":"5862:7:5","typeDescriptions":{}}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"5881:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2008,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"5889:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5881:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2002,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"5856:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5856:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2011,"nodeType":"ExpressionStatement","src":"5856:37:5"}]}},{"expression":{"hexValue":"74727565","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6047:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1922,"id":2033,"nodeType":"Return","src":"6040:11:5"}]},"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"4047:760:5","text":" @dev Performs a flash loan. New tokens are minted and sent to the\n `receiver`, who is required to implement the {IERC3156FlashBorrower}\n interface. By the end of the flash loan, the receiver is expected to own\n value + fee tokens and have them approved back to the token contract itself so\n they can be burned.\n @param receiver The receiver of the flash loan. Should implement the\n {IERC3156FlashBorrower-onFlashLoan} interface.\n @param token The token to be flash loaned. Only `address(this)` is\n supported.\n @param value The amount of tokens to be loaned.\n @param data An arbitrary datafield that is passed to the receiver.\n @return `true` if the flash loan was successful."},"functionSelector":"5cffe9de","id":2035,"implemented":true,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"5105:9:5","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"receiver","nameLocation":"5146:8:5","nodeType":"VariableDeclaration","scope":2035,"src":"5124:30:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$3186","typeString":"contract IERC3156FlashBorrower"},"typeName":{"id":1911,"nodeType":"UserDefinedTypeName","pathNode":{"id":1910,"name":"IERC3156FlashBorrower","nameLocations":["5124:21:5"],"nodeType":"IdentifierPath","referencedDeclaration":3186,"src":"5124:21:5"},"referencedDeclaration":3186,"src":"5124:21:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$3186","typeString":"contract IERC3156FlashBorrower"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"token","nameLocation":"5172:5:5","nodeType":"VariableDeclaration","scope":2035,"src":"5164:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1913,"name":"address","nodeType":"ElementaryTypeName","src":"5164:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"value","nameLocation":"5195:5:5","nodeType":"VariableDeclaration","scope":2035,"src":"5187:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"5187:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"data","nameLocation":"5225:4:5","nodeType":"VariableDeclaration","scope":2035,"src":"5210:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1917,"name":"bytes","nodeType":"ElementaryTypeName","src":"5210:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5114:121:5"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2035,"src":"5260:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1920,"name":"bool","nodeType":"ElementaryTypeName","src":"5260:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5259:6:5"},"scope":2036,"src":"5096:962:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":2037,"src":"1051:5009:5","usedErrors":[860,863,1803,1808,1813,3288,3293,3298,3307,3312,3317],"usedEvents":[868,3425,3434]}],"src":"125:5936:5"},"id":5},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol","exportedSymbols":{"ERC20PausableUpgradeable":[2089],"ERC20Upgradeable":[1714],"Initializable":[1097],"PausableUpgradeable":[2739]},"id":2090,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2038,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":2040,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2090,"sourceUnit":1715,"src":"150:57:6","symbolAliases":[{"foreign":{"id":2039,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"158:16:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"../../../utils/PausableUpgradeable.sol","id":2042,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2090,"sourceUnit":2740,"src":"208:75:6","symbolAliases":[{"foreign":{"id":2041,"name":"PausableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"216:19:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":2044,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2090,"sourceUnit":1098,"src":"284:69:6","symbolAliases":[{"foreign":{"id":2043,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"292:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2046,"name":"Initializable","nameLocations":["1089:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1097,"src":"1089:13:6"},"id":2047,"nodeType":"InheritanceSpecifier","src":"1089:13:6"},{"baseName":{"id":2048,"name":"ERC20Upgradeable","nameLocations":["1104:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"1104:16:6"},"id":2049,"nodeType":"InheritanceSpecifier","src":"1104:16:6"},{"baseName":{"id":2050,"name":"PausableUpgradeable","nameLocations":["1122:19:6"],"nodeType":"IdentifierPath","referencedDeclaration":2739,"src":"1122:19:6"},"id":2051,"nodeType":"InheritanceSpecifier","src":"1122:19:6"}],"canonicalName":"ERC20PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2045,"nodeType":"StructuredDocumentation","src":"355:687:6","text":" @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":2089,"linearizedBaseContracts":[2089,2739,1714,3318,3517,3491,2452,1097],"name":"ERC20PausableUpgradeable","nameLocation":"1061:24:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":2059,"nodeType":"Block","src":"1206:44:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2056,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"1216:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1216:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2058,"nodeType":"ExpressionStatement","src":"1216:27:6"}]},"id":2060,"implemented":true,"kind":"function","modifiers":[{"id":2054,"kind":"modifierInvocation","modifierName":{"id":2053,"name":"onlyInitializing","nameLocations":["1189:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"1189:16:6"},"nodeType":"ModifierInvocation","src":"1189:16:6"}],"name":"__ERC20Pausable_init","nameLocation":"1157:20:6","nodeType":"FunctionDefinition","parameters":{"id":2052,"nodeType":"ParameterList","parameters":[],"src":"1177:2:6"},"returnParameters":{"id":2055,"nodeType":"ParameterList","parameters":[],"src":"1206:0:6"},"scope":2089,"src":"1148:102:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2065,"nodeType":"Block","src":"1324:7:6","statements":[]},"id":2066,"implemented":true,"kind":"function","modifiers":[{"id":2063,"kind":"modifierInvocation","modifierName":{"id":2062,"name":"onlyInitializing","nameLocations":["1307:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"1307:16:6"},"nodeType":"ModifierInvocation","src":"1307:16:6"}],"name":"__ERC20Pausable_init_unchained","nameLocation":"1265:30:6","nodeType":"FunctionDefinition","parameters":{"id":2061,"nodeType":"ParameterList","parameters":[],"src":"1295:2:6"},"returnParameters":{"id":2064,"nodeType":"ParameterList","parameters":[],"src":"1324:0:6"},"scope":2089,"src":"1256:75:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1513],"body":{"id":2087,"nodeType":"Block","src":"1560:47:6","statements":[{"expression":{"arguments":[{"id":2082,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"1584:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2083,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"1590:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"1594:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2079,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1570:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20PausableUpgradeable_$2089_$","typeString":"type(contract super ERC20PausableUpgradeable)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1576:7:6","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1513,"src":"1570:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1570:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2086,"nodeType":"ExpressionStatement","src":"1570:30:6"}]},"documentation":{"id":2067,"nodeType":"StructuredDocumentation","src":"1336:121:6","text":" @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."},"id":2088,"implemented":true,"kind":"function","modifiers":[{"id":2077,"kind":"modifierInvocation","modifierName":{"id":2076,"name":"whenNotPaused","nameLocations":["1546:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":2641,"src":"1546:13:6"},"nodeType":"ModifierInvocation","src":"1546:13:6"}],"name":"_update","nameLocation":"1471:7:6","nodeType":"FunctionDefinition","overrides":{"id":2075,"nodeType":"OverrideSpecifier","overrides":[],"src":"1537:8:6"},"parameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"from","nameLocation":"1487:4:6","nodeType":"VariableDeclaration","scope":2088,"src":"1479:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2068,"name":"address","nodeType":"ElementaryTypeName","src":"1479:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2071,"mutability":"mutable","name":"to","nameLocation":"1501:2:6","nodeType":"VariableDeclaration","scope":2088,"src":"1493:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2070,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2073,"mutability":"mutable","name":"value","nameLocation":"1513:5:6","nodeType":"VariableDeclaration","scope":2088,"src":"1505:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2072,"name":"uint256","nodeType":"ElementaryTypeName","src":"1505:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1478:41:6"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[],"src":"1560:0:6"},"scope":2089,"src":"1462:145:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2090,"src":"1043:566:6","usedErrors":[860,863,2602,2605,3288,3293,3298,3307,3312,3317],"usedEvents":[868,2594,2599,3425,3434]}],"src":"124:1486:6"},"id":6},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","exportedSymbols":{"ECDSA":[4156],"EIP712Upgradeable":[3083],"ERC20PermitUpgradeable":[2258],"ERC20Upgradeable":[1714],"IERC20Permit":[3553],"Initializable":[1097],"NoncesUpgradeable":[2563]},"id":2259,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2091,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","id":2093,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2259,"sourceUnit":3554,"src":"148:93:7","symbolAliases":[{"foreign":{"id":2092,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"156:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":2095,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2259,"sourceUnit":1715,"src":"242:57:7","symbolAliases":[{"foreign":{"id":2094,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"250:16:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":2097,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2259,"sourceUnit":4157,"src":"300:75:7","symbolAliases":[{"foreign":{"id":2096,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"308:5:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","file":"../../../utils/cryptography/EIP712Upgradeable.sol","id":2099,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2259,"sourceUnit":3084,"src":"376:84:7","symbolAliases":[{"foreign":{"id":2098,"name":"EIP712Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"384:17:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol","file":"../../../utils/NoncesUpgradeable.sol","id":2101,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2259,"sourceUnit":2564,"src":"461:71:7","symbolAliases":[{"foreign":{"id":2100,"name":"NoncesUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"469:17:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":2103,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2259,"sourceUnit":1098,"src":"533:69:7","symbolAliases":[{"foreign":{"id":2102,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"541:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2105,"name":"Initializable","nameLocations":["1136:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1097,"src":"1136:13:7"},"id":2106,"nodeType":"InheritanceSpecifier","src":"1136:13:7"},{"baseName":{"id":2107,"name":"ERC20Upgradeable","nameLocations":["1151:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"1151:16:7"},"id":2108,"nodeType":"InheritanceSpecifier","src":"1151:16:7"},{"baseName":{"id":2109,"name":"IERC20Permit","nameLocations":["1169:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":3553,"src":"1169:12:7"},"id":2110,"nodeType":"InheritanceSpecifier","src":"1169:12:7"},{"baseName":{"id":2111,"name":"EIP712Upgradeable","nameLocations":["1183:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":3083,"src":"1183:17:7"},"id":2112,"nodeType":"InheritanceSpecifier","src":"1183:17:7"},{"baseName":{"id":2113,"name":"NoncesUpgradeable","nameLocations":["1202:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":2563,"src":"1202:17:7"},"id":2114,"nodeType":"InheritanceSpecifier","src":"1202:17:7"}],"canonicalName":"ERC20PermitUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2104,"nodeType":"StructuredDocumentation","src":"604:487:7","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":2258,"linearizedBaseContracts":[2258,2563,3083,3250,3553,1714,3318,3517,3491,2452,1097],"name":"ERC20PermitUpgradeable","nameLocation":"1110:22:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2119,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"1251:15:7","nodeType":"VariableDeclaration","scope":2258,"src":"1226:146:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1226:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1287:84:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":2116,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1277:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1277:95:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":2120,"nodeType":"StructuredDocumentation","src":"1379:52:7","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":2124,"name":"ERC2612ExpiredSignature","nameLocation":"1442:23:7","nodeType":"ErrorDefinition","parameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"deadline","nameLocation":"1474:8:7","nodeType":"VariableDeclaration","scope":2124,"src":"1466:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1466:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1465:18:7"},"src":"1436:48:7"},{"documentation":{"id":2125,"nodeType":"StructuredDocumentation","src":"1490:45:7","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":2131,"name":"ERC2612InvalidSigner","nameLocation":"1546:20:7","nodeType":"ErrorDefinition","parameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"signer","nameLocation":"1575:6:7","nodeType":"VariableDeclaration","scope":2131,"src":"1567:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2126,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"owner","nameLocation":"1591:5:7","nodeType":"VariableDeclaration","scope":2131,"src":"1583:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2128,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:31:7"},"src":"1540:58:7"},{"body":{"id":2144,"nodeType":"Block","src":"1903:51:7","statements":[{"expression":{"arguments":[{"id":2140,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"1937:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1943:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":2139,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"1913:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1913:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2143,"nodeType":"ExpressionStatement","src":"1913:34:7"}]},"documentation":{"id":2132,"nodeType":"StructuredDocumentation","src":"1604:220:7","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":2145,"implemented":true,"kind":"function","modifiers":[{"id":2137,"kind":"modifierInvocation","modifierName":{"id":2136,"name":"onlyInitializing","nameLocations":["1886:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"1886:16:7"},"nodeType":"ModifierInvocation","src":"1886:16:7"}],"name":"__ERC20Permit_init","nameLocation":"1838:18:7","nodeType":"FunctionDefinition","parameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2134,"mutability":"mutable","name":"name","nameLocation":"1871:4:7","nodeType":"VariableDeclaration","scope":2145,"src":"1857:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2133,"name":"string","nodeType":"ElementaryTypeName","src":"1857:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1856:20:7"},"returnParameters":{"id":2138,"nodeType":"ParameterList","parameters":[],"src":"1903:0:7"},"scope":2258,"src":"1829:125:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2152,"nodeType":"Block","src":"2039:2:7","statements":[]},"id":2153,"implemented":true,"kind":"function","modifiers":[{"id":2150,"kind":"modifierInvocation","modifierName":{"id":2149,"name":"onlyInitializing","nameLocations":["2022:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"2022:16:7"},"nodeType":"ModifierInvocation","src":"2022:16:7"}],"name":"__ERC20Permit_init_unchained","nameLocation":"1969:28:7","nodeType":"FunctionDefinition","parameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2153,"src":"1998:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2146,"name":"string","nodeType":"ElementaryTypeName","src":"1998:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1997:15:7"},"returnParameters":{"id":2151,"nodeType":"ParameterList","parameters":[],"src":"2039:0:7"},"scope":2258,"src":"1960:81:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3538],"body":{"id":2229,"nodeType":"Block","src":"2284:483:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2171,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2298:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2304:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"2298:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2173,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"2316:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2298:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2180,"nodeType":"IfStatement","src":"2294:97:7","trueBody":{"id":2179,"nodeType":"Block","src":"2326:65:7","statements":[{"errorCall":{"arguments":[{"id":2176,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"2371:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2175,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"2347:23:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2347:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2178,"nodeType":"RevertStatement","src":"2340:40:7"}]}},{"assignments":[2182],"declarations":[{"constant":false,"id":2182,"mutability":"mutable","name":"structHash","nameLocation":"2409:10:7","nodeType":"VariableDeclaration","scope":2229,"src":"2401:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2401:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2196,"initialValue":{"arguments":[{"arguments":[{"id":2186,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"2443:15:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2187,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"2460:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2188,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"2467:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"2476:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2191,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"2493:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2190,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"2483:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2483:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2193,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"2501:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2184,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2432:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2436:6:7","memberName":"encode","nodeType":"MemberAccess","src":"2432:10:7","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2432:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2183,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2422:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2422:89:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2401:110:7"},{"assignments":[2198],"declarations":[{"constant":false,"id":2198,"mutability":"mutable","name":"hash","nameLocation":"2530:4:7","nodeType":"VariableDeclaration","scope":2229,"src":"2522:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2522:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2202,"initialValue":{"arguments":[{"id":2200,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"2554:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2199,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"2537:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2537:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2522:43:7"},{"assignments":[2204],"declarations":[{"constant":false,"id":2204,"mutability":"mutable","name":"signer","nameLocation":"2584:6:7","nodeType":"VariableDeclaration","scope":2229,"src":"2576:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2203,"name":"address","nodeType":"ElementaryTypeName","src":"2576:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2212,"initialValue":{"arguments":[{"id":2207,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"2607:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2208,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"2613:1:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2209,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"2616:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2210,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"2619:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2205,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"2593:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4156_$","typeString":"type(library ECDSA)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2599:7:7","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4106,"src":"2593:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2593:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2576:45:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2213,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"2635:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2214,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"2645:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2635:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2222,"nodeType":"IfStatement","src":"2631:88:7","trueBody":{"id":2221,"nodeType":"Block","src":"2652:67:7","statements":[{"errorCall":{"arguments":[{"id":2217,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"2694:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2218,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"2702:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2216,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"2673:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2673:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2220,"nodeType":"RevertStatement","src":"2666:42:7"}]}},{"expression":{"arguments":[{"id":2224,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"2738:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2225,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"2745:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"2754:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2223,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1597,1665],"referencedDeclaration":1597,"src":"2729:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2729:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2228,"nodeType":"ExpressionStatement","src":"2729:31:7"}]},"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"2047:43:7","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":2230,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"2104:6:7","nodeType":"FunctionDefinition","parameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"owner","nameLocation":"2128:5:7","nodeType":"VariableDeclaration","scope":2230,"src":"2120:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2155,"name":"address","nodeType":"ElementaryTypeName","src":"2120:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2158,"mutability":"mutable","name":"spender","nameLocation":"2151:7:7","nodeType":"VariableDeclaration","scope":2230,"src":"2143:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2157,"name":"address","nodeType":"ElementaryTypeName","src":"2143:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2160,"mutability":"mutable","name":"value","nameLocation":"2176:5:7","nodeType":"VariableDeclaration","scope":2230,"src":"2168:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2159,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"deadline","nameLocation":"2199:8:7","nodeType":"VariableDeclaration","scope":2230,"src":"2191:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"2191:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"v","nameLocation":"2223:1:7","nodeType":"VariableDeclaration","scope":2230,"src":"2217:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2163,"name":"uint8","nodeType":"ElementaryTypeName","src":"2217:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2166,"mutability":"mutable","name":"r","nameLocation":"2242:1:7","nodeType":"VariableDeclaration","scope":2230,"src":"2234:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2234:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2168,"mutability":"mutable","name":"s","nameLocation":"2261:1:7","nodeType":"VariableDeclaration","scope":2230,"src":"2253:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2253:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2110:158:7"},"returnParameters":{"id":2170,"nodeType":"ParameterList","parameters":[],"src":"2284:0:7"},"scope":2258,"src":"2095:672:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2515,3546],"body":{"id":2246,"nodeType":"Block","src":"2932:43:7","statements":[{"expression":{"arguments":[{"id":2243,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"2962:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2241,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2949:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20PermitUpgradeable_$2258_$","typeString":"type(contract super ERC20PermitUpgradeable)"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2955:6:7","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2515,"src":"2949:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2949:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2240,"id":2245,"nodeType":"Return","src":"2942:26:7"}]},"documentation":{"id":2231,"nodeType":"StructuredDocumentation","src":"2773:43:7","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":2247,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2830:6:7","nodeType":"FunctionDefinition","overrides":{"id":2237,"nodeType":"OverrideSpecifier","overrides":[{"id":2235,"name":"IERC20Permit","nameLocations":["2881:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":3553,"src":"2881:12:7"},{"id":2236,"name":"NoncesUpgradeable","nameLocations":["2895:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":2563,"src":"2895:17:7"}],"src":"2872:41:7"},"parameters":{"id":2234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2233,"mutability":"mutable","name":"owner","nameLocation":"2845:5:7","nodeType":"VariableDeclaration","scope":2247,"src":"2837:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2232,"name":"address","nodeType":"ElementaryTypeName","src":"2837:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2836:15:7"},"returnParameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2247,"src":"2923:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"2923:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2922:9:7"},"scope":2258,"src":"2821:154:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3552],"body":{"id":2256,"nodeType":"Block","src":"3150:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2253,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"3167:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3167:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2252,"id":2255,"nodeType":"Return","src":"3160:27:7"}]},"documentation":{"id":2248,"nodeType":"StructuredDocumentation","src":"2981:43:7","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":2257,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3091:16:7","nodeType":"FunctionDefinition","parameters":{"id":2249,"nodeType":"ParameterList","parameters":[],"src":"3107:2:7"},"returnParameters":{"id":2252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2257,"src":"3141:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3141:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3140:9:7"},"scope":2258,"src":"3082:112:7","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":2259,"src":"1092:2104:7","usedErrors":[860,863,2124,2131,2466,3288,3293,3298,3307,3312,3317,3819,3824,3829],"usedEvents":[868,3230,3425,3434]}],"src":"122:3075:7"},"id":7},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol","exportedSymbols":{"Checkpoints":[8716],"ERC20Upgradeable":[1714],"ERC20VotesUpgradeable":[2406],"Initializable":[1097],"VotesUpgradeable":[843]},"id":2407,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2260,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"121:24:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":2262,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2407,"sourceUnit":1715,"src":"147:57:8","symbolAliases":[{"foreign":{"id":2261,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"155:16:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol","file":"../../../governance/utils/VotesUpgradeable.sol","id":2264,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2407,"sourceUnit":844,"src":"205:80:8","symbolAliases":[{"foreign":{"id":2263,"name":"VotesUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"213:16:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","id":2266,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2407,"sourceUnit":8717,"src":"286:82:8","symbolAliases":[{"foreign":{"id":2265,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"294:11:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":2268,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2407,"sourceUnit":1098,"src":"369:69:8","symbolAliases":[{"foreign":{"id":2267,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"377:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2270,"name":"Initializable","nameLocations":["1341:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1097,"src":"1341:13:8"},"id":2271,"nodeType":"InheritanceSpecifier","src":"1341:13:8"},{"baseName":{"id":2272,"name":"ERC20Upgradeable","nameLocations":["1356:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"1356:16:8"},"id":2273,"nodeType":"InheritanceSpecifier","src":"1356:16:8"},{"baseName":{"id":2274,"name":"VotesUpgradeable","nameLocations":["1374:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":843,"src":"1374:16:8"},"id":2275,"nodeType":"InheritanceSpecifier","src":"1374:16:8"}],"canonicalName":"ERC20VotesUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2269,"nodeType":"StructuredDocumentation","src":"440:857:8","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked."},"fullyImplemented":true,"id":2406,"internalFunctionIDs":{"820":1,"834":2},"linearizedBaseContracts":[2406,843,3261,3166,3276,2563,3083,3250,1714,3318,3517,3491,2452,1097],"name":"ERC20VotesUpgradeable","nameLocation":"1316:21:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2276,"nodeType":"StructuredDocumentation","src":"1397:100:8","text":" @dev Total supply cap has been exceeded, introducing a risk of votes overflowing."},"errorSelector":"1cb15d26","id":2282,"name":"ERC20ExceededSafeSupply","nameLocation":"1508:23:8","nodeType":"ErrorDefinition","parameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"increasedSupply","nameLocation":"1540:15:8","nodeType":"VariableDeclaration","scope":2282,"src":"1532:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2277,"name":"uint256","nodeType":"ElementaryTypeName","src":"1532:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2280,"mutability":"mutable","name":"cap","nameLocation":"1565:3:8","nodeType":"VariableDeclaration","scope":2282,"src":"1557:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1557:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1531:38:8"},"src":"1502:68:8"},{"body":{"id":2287,"nodeType":"Block","src":"1631:7:8","statements":[]},"id":2288,"implemented":true,"kind":"function","modifiers":[{"id":2285,"kind":"modifierInvocation","modifierName":{"id":2284,"name":"onlyInitializing","nameLocations":["1614:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"1614:16:8"},"nodeType":"ModifierInvocation","src":"1614:16:8"}],"name":"__ERC20Votes_init","nameLocation":"1585:17:8","nodeType":"FunctionDefinition","parameters":{"id":2283,"nodeType":"ParameterList","parameters":[],"src":"1602:2:8"},"returnParameters":{"id":2286,"nodeType":"ParameterList","parameters":[],"src":"1631:0:8"},"scope":2406,"src":"1576:62:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2293,"nodeType":"Block","src":"1709:7:8","statements":[]},"id":2294,"implemented":true,"kind":"function","modifiers":[{"id":2291,"kind":"modifierInvocation","modifierName":{"id":2290,"name":"onlyInitializing","nameLocations":["1692:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"1692:16:8"},"nodeType":"ModifierInvocation","src":"1692:16:8"}],"name":"__ERC20Votes_init_unchained","nameLocation":"1653:27:8","nodeType":"FunctionDefinition","parameters":{"id":2289,"nodeType":"ParameterList","parameters":[],"src":"1680:2:8"},"returnParameters":{"id":2292,"nodeType":"ParameterList","parameters":[],"src":"1709:0:8"},"scope":2406,"src":"1644:72:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2306,"nodeType":"Block","src":"2468:41:8","statements":[{"expression":{"expression":{"arguments":[{"id":2302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2490:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2301,"name":"uint208","nodeType":"ElementaryTypeName","src":"2490:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":2300,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2485:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2485:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2499:3:8","memberName":"max","nodeType":"MemberAccess","src":"2485:17:8","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":2299,"id":2305,"nodeType":"Return","src":"2478:24:8"}]},"documentation":{"id":2295,"nodeType":"StructuredDocumentation","src":"1721:680:8","text":" @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n so that checkpoints can be stored in the Trace208 structure used by {{Votes}}. Increasing this value will not\n remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n {_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n additional logic requires it. When resolving override conflicts on this function, the minimum should be\n returned."},"id":2307,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"2415:10:8","nodeType":"FunctionDefinition","parameters":{"id":2296,"nodeType":"ParameterList","parameters":[],"src":"2425:2:8"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2307,"src":"2459:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"2459:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2458:9:8"},"scope":2406,"src":"2406:103:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1513],"body":{"id":2360,"nodeType":"Block","src":"2733:329:8","statements":[{"expression":{"arguments":[{"id":2321,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"2757:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2322,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"2763:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"2767:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2318,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2743:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20VotesUpgradeable_$2406_$","typeString":"type(contract super ERC20VotesUpgradeable)"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2749:7:8","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1513,"src":"2743:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2325,"nodeType":"ExpressionStatement","src":"2743:30:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"2787:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2803:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2795:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2327,"name":"address","nodeType":"ElementaryTypeName","src":"2795:7:8","typeDescriptions":{}}},"id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2795:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2787:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2353,"nodeType":"IfStatement","src":"2783:226:8","trueBody":{"id":2352,"nodeType":"Block","src":"2807:202:8","statements":[{"assignments":[2333],"declarations":[{"constant":false,"id":2333,"mutability":"mutable","name":"supply","nameLocation":"2829:6:8","nodeType":"VariableDeclaration","scope":2352,"src":"2821:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"2821:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2336,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2334,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"2838:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2838:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2821:30:8"},{"assignments":[2338],"declarations":[{"constant":false,"id":2338,"mutability":"mutable","name":"cap","nameLocation":"2873:3:8","nodeType":"VariableDeclaration","scope":2352,"src":"2865:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2865:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2341,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2339,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"2879:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2879:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2865:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2342,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"2909:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2343,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"2918:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2909:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2351,"nodeType":"IfStatement","src":"2905:94:8","trueBody":{"id":2350,"nodeType":"Block","src":"2923:76:8","statements":[{"errorCall":{"arguments":[{"id":2346,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"2972:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2347,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"2980:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2345,"name":"ERC20ExceededSafeSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2948:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2948:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2349,"nodeType":"RevertStatement","src":"2941:43:8"}]}}]}},{"expression":{"arguments":[{"id":2355,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"3039:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2356,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"3045:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"3049:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2354,"name":"_transferVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"3018:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3018:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2359,"nodeType":"ExpressionStatement","src":"3018:37:8"}]},"documentation":{"id":2308,"nodeType":"StructuredDocumentation","src":"2515:129:8","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":2361,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2658:7:8","nodeType":"FunctionDefinition","overrides":{"id":2316,"nodeType":"OverrideSpecifier","overrides":[],"src":"2724:8:8"},"parameters":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"from","nameLocation":"2674:4:8","nodeType":"VariableDeclaration","scope":2361,"src":"2666:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2309,"name":"address","nodeType":"ElementaryTypeName","src":"2666:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2312,"mutability":"mutable","name":"to","nameLocation":"2688:2:8","nodeType":"VariableDeclaration","scope":2361,"src":"2680:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2311,"name":"address","nodeType":"ElementaryTypeName","src":"2680:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2314,"mutability":"mutable","name":"value","nameLocation":"2700:5:8","nodeType":"VariableDeclaration","scope":2361,"src":"2692:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"2692:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:41:8"},"returnParameters":{"id":2317,"nodeType":"ParameterList","parameters":[],"src":"2733:0:8"},"scope":2406,"src":"2649:413:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[842],"body":{"id":2374,"nodeType":"Block","src":"3413:42:8","statements":[{"expression":{"arguments":[{"id":2371,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"3440:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2370,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"3430:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3430:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2369,"id":2373,"nodeType":"Return","src":"3423:25:8"}]},"documentation":{"id":2362,"nodeType":"StructuredDocumentation","src":"3068:249:8","text":" @dev Returns the voting units of an `account`.\n WARNING: Overriding this function may compromise the internal vote accounting.\n `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change."},"id":2375,"implemented":true,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"3331:15:8","nodeType":"FunctionDefinition","overrides":{"id":2366,"nodeType":"OverrideSpecifier","overrides":[],"src":"3386:8:8"},"parameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"account","nameLocation":"3355:7:8","nodeType":"VariableDeclaration","scope":2375,"src":"3347:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2363,"name":"address","nodeType":"ElementaryTypeName","src":"3347:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3346:17:8"},"returnParameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2375,"src":"3404:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2367,"name":"uint256","nodeType":"ElementaryTypeName","src":"3404:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3403:9:8"},"scope":2406,"src":"3322:133:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2387,"nodeType":"Block","src":"3608:48:8","statements":[{"expression":{"arguments":[{"id":2384,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"3641:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2383,"name":"_numCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"3625:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint32_$","typeString":"function (address) view returns (uint32)"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3625:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":2382,"id":2386,"nodeType":"Return","src":"3618:31:8"}]},"documentation":{"id":2376,"nodeType":"StructuredDocumentation","src":"3461:64:8","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":2388,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"3539:14:8","nodeType":"FunctionDefinition","parameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"account","nameLocation":"3562:7:8","nodeType":"VariableDeclaration","scope":2388,"src":"3554:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2377,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3553:17:8"},"returnParameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2388,"src":"3600:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2380,"name":"uint32","nodeType":"ElementaryTypeName","src":"3600:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3599:8:8"},"scope":2406,"src":"3530:126:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2404,"nodeType":"Block","src":"3846:50:8","statements":[{"expression":{"arguments":[{"id":2400,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"3876:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2401,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"3885:3:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2399,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"3863:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint32_$returns$_t_struct$_Checkpoint208_$7683_memory_ptr_$","typeString":"function (address,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":2398,"id":2403,"nodeType":"Return","src":"3856:33:8"}]},"documentation":{"id":2389,"nodeType":"StructuredDocumentation","src":"3662:66:8","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":2405,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"3742:11:8","nodeType":"FunctionDefinition","parameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"account","nameLocation":"3762:7:8","nodeType":"VariableDeclaration","scope":2405,"src":"3754:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2390,"name":"address","nodeType":"ElementaryTypeName","src":"3754:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2393,"mutability":"mutable","name":"pos","nameLocation":"3778:3:8","nodeType":"VariableDeclaration","scope":2405,"src":"3771:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2392,"name":"uint32","nodeType":"ElementaryTypeName","src":"3771:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3753:29:8"},"returnParameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2405,"src":"3812:32:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":2396,"nodeType":"UserDefinedTypeName","pathNode":{"id":2395,"name":"Checkpoints.Checkpoint208","nameLocations":["3812:11:8","3824:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":7683,"src":"3812:25:8"},"referencedDeclaration":7683,"src":"3812:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"3811:34:8"},"scope":2406,"src":"3733:163:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2407,"src":"1298:2600:8","usedErrors":[262,269,860,863,2282,2466,3091,3288,3293,3298,3307,3312,3317,3819,3824,3829,5294,7152],"usedEvents":[868,3100,3109,3230,3425,3434]}],"src":"121:3778:8"},"id":8},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2452],"Initializable":[1097]},"id":2453,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2408,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2410,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2453,"sourceUnit":1098,"src":"126:63:9","symbolAliases":[{"foreign":{"id":2409,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"134:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2412,"name":"Initializable","nameLocations":["728:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":1097,"src":"728:13:9"},"id":2413,"nodeType":"InheritanceSpecifier","src":"728:13:9"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"191:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2452,"linearizedBaseContracts":[2452,1097],"name":"ContextUpgradeable","nameLocation":"706:18:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":2418,"nodeType":"Block","src":"800:7:9","statements":[]},"id":2419,"implemented":true,"kind":"function","modifiers":[{"id":2416,"kind":"modifierInvocation","modifierName":{"id":2415,"name":"onlyInitializing","nameLocations":["783:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"783:16:9"},"nodeType":"ModifierInvocation","src":"783:16:9"}],"name":"__Context_init","nameLocation":"757:14:9","nodeType":"FunctionDefinition","parameters":{"id":2414,"nodeType":"ParameterList","parameters":[],"src":"771:2:9"},"returnParameters":{"id":2417,"nodeType":"ParameterList","parameters":[],"src":"800:0:9"},"scope":2452,"src":"748:59:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2424,"nodeType":"Block","src":"875:7:9","statements":[]},"id":2425,"implemented":true,"kind":"function","modifiers":[{"id":2422,"kind":"modifierInvocation","modifierName":{"id":2421,"name":"onlyInitializing","nameLocations":["858:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"858:16:9"},"nodeType":"ModifierInvocation","src":"858:16:9"}],"name":"__Context_init_unchained","nameLocation":"822:24:9","nodeType":"FunctionDefinition","parameters":{"id":2420,"nodeType":"ParameterList","parameters":[],"src":"846:2:9"},"returnParameters":{"id":2423,"nodeType":"ParameterList","parameters":[],"src":"875:0:9"},"scope":2452,"src":"813:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2433,"nodeType":"Block","src":"949:34:9","statements":[{"expression":{"expression":{"id":2430,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:9","memberName":"sender","nodeType":"MemberAccess","src":"966:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2429,"id":2432,"nodeType":"Return","src":"959:17:9"}]},"id":2434,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:9","nodeType":"FunctionDefinition","parameters":{"id":2426,"nodeType":"ParameterList","parameters":[],"src":"906:2:9"},"returnParameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2434,"src":"940:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2427,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:9"},"scope":2452,"src":"887:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2442,"nodeType":"Block","src":"1056:32:9","statements":[{"expression":{"expression":{"id":2439,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:9","memberName":"data","nodeType":"MemberAccess","src":"1073:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2438,"id":2441,"nodeType":"Return","src":"1066:15:9"}]},"id":2443,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:9","nodeType":"FunctionDefinition","parameters":{"id":2435,"nodeType":"ParameterList","parameters":[],"src":"1006:2:9"},"returnParameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2443,"src":"1040:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2436,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:9"},"scope":2452,"src":"989:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2450,"nodeType":"Block","src":"1166:25:9","statements":[{"expression":{"hexValue":"30","id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2447,"id":2449,"nodeType":"Return","src":"1176:8:9"}]},"id":2451,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:9","nodeType":"FunctionDefinition","parameters":{"id":2444,"nodeType":"ParameterList","parameters":[],"src":"1123:2:9"},"returnParameters":{"id":2447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2451,"src":"1157:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:9"},"scope":2452,"src":"1094:97:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2453,"src":"688:505:9","usedErrors":[860,863],"usedEvents":[868]}],"src":"101:1093:9"},"id":9},"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol","exportedSymbols":{"Initializable":[1097],"NoncesUpgradeable":[2563]},"id":2564,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2454,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:10"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2564,"sourceUnit":1098,"src":"124:63:10","symbolAliases":[{"foreign":{"id":2455,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"132:13:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2458,"name":"Initializable","nameLocations":["312:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1097,"src":"312:13:10"},"id":2459,"nodeType":"InheritanceSpecifier","src":"312:13:10"}],"canonicalName":"NoncesUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2457,"nodeType":"StructuredDocumentation","src":"189:83:10","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":2563,"linearizedBaseContracts":[2563,1097],"name":"NoncesUpgradeable","nameLocation":"291:17:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2460,"nodeType":"StructuredDocumentation","src":"332:90:10","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":2466,"name":"InvalidAccountNonce","nameLocation":"433:19:10","nodeType":"ErrorDefinition","parameters":{"id":2465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"mutability":"mutable","name":"account","nameLocation":"461:7:10","nodeType":"VariableDeclaration","scope":2466,"src":"453:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2461,"name":"address","nodeType":"ElementaryTypeName","src":"453:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2464,"mutability":"mutable","name":"currentNonce","nameLocation":"478:12:10","nodeType":"VariableDeclaration","scope":2466,"src":"470:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2463,"name":"uint256","nodeType":"ElementaryTypeName","src":"470:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"452:39:10"},"src":"427:65:10"},{"canonicalName":"NoncesUpgradeable.NoncesStorage","documentation":{"id":2467,"nodeType":"StructuredDocumentation","src":"498:64:10","text":"@custom:storage-location erc7201:openzeppelin.storage.Nonces"},"id":2472,"members":[{"constant":false,"id":2471,"mutability":"mutable","name":"_nonces","nameLocation":"634:7:10","nodeType":"VariableDeclaration","scope":2472,"src":"598:43:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2470,"keyName":"account","keyNameLocation":"614:7:10","keyType":{"id":2468,"name":"address","nodeType":"ElementaryTypeName","src":"606:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"598:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"625:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"NoncesStorage","nameLocation":"574:13:10","nodeType":"StructDefinition","scope":2563,"src":"567:81:10","visibility":"public"},{"constant":true,"id":2475,"mutability":"constant","name":"NoncesStorageLocation","nameLocation":"789:21:10","nodeType":"VariableDeclaration","scope":2563,"src":"764:115:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"764:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835616234326365643632383838383235396330386163393864623165623063663730326663313530313334343331316438623130306364316266653462623030","id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"813:66:10","typeDescriptions":{"typeIdentifier":"t_rational_41026498920877473550552694860415970151284396403628511442111957027090812156672_by_1","typeString":"int_const 4102...(69 digits omitted)...6672"},"value":"0x5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00"},"visibility":"private"},{"body":{"id":2482,"nodeType":"Block","src":"962:80:10","statements":[{"AST":{"nodeType":"YulBlock","src":"981:55:10","statements":[{"nodeType":"YulAssignment","src":"995:31:10","value":{"name":"NoncesStorageLocation","nodeType":"YulIdentifier","src":"1005:21:10"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"995:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2479,"isOffset":false,"isSlot":true,"src":"995:6:10","suffix":"slot","valueSize":1},{"declaration":2475,"isOffset":false,"isSlot":false,"src":"1005:21:10","valueSize":1}],"id":2481,"nodeType":"InlineAssembly","src":"972:64:10"}]},"id":2483,"implemented":true,"kind":"function","modifiers":[],"name":"_getNoncesStorage","nameLocation":"895:17:10","nodeType":"FunctionDefinition","parameters":{"id":2476,"nodeType":"ParameterList","parameters":[],"src":"912:2:10"},"returnParameters":{"id":2480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2479,"mutability":"mutable","name":"$","nameLocation":"959:1:10","nodeType":"VariableDeclaration","scope":2483,"src":"937:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$2472_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"},"typeName":{"id":2478,"nodeType":"UserDefinedTypeName","pathNode":{"id":2477,"name":"NoncesStorage","nameLocations":["937:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":2472,"src":"937:13:10"},"referencedDeclaration":2472,"src":"937:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$2472_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"}},"visibility":"internal"}],"src":"936:25:10"},"scope":2563,"src":"886:156:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2488,"nodeType":"Block","src":"1099:7:10","statements":[]},"id":2489,"implemented":true,"kind":"function","modifiers":[{"id":2486,"kind":"modifierInvocation","modifierName":{"id":2485,"name":"onlyInitializing","nameLocations":["1082:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"1082:16:10"},"nodeType":"ModifierInvocation","src":"1082:16:10"}],"name":"__Nonces_init","nameLocation":"1057:13:10","nodeType":"FunctionDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[],"src":"1070:2:10"},"returnParameters":{"id":2487,"nodeType":"ParameterList","parameters":[],"src":"1099:0:10"},"scope":2563,"src":"1048:58:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2494,"nodeType":"Block","src":"1173:7:10","statements":[]},"id":2495,"implemented":true,"kind":"function","modifiers":[{"id":2492,"kind":"modifierInvocation","modifierName":{"id":2491,"name":"onlyInitializing","nameLocations":["1156:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"1156:16:10"},"nodeType":"ModifierInvocation","src":"1156:16:10"}],"name":"__Nonces_init_unchained","nameLocation":"1121:23:10","nodeType":"FunctionDefinition","parameters":{"id":2490,"nodeType":"ParameterList","parameters":[],"src":"1144:2:10"},"returnParameters":{"id":2493,"nodeType":"ParameterList","parameters":[],"src":"1173:0:10"},"scope":2563,"src":"1112:68:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2514,"nodeType":"Block","src":"1328:95:10","statements":[{"assignments":[2505],"declarations":[{"constant":false,"id":2505,"mutability":"mutable","name":"$","nameLocation":"1360:1:10","nodeType":"VariableDeclaration","scope":2514,"src":"1338:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$2472_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"},"typeName":{"id":2504,"nodeType":"UserDefinedTypeName","pathNode":{"id":2503,"name":"NoncesStorage","nameLocations":["1338:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":2472,"src":"1338:13:10"},"referencedDeclaration":2472,"src":"1338:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$2472_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"}},"visibility":"internal"}],"id":2508,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2506,"name":"_getNoncesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1364:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_NoncesStorage_$2472_storage_ptr_$","typeString":"function () pure returns (struct NoncesUpgradeable.NoncesStorage storage pointer)"}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1364:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$2472_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1338:45:10"},{"expression":{"baseExpression":{"expression":{"id":2509,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"1400:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$2472_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"id":2510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1402:7:10","memberName":"_nonces","nodeType":"MemberAccess","referencedDeclaration":2471,"src":"1400:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2512,"indexExpression":{"id":2511,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"1410:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1400:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2502,"id":2513,"nodeType":"Return","src":"1393:23:10"}]},"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"1185:69:10","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":2515,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1268:6:10","nodeType":"FunctionDefinition","parameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"owner","nameLocation":"1283:5:10","nodeType":"VariableDeclaration","scope":2515,"src":"1275:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2497,"name":"address","nodeType":"ElementaryTypeName","src":"1275:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1274:15:10"},"returnParameters":{"id":2502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2515,"src":"1319:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1318:9:10"},"scope":2563,"src":"1259:164:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2536,"nodeType":"Block","src":"1606:383:10","statements":[{"assignments":[2525],"declarations":[{"constant":false,"id":2525,"mutability":"mutable","name":"$","nameLocation":"1638:1:10","nodeType":"VariableDeclaration","scope":2536,"src":"1616:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$2472_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"},"typeName":{"id":2524,"nodeType":"UserDefinedTypeName","pathNode":{"id":2523,"name":"NoncesStorage","nameLocations":["1616:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":2472,"src":"1616:13:10"},"referencedDeclaration":2472,"src":"1616:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$2472_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"}},"visibility":"internal"}],"id":2528,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2526,"name":"_getNoncesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1642:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_NoncesStorage_$2472_storage_ptr_$","typeString":"function () pure returns (struct NoncesUpgradeable.NoncesStorage storage pointer)"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1642:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$2472_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1616:45:10"},{"id":2535,"nodeType":"UncheckedBlock","src":"1864:119:10","statements":[{"expression":{"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1954:18:10","subExpression":{"baseExpression":{"expression":{"id":2529,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"1954:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$2472_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"id":2530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1956:7:10","memberName":"_nonces","nodeType":"MemberAccess","referencedDeclaration":2471,"src":"1954:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2532,"indexExpression":{"id":2531,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"1964:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1954:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2522,"id":2534,"nodeType":"Return","src":"1947:25:10"}]}]},"documentation":{"id":2516,"nodeType":"StructuredDocumentation","src":"1429:103:10","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":2537,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"1546:9:10","nodeType":"FunctionDefinition","parameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"owner","nameLocation":"1564:5:10","nodeType":"VariableDeclaration","scope":2537,"src":"1556:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2517,"name":"address","nodeType":"ElementaryTypeName","src":"1556:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1555:15:10"},"returnParameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"1597:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:9:10"},"scope":2563,"src":"1537:452:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2561,"nodeType":"Block","src":"2173:149:10","statements":[{"assignments":[2546],"declarations":[{"constant":false,"id":2546,"mutability":"mutable","name":"current","nameLocation":"2191:7:10","nodeType":"VariableDeclaration","scope":2561,"src":"2183:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"2183:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2550,"initialValue":{"arguments":[{"id":2548,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"2211:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2547,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"2201:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2201:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2183:34:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2551,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"2231:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2552,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"2240:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2231:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2560,"nodeType":"IfStatement","src":"2227:89:10","trueBody":{"id":2559,"nodeType":"Block","src":"2249:67:10","statements":[{"errorCall":{"arguments":[{"id":2555,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"2290:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2556,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"2297:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2554,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"2270:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2558,"nodeType":"RevertStatement","src":"2263:42:10"}]}}]},"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"1995:100:10","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":2562,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"2109:16:10","nodeType":"FunctionDefinition","parameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"owner","nameLocation":"2134:5:10","nodeType":"VariableDeclaration","scope":2562,"src":"2126:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2539,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2542,"mutability":"mutable","name":"nonce","nameLocation":"2149:5:10","nodeType":"VariableDeclaration","scope":2562,"src":"2141:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"2141:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2125:30:10"},"returnParameters":{"id":2544,"nodeType":"ParameterList","parameters":[],"src":"2173:0:10"},"scope":2563,"src":"2100:222:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2564,"src":"273:2051:10","usedErrors":[860,863,2466],"usedEvents":[868]}],"src":"99:2226:10"},"id":10},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2452],"Initializable":[1097],"PausableUpgradeable":[2739]},"id":2740,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2565,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:11"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2567,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2740,"sourceUnit":2453,"src":"128:67:11","symbolAliases":[{"foreign":{"id":2566,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"136:18:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2569,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2740,"sourceUnit":1098,"src":"196:63:11","symbolAliases":[{"foreign":{"id":2568,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"204:13:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2571,"name":"Initializable","nameLocations":["742:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":1097,"src":"742:13:11"},"id":2572,"nodeType":"InheritanceSpecifier","src":"742:13:11"},{"baseName":{"id":2573,"name":"ContextUpgradeable","nameLocations":["757:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":2452,"src":"757:18:11"},"id":2574,"nodeType":"InheritanceSpecifier","src":"757:18:11"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"261:439:11","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":2739,"linearizedBaseContracts":[2739,2452,1097],"name":"PausableUpgradeable","nameLocation":"719:19:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PausableUpgradeable.PausableStorage","documentation":{"id":2575,"nodeType":"StructuredDocumentation","src":"782:66:11","text":"@custom:storage-location erc7201:openzeppelin.storage.Pausable"},"id":2578,"members":[{"constant":false,"id":2577,"mutability":"mutable","name":"_paused","nameLocation":"891:7:11","nodeType":"VariableDeclaration","scope":2578,"src":"886:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2576,"name":"bool","nodeType":"ElementaryTypeName","src":"886:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PausableStorage","nameLocation":"860:15:11","nodeType":"StructDefinition","scope":2739,"src":"853:52:11","visibility":"public"},{"constant":true,"id":2581,"mutability":"constant","name":"PausableStorageLocation","nameLocation":"1048:23:11","nodeType":"VariableDeclaration","scope":2739,"src":"1023:117:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1023:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1074:66:11","typeDescriptions":{"typeIdentifier":"t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1","typeString":"int_const 9289...(69 digits omitted)...6832"},"value":"0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"},"visibility":"private"},{"body":{"id":2588,"nodeType":"Block","src":"1227:82:11","statements":[{"AST":{"nodeType":"YulBlock","src":"1246:57:11","statements":[{"nodeType":"YulAssignment","src":"1260:33:11","value":{"name":"PausableStorageLocation","nodeType":"YulIdentifier","src":"1270:23:11"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"1260:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2585,"isOffset":false,"isSlot":true,"src":"1260:6:11","suffix":"slot","valueSize":1},{"declaration":2581,"isOffset":false,"isSlot":false,"src":"1270:23:11","valueSize":1}],"id":2587,"nodeType":"InlineAssembly","src":"1237:66:11"}]},"id":2589,"implemented":true,"kind":"function","modifiers":[],"name":"_getPausableStorage","nameLocation":"1156:19:11","nodeType":"FunctionDefinition","parameters":{"id":2582,"nodeType":"ParameterList","parameters":[],"src":"1175:2:11"},"returnParameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"$","nameLocation":"1224:1:11","nodeType":"VariableDeclaration","scope":2589,"src":"1200:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":2584,"nodeType":"UserDefinedTypeName","pathNode":{"id":2583,"name":"PausableStorage","nameLocations":["1200:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":2578,"src":"1200:15:11"},"referencedDeclaration":2578,"src":"1200:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"src":"1199:27:11"},"scope":2739,"src":"1147:162:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"anonymous":false,"documentation":{"id":2590,"nodeType":"StructuredDocumentation","src":"1315:73:11","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":2594,"name":"Paused","nameLocation":"1399:6:11","nodeType":"EventDefinition","parameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2592,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1414:7:11","nodeType":"VariableDeclaration","scope":2594,"src":"1406:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2591,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1405:17:11"},"src":"1393:30:11"},{"anonymous":false,"documentation":{"id":2595,"nodeType":"StructuredDocumentation","src":"1429:70:11","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":2599,"name":"Unpaused","nameLocation":"1510:8:11","nodeType":"EventDefinition","parameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1527:7:11","nodeType":"VariableDeclaration","scope":2599,"src":"1519:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2596,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:17:11"},"src":"1504:32:11"},{"documentation":{"id":2600,"nodeType":"StructuredDocumentation","src":"1542:76:11","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":2602,"name":"EnforcedPause","nameLocation":"1629:13:11","nodeType":"ErrorDefinition","parameters":{"id":2601,"nodeType":"ParameterList","parameters":[],"src":"1642:2:11"},"src":"1623:22:11"},{"documentation":{"id":2603,"nodeType":"StructuredDocumentation","src":"1651:80:11","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":2605,"name":"ExpectedPause","nameLocation":"1742:13:11","nodeType":"ErrorDefinition","parameters":{"id":2604,"nodeType":"ParameterList","parameters":[],"src":"1755:2:11"},"src":"1736:22:11"},{"body":{"id":2614,"nodeType":"Block","src":"1889:44:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2611,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"1899:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1899:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2613,"nodeType":"ExpressionStatement","src":"1899:27:11"}]},"documentation":{"id":2606,"nodeType":"StructuredDocumentation","src":"1764:67:11","text":" @dev Initializes the contract in unpaused state."},"id":2615,"implemented":true,"kind":"function","modifiers":[{"id":2609,"kind":"modifierInvocation","modifierName":{"id":2608,"name":"onlyInitializing","nameLocations":["1872:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"1872:16:11"},"nodeType":"ModifierInvocation","src":"1872:16:11"}],"name":"__Pausable_init","nameLocation":"1845:15:11","nodeType":"FunctionDefinition","parameters":{"id":2607,"nodeType":"ParameterList","parameters":[],"src":"1860:2:11"},"returnParameters":{"id":2610,"nodeType":"ParameterList","parameters":[],"src":"1889:0:11"},"scope":2739,"src":"1836:97:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2632,"nodeType":"Block","src":"2002:93:11","statements":[{"assignments":[2622],"declarations":[{"constant":false,"id":2622,"mutability":"mutable","name":"$","nameLocation":"2036:1:11","nodeType":"VariableDeclaration","scope":2632,"src":"2012:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":2621,"nodeType":"UserDefinedTypeName","pathNode":{"id":2620,"name":"PausableStorage","nameLocations":["2012:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":2578,"src":"2012:15:11"},"referencedDeclaration":2578,"src":"2012:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":2625,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2623,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"2040:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$2578_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2040:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2012:49:11"},{"expression":{"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2626,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"2071:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":2628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2073:7:11","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":2577,"src":"2071:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2083:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2071:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2631,"nodeType":"ExpressionStatement","src":"2071:17:11"}]},"id":2633,"implemented":true,"kind":"function","modifiers":[{"id":2618,"kind":"modifierInvocation","modifierName":{"id":2617,"name":"onlyInitializing","nameLocations":["1985:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"1985:16:11"},"nodeType":"ModifierInvocation","src":"1985:16:11"}],"name":"__Pausable_init_unchained","nameLocation":"1948:25:11","nodeType":"FunctionDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[],"src":"1973:2:11"},"returnParameters":{"id":2619,"nodeType":"ParameterList","parameters":[],"src":"2002:0:11"},"scope":2739,"src":"1939:156:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2640,"nodeType":"Block","src":"2306:47:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2636,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"2316:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2638,"nodeType":"ExpressionStatement","src":"2316:19:11"},{"id":2639,"nodeType":"PlaceholderStatement","src":"2345:1:11"}]},"documentation":{"id":2634,"nodeType":"StructuredDocumentation","src":"2101:175:11","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":2641,"name":"whenNotPaused","nameLocation":"2290:13:11","nodeType":"ModifierDefinition","parameters":{"id":2635,"nodeType":"ParameterList","parameters":[],"src":"2303:2:11"},"src":"2281:72:11","virtual":false,"visibility":"internal"},{"body":{"id":2648,"nodeType":"Block","src":"2553:44:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2644,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"2563:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2646,"nodeType":"ExpressionStatement","src":"2563:16:11"},{"id":2647,"nodeType":"PlaceholderStatement","src":"2589:1:11"}]},"documentation":{"id":2642,"nodeType":"StructuredDocumentation","src":"2359:167:11","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":2649,"name":"whenPaused","nameLocation":"2540:10:11","nodeType":"ModifierDefinition","parameters":{"id":2643,"nodeType":"ParameterList","parameters":[],"src":"2550:2:11"},"src":"2531:66:11","virtual":false,"visibility":"internal"},{"body":{"id":2664,"nodeType":"Block","src":"2745:92:11","statements":[{"assignments":[2657],"declarations":[{"constant":false,"id":2657,"mutability":"mutable","name":"$","nameLocation":"2779:1:11","nodeType":"VariableDeclaration","scope":2664,"src":"2755:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":2656,"nodeType":"UserDefinedTypeName","pathNode":{"id":2655,"name":"PausableStorage","nameLocations":["2755:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":2578,"src":"2755:15:11"},"referencedDeclaration":2578,"src":"2755:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":2660,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2658,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"2783:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$2578_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2755:49:11"},{"expression":{"expression":{"id":2661,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"2821:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":2662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2823:7:11","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":2577,"src":"2821:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2654,"id":2663,"nodeType":"Return","src":"2814:16:11"}]},"documentation":{"id":2650,"nodeType":"StructuredDocumentation","src":"2603:84:11","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":2665,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"2701:6:11","nodeType":"FunctionDefinition","parameters":{"id":2651,"nodeType":"ParameterList","parameters":[],"src":"2707:2:11"},"returnParameters":{"id":2654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2665,"src":"2739:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2652,"name":"bool","nodeType":"ElementaryTypeName","src":"2739:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2738:6:11"},"scope":2739,"src":"2692:145:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2676,"nodeType":"Block","src":"2956:77:11","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2669,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"2970:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2675,"nodeType":"IfStatement","src":"2966:61:11","trueBody":{"id":2674,"nodeType":"Block","src":"2980:47:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2671,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"3001:13:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3001:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2673,"nodeType":"RevertStatement","src":"2994:22:11"}]}}]},"documentation":{"id":2666,"nodeType":"StructuredDocumentation","src":"2843:57:11","text":" @dev Throws if the contract is paused."},"id":2677,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2914:17:11","nodeType":"FunctionDefinition","parameters":{"id":2667,"nodeType":"ParameterList","parameters":[],"src":"2931:2:11"},"returnParameters":{"id":2668,"nodeType":"ParameterList","parameters":[],"src":"2956:0:11"},"scope":2739,"src":"2905:128:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2689,"nodeType":"Block","src":"3153:78:11","statements":[{"condition":{"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3167:9:11","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2681,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"3168:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2688,"nodeType":"IfStatement","src":"3163:62:11","trueBody":{"id":2687,"nodeType":"Block","src":"3178:47:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2684,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"3199:13:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2686,"nodeType":"RevertStatement","src":"3192:22:11"}]}}]},"documentation":{"id":2678,"nodeType":"StructuredDocumentation","src":"3039:61:11","text":" @dev Throws if the contract is not paused."},"id":2690,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"3114:14:11","nodeType":"FunctionDefinition","parameters":{"id":2679,"nodeType":"ParameterList","parameters":[],"src":"3128:2:11"},"returnParameters":{"id":2680,"nodeType":"ParameterList","parameters":[],"src":"3153:0:11"},"scope":2739,"src":"3105:126:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2713,"nodeType":"Block","src":"3415:127:11","statements":[{"assignments":[2698],"declarations":[{"constant":false,"id":2698,"mutability":"mutable","name":"$","nameLocation":"3449:1:11","nodeType":"VariableDeclaration","scope":2713,"src":"3425:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":2697,"nodeType":"UserDefinedTypeName","pathNode":{"id":2696,"name":"PausableStorage","nameLocations":["3425:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":2578,"src":"3425:15:11"},"referencedDeclaration":2578,"src":"3425:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":2701,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2699,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"3453:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$2578_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3453:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3425:49:11"},{"expression":{"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2702,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"3484:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":2704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3486:7:11","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":2577,"src":"3484:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3496:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3484:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2707,"nodeType":"ExpressionStatement","src":"3484:16:11"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2709,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"3522:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3522:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2708,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"3515:6:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3515:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2712,"nodeType":"EmitStatement","src":"3510:25:11"}]},"documentation":{"id":2691,"nodeType":"StructuredDocumentation","src":"3237:124:11","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":2714,"implemented":true,"kind":"function","modifiers":[{"id":2694,"kind":"modifierInvocation","modifierName":{"id":2693,"name":"whenNotPaused","nameLocations":["3401:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2641,"src":"3401:13:11"},"nodeType":"ModifierInvocation","src":"3401:13:11"}],"name":"_pause","nameLocation":"3375:6:11","nodeType":"FunctionDefinition","parameters":{"id":2692,"nodeType":"ParameterList","parameters":[],"src":"3381:2:11"},"returnParameters":{"id":2695,"nodeType":"ParameterList","parameters":[],"src":"3415:0:11"},"scope":2739,"src":"3366:176:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2737,"nodeType":"Block","src":"3722:130:11","statements":[{"assignments":[2722],"declarations":[{"constant":false,"id":2722,"mutability":"mutable","name":"$","nameLocation":"3756:1:11","nodeType":"VariableDeclaration","scope":2737,"src":"3732:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":2721,"nodeType":"UserDefinedTypeName","pathNode":{"id":2720,"name":"PausableStorage","nameLocations":["3732:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":2578,"src":"3732:15:11"},"referencedDeclaration":2578,"src":"3732:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":2725,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2723,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"3760:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$2578_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3760:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3732:49:11"},{"expression":{"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2726,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"3791:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2578_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":2728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3793:7:11","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":2577,"src":"3791:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3803:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3791:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2731,"nodeType":"ExpressionStatement","src":"3791:17:11"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2733,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"3832:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3832:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2732,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"3823:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2736,"nodeType":"EmitStatement","src":"3818:27:11"}]},"documentation":{"id":2715,"nodeType":"StructuredDocumentation","src":"3548:121:11","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":2738,"implemented":true,"kind":"function","modifiers":[{"id":2718,"kind":"modifierInvocation","modifierName":{"id":2717,"name":"whenPaused","nameLocations":["3711:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2649,"src":"3711:10:11"},"nodeType":"ModifierInvocation","src":"3711:10:11"}],"name":"_unpause","nameLocation":"3683:8:11","nodeType":"FunctionDefinition","parameters":{"id":2716,"nodeType":"ParameterList","parameters":[],"src":"3691:2:11"},"returnParameters":{"id":2719,"nodeType":"ParameterList","parameters":[],"src":"3722:0:11"},"scope":2739,"src":"3674:178:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2740,"src":"701:3153:11","usedErrors":[860,863,2602,2605],"usedEvents":[868,2594,2599]}],"src":"102:3753:11"},"id":11},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","exportedSymbols":{"EIP712Upgradeable":[3083],"IERC5267":[3250],"Initializable":[1097],"MessageHashUtils":[4230]},"id":3084,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2741,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":2743,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3084,"sourceUnit":4231,"src":"139:97:12","symbolAliases":[{"foreign":{"id":2742,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"147:16:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"@openzeppelin/contracts/interfaces/IERC5267.sol","id":2745,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3084,"sourceUnit":3251,"src":"237:73:12","symbolAliases":[{"foreign":{"id":2744,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"245:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":2747,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3084,"sourceUnit":1098,"src":"311:66:12","symbolAliases":[{"foreign":{"id":2746,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"319:13:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2749,"name":"Initializable","nameLocations":["1998:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":1097,"src":"1998:13:12"},"id":2750,"nodeType":"InheritanceSpecifier","src":"1998:13:12"},{"baseName":{"id":2751,"name":"IERC5267","nameLocations":["2013:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":3250,"src":"2013:8:12"},"id":2752,"nodeType":"InheritanceSpecifier","src":"2013:8:12"}],"canonicalName":"EIP712Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2748,"nodeType":"StructuredDocumentation","src":"379:1579:12","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage."},"fullyImplemented":true,"id":3083,"linearizedBaseContracts":[3083,3250,1097],"name":"EIP712Upgradeable","nameLocation":"1977:17:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2757,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2053:9:12","nodeType":"VariableDeclaration","scope":3083,"src":"2028:140:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2753,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2083:84:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2754,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2073:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2073:95:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"canonicalName":"EIP712Upgradeable.EIP712Storage","documentation":{"id":2758,"nodeType":"StructuredDocumentation","src":"2175:64:12","text":"@custom:storage-location erc7201:openzeppelin.storage.EIP712"},"id":2769,"members":[{"constant":false,"id":2761,"mutability":"mutable","name":"_hashedName","nameLocation":"2332:11:12","nodeType":"VariableDeclaration","scope":2769,"src":"2324:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2764,"mutability":"mutable","name":"_hashedVersion","nameLocation":"2413:14:12","nodeType":"VariableDeclaration","scope":2769,"src":"2405:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2405:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2766,"mutability":"mutable","name":"_name","nameLocation":"2445:5:12","nodeType":"VariableDeclaration","scope":2769,"src":"2438:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2765,"name":"string","nodeType":"ElementaryTypeName","src":"2438:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2768,"mutability":"mutable","name":"_version","nameLocation":"2467:8:12","nodeType":"VariableDeclaration","scope":2769,"src":"2460:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2767,"name":"string","nodeType":"ElementaryTypeName","src":"2460:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"EIP712Storage","nameLocation":"2251:13:12","nodeType":"StructDefinition","scope":3083,"src":"2244:238:12","visibility":"public"},{"constant":true,"id":2772,"mutability":"constant","name":"EIP712StorageLocation","nameLocation":"2623:21:12","nodeType":"VariableDeclaration","scope":3083,"src":"2598:115:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2598:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861313661343664393432363163373531376363386666383966363163306365393335393865336338343938303130313164656536343961366135353764313030","id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:66:12","typeDescriptions":{"typeIdentifier":"t_rational_73010143390315934406010559831118728393600729754696197287367516085911467577600_by_1","typeString":"int_const 7301...(69 digits omitted)...7600"},"value":"0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100"},"visibility":"private"},{"body":{"id":2779,"nodeType":"Block","src":"2796:80:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2815:55:12","statements":[{"nodeType":"YulAssignment","src":"2829:31:12","value":{"name":"EIP712StorageLocation","nodeType":"YulIdentifier","src":"2839:21:12"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"2829:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2776,"isOffset":false,"isSlot":true,"src":"2829:6:12","suffix":"slot","valueSize":1},{"declaration":2772,"isOffset":false,"isSlot":false,"src":"2839:21:12","valueSize":1}],"id":2778,"nodeType":"InlineAssembly","src":"2806:64:12"}]},"id":2780,"implemented":true,"kind":"function","modifiers":[],"name":"_getEIP712Storage","nameLocation":"2729:17:12","nodeType":"FunctionDefinition","parameters":{"id":2773,"nodeType":"ParameterList","parameters":[],"src":"2746:2:12"},"returnParameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"$","nameLocation":"2793:1:12","nodeType":"VariableDeclaration","scope":2780,"src":"2771:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2775,"nodeType":"UserDefinedTypeName","pathNode":{"id":2774,"name":"EIP712Storage","nameLocations":["2771:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":2769,"src":"2771:13:12"},"referencedDeclaration":2769,"src":"2771:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"src":"2770:25:12"},"scope":3083,"src":"2720:156:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2795,"nodeType":"Block","src":"3538:55:12","statements":[{"expression":{"arguments":[{"id":2791,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"3572:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2792,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"3578:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2790,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"3548:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3548:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2794,"nodeType":"ExpressionStatement","src":"3548:38:12"}]},"documentation":{"id":2781,"nodeType":"StructuredDocumentation","src":"2882:559:12","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2796,"implemented":true,"kind":"function","modifiers":[{"id":2788,"kind":"modifierInvocation","modifierName":{"id":2787,"name":"onlyInitializing","nameLocations":["3521:16:12"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"3521:16:12"},"nodeType":"ModifierInvocation","src":"3521:16:12"}],"name":"__EIP712_init","nameLocation":"3455:13:12","nodeType":"FunctionDefinition","parameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"name","nameLocation":"3483:4:12","nodeType":"VariableDeclaration","scope":2796,"src":"3469:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2782,"name":"string","nodeType":"ElementaryTypeName","src":"3469:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2785,"mutability":"mutable","name":"version","nameLocation":"3503:7:12","nodeType":"VariableDeclaration","scope":2796,"src":"3489:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2784,"name":"string","nodeType":"ElementaryTypeName","src":"3489:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3468:43:12"},"returnParameters":{"id":2789,"nodeType":"ParameterList","parameters":[],"src":"3538:0:12"},"scope":3083,"src":"3446:147:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2835,"nodeType":"Block","src":"3701:228:12","statements":[{"assignments":[2807],"declarations":[{"constant":false,"id":2807,"mutability":"mutable","name":"$","nameLocation":"3733:1:12","nodeType":"VariableDeclaration","scope":2835,"src":"3711:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2806,"nodeType":"UserDefinedTypeName","pathNode":{"id":2805,"name":"EIP712Storage","nameLocations":["3711:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":2769,"src":"3711:13:12"},"referencedDeclaration":2769,"src":"3711:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2810,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2808,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"3737:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$2769_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3711:45:12"},{"expression":{"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2811,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"3766:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3768:5:12","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"3766:7:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2814,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"3776:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3766:14:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2816,"nodeType":"ExpressionStatement","src":"3766:14:12"},{"expression":{"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2817,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"3790:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3792:8:12","memberName":"_version","nodeType":"MemberAccess","referencedDeclaration":2768,"src":"3790:10:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2820,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"3803:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3790:20:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2822,"nodeType":"ExpressionStatement","src":"3790:20:12"},{"expression":{"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2823,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"3875:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3877:11:12","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":2761,"src":"3875:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3891:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3875:17:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2828,"nodeType":"ExpressionStatement","src":"3875:17:12"},{"expression":{"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2829,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"3902:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2831,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3904:14:12","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":2764,"src":"3902:16:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3921:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3902:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2834,"nodeType":"ExpressionStatement","src":"3902:20:12"}]},"id":2836,"implemented":true,"kind":"function","modifiers":[{"id":2803,"kind":"modifierInvocation","modifierName":{"id":2802,"name":"onlyInitializing","nameLocations":["3684:16:12"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"3684:16:12"},"nodeType":"ModifierInvocation","src":"3684:16:12"}],"name":"__EIP712_init_unchained","nameLocation":"3608:23:12","nodeType":"FunctionDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"name","nameLocation":"3646:4:12","nodeType":"VariableDeclaration","scope":2836,"src":"3632:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2797,"name":"string","nodeType":"ElementaryTypeName","src":"3632:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2800,"mutability":"mutable","name":"version","nameLocation":"3666:7:12","nodeType":"VariableDeclaration","scope":2836,"src":"3652:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2799,"name":"string","nodeType":"ElementaryTypeName","src":"3652:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3631:43:12"},"returnParameters":{"id":2804,"nodeType":"ParameterList","parameters":[],"src":"3701:0:12"},"scope":3083,"src":"3599:330:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2845,"nodeType":"Block","src":"4077:47:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2842,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"4094:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4094:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2841,"id":2844,"nodeType":"Return","src":"4087:30:12"}]},"documentation":{"id":2837,"nodeType":"StructuredDocumentation","src":"3935:75:12","text":" @dev Returns the domain separator for the current chain."},"id":2846,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"4024:18:12","nodeType":"FunctionDefinition","parameters":{"id":2838,"nodeType":"ParameterList","parameters":[],"src":"4042:2:12"},"returnParameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2846,"src":"4068:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2839,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4068:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4067:9:12"},"scope":3083,"src":"4015:109:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2868,"nodeType":"Block","src":"4194:127:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2854,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"4232:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2855,"name":"_EIP712NameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"4243:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2857,"name":"_EIP712VersionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"4262:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2859,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4284:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4290:7:12","memberName":"chainid","nodeType":"MemberAccess","src":"4284:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2863,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4307:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$3083","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$3083","typeString":"contract EIP712Upgradeable"}],"id":2862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4299:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2861,"name":"address","nodeType":"ElementaryTypeName","src":"4299:7:12","typeDescriptions":{}}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4299:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2852,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4221:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4225:6:12","memberName":"encode","nodeType":"MemberAccess","src":"4221:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4221:92:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2851,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4211:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:103:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2850,"id":2867,"nodeType":"Return","src":"4204:110:12"}]},"id":2869,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4139:21:12","nodeType":"FunctionDefinition","parameters":{"id":2847,"nodeType":"ParameterList","parameters":[],"src":"4160:2:12"},"returnParameters":{"id":2850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2869,"src":"4185:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2848,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4185:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4184:9:12"},"scope":3083,"src":"4130:191:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2884,"nodeType":"Block","src":"5032:90:12","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2879,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"5082:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5082:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2881,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"5104:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2877,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"5049:16:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4230_$","typeString":"type(library MessageHashUtils)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5066:15:12","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4229,"src":"5049:32:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5049:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2876,"id":2883,"nodeType":"Return","src":"5042:73:12"}]},"documentation":{"id":2870,"nodeType":"StructuredDocumentation","src":"4327:614:12","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2885,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4955:16:12","nodeType":"FunctionDefinition","parameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"mutability":"mutable","name":"structHash","nameLocation":"4980:10:12","nodeType":"VariableDeclaration","scope":2885,"src":"4972:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4972:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4971:20:12"},"returnParameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2885,"src":"5023:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5023:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5022:9:12"},"scope":3083,"src":"4946:176:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[3249],"body":{"id":2945,"nodeType":"Block","src":"5501:575:12","statements":[{"assignments":[2906],"declarations":[{"constant":false,"id":2906,"mutability":"mutable","name":"$","nameLocation":"5533:1:12","nodeType":"VariableDeclaration","scope":2945,"src":"5511:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2905,"nodeType":"UserDefinedTypeName","pathNode":{"id":2904,"name":"EIP712Storage","nameLocations":["5511:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":2769,"src":"5511:13:12"},"referencedDeclaration":2769,"src":"5511:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2909,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2907,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"5537:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$2769_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5537:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5511:45:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2911,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"5777:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5779:11:12","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":2761,"src":"5777:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5794:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5777:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2915,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"5799:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5801:14:12","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":2764,"src":"5799:16:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5819:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5799:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5777:43:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4549503731323a20556e696e697469616c697a6564","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5822:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""},"value":"EIP712: Uninitialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""}],"id":2910,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5769:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5769:77:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2922,"nodeType":"ExpressionStatement","src":"5769:77:12"},{"expression":{"components":[{"hexValue":"0f","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5878:7:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":2924,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"5908:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5908:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2926,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"5935:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5935:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2928,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5965:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5971:7:12","memberName":"chainid","nodeType":"MemberAccess","src":"5965:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2932,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6000:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$3083","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$3083","typeString":"contract EIP712Upgradeable"}],"id":2931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5992:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2930,"name":"address","nodeType":"ElementaryTypeName","src":"5992:7:12","typeDescriptions":{}}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5992:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6027:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6019:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6019:7:12","typeDescriptions":{}}},"id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6019:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6057:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6043:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2938,"name":"uint256","nodeType":"ElementaryTypeName","src":"6047:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2939,"nodeType":"ArrayTypeName","src":"6047:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6043:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5864:205:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2903,"id":2944,"nodeType":"Return","src":"5857:212:12"}]},"documentation":{"id":2886,"nodeType":"StructuredDocumentation","src":"5128:40:12","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":2946,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5182:12:12","nodeType":"FunctionDefinition","parameters":{"id":2887,"nodeType":"ParameterList","parameters":[],"src":"5194:2:12"},"returnParameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"fields","nameLocation":"5278:6:12","nodeType":"VariableDeclaration","scope":2946,"src":"5271:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2888,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5271:6:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2891,"mutability":"mutable","name":"name","nameLocation":"5312:4:12","nodeType":"VariableDeclaration","scope":2946,"src":"5298:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2890,"name":"string","nodeType":"ElementaryTypeName","src":"5298:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2893,"mutability":"mutable","name":"version","nameLocation":"5344:7:12","nodeType":"VariableDeclaration","scope":2946,"src":"5330:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2892,"name":"string","nodeType":"ElementaryTypeName","src":"5330:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2895,"mutability":"mutable","name":"chainId","nameLocation":"5373:7:12","nodeType":"VariableDeclaration","scope":2946,"src":"5365:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"5365:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"verifyingContract","nameLocation":"5402:17:12","nodeType":"VariableDeclaration","scope":2946,"src":"5394:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2896,"name":"address","nodeType":"ElementaryTypeName","src":"5394:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2899,"mutability":"mutable","name":"salt","nameLocation":"5441:4:12","nodeType":"VariableDeclaration","scope":2946,"src":"5433:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5433:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2902,"mutability":"mutable","name":"extensions","nameLocation":"5476:10:12","nodeType":"VariableDeclaration","scope":2946,"src":"5459:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2900,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2901,"nodeType":"ArrayTypeName","src":"5459:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5257:239:12"},"scope":3083,"src":"5173:903:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2961,"nodeType":"Block","src":"6369:86:12","statements":[{"assignments":[2954],"declarations":[{"constant":false,"id":2954,"mutability":"mutable","name":"$","nameLocation":"6401:1:12","nodeType":"VariableDeclaration","scope":2961,"src":"6379:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2953,"nodeType":"UserDefinedTypeName","pathNode":{"id":2952,"name":"EIP712Storage","nameLocations":["6379:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":2769,"src":"6379:13:12"},"referencedDeclaration":2769,"src":"6379:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2957,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2955,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"6405:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$2769_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6405:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6379:45:12"},{"expression":{"expression":{"id":2958,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"6441:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6443:5:12","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"6441:7:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2951,"id":2960,"nodeType":"Return","src":"6434:14:12"}]},"documentation":{"id":2947,"nodeType":"StructuredDocumentation","src":"6082:213:12","text":" @dev The name parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":2962,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6309:11:12","nodeType":"FunctionDefinition","parameters":{"id":2948,"nodeType":"ParameterList","parameters":[],"src":"6320:2:12"},"returnParameters":{"id":2951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2962,"src":"6354:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2949,"name":"string","nodeType":"ElementaryTypeName","src":"6354:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6353:15:12"},"scope":3083,"src":"6300:155:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2977,"nodeType":"Block","src":"6754:89:12","statements":[{"assignments":[2970],"declarations":[{"constant":false,"id":2970,"mutability":"mutable","name":"$","nameLocation":"6786:1:12","nodeType":"VariableDeclaration","scope":2977,"src":"6764:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2969,"nodeType":"UserDefinedTypeName","pathNode":{"id":2968,"name":"EIP712Storage","nameLocations":["6764:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":2769,"src":"6764:13:12"},"referencedDeclaration":2769,"src":"6764:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2973,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2971,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"6790:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$2769_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6790:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6764:45:12"},{"expression":{"expression":{"id":2974,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"6826:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6828:8:12","memberName":"_version","nodeType":"MemberAccess","referencedDeclaration":2768,"src":"6826:10:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2967,"id":2976,"nodeType":"Return","src":"6819:17:12"}]},"documentation":{"id":2963,"nodeType":"StructuredDocumentation","src":"6461:216:12","text":" @dev The version parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":2978,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6691:14:12","nodeType":"FunctionDefinition","parameters":{"id":2964,"nodeType":"ParameterList","parameters":[],"src":"6705:2:12"},"returnParameters":{"id":2967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2978,"src":"6739:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2965,"name":"string","nodeType":"ElementaryTypeName","src":"6739:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6738:15:12"},"scope":3083,"src":"6682:161:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3029,"nodeType":"Block","src":"7117:628:12","statements":[{"assignments":[2986],"declarations":[{"constant":false,"id":2986,"mutability":"mutable","name":"$","nameLocation":"7149:1:12","nodeType":"VariableDeclaration","scope":3029,"src":"7127:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2985,"nodeType":"UserDefinedTypeName","pathNode":{"id":2984,"name":"EIP712Storage","nameLocations":["7127:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":2769,"src":"7127:13:12"},"referencedDeclaration":2769,"src":"7127:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2989,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2987,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"7153:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$2769_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7153:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7127:45:12"},{"assignments":[2991],"declarations":[{"constant":false,"id":2991,"mutability":"mutable","name":"name","nameLocation":"7196:4:12","nodeType":"VariableDeclaration","scope":3029,"src":"7182:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2990,"name":"string","nodeType":"ElementaryTypeName","src":"7182:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2994,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2992,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"7203:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"7182:34:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2997,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"7236:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7230:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2995,"name":"bytes","nodeType":"ElementaryTypeName","src":"7230:5:12","typeDescriptions":{}}},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7230:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7242:6:12","memberName":"length","nodeType":"MemberAccess","src":"7230:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7230:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3027,"nodeType":"Block","src":"7314:425:12","statements":[{"assignments":[3011],"declarations":[{"constant":false,"id":3011,"mutability":"mutable","name":"hashedName","nameLocation":"7559:10:12","nodeType":"VariableDeclaration","scope":3027,"src":"7551:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7551:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3014,"initialValue":{"expression":{"id":3012,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"7572:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":3013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7574:11:12","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":2761,"src":"7572:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7551:34:12"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3015,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"7603:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7617:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7603:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3025,"nodeType":"Block","src":"7676:53:12","statements":[{"expression":{"arguments":[{"hexValue":"","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7711:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3021,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7701:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7701:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2983,"id":3024,"nodeType":"Return","src":"7694:20:12"}]},"id":3026,"nodeType":"IfStatement","src":"7599:130:12","trueBody":{"id":3020,"nodeType":"Block","src":"7620:50:12","statements":[{"expression":{"id":3018,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"7645:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2983,"id":3019,"nodeType":"Return","src":"7638:17:12"}]}}]},"id":3028,"nodeType":"IfStatement","src":"7226:513:12","trueBody":{"id":3009,"nodeType":"Block","src":"7254:54:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":3005,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"7291:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7285:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3003,"name":"bytes","nodeType":"ElementaryTypeName","src":"7285:5:12","typeDescriptions":{}}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7285:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3002,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7275:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7275:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2983,"id":3008,"nodeType":"Return","src":"7268:29:12"}]}}]},"documentation":{"id":2979,"nodeType":"StructuredDocumentation","src":"6849:204:12","text":" @dev The hash of the name parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead."},"id":3030,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712NameHash","nameLocation":"7067:15:12","nodeType":"FunctionDefinition","parameters":{"id":2980,"nodeType":"ParameterList","parameters":[],"src":"7082:2:12"},"returnParameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3030,"src":"7108:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7108:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7107:9:12"},"scope":3083,"src":"7058:687:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3081,"nodeType":"Block","src":"8028:661:12","statements":[{"assignments":[3038],"declarations":[{"constant":false,"id":3038,"mutability":"mutable","name":"$","nameLocation":"8060:1:12","nodeType":"VariableDeclaration","scope":3081,"src":"8038:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":3037,"nodeType":"UserDefinedTypeName","pathNode":{"id":3036,"name":"EIP712Storage","nameLocations":["8038:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":2769,"src":"8038:13:12"},"referencedDeclaration":2769,"src":"8038:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":3041,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3039,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"8064:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$2769_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8064:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"8038:45:12"},{"assignments":[3043],"declarations":[{"constant":false,"id":3043,"mutability":"mutable","name":"version","nameLocation":"8107:7:12","nodeType":"VariableDeclaration","scope":3081,"src":"8093:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3042,"name":"string","nodeType":"ElementaryTypeName","src":"8093:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3046,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3044,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"8117:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"8093:40:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3049,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"8153:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8147:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3047,"name":"bytes","nodeType":"ElementaryTypeName","src":"8147:5:12","typeDescriptions":{}}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8147:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8162:6:12","memberName":"length","nodeType":"MemberAccess","src":"8147:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8171:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8147:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3079,"nodeType":"Block","src":"8237:446:12","statements":[{"assignments":[3063],"declarations":[{"constant":false,"id":3063,"mutability":"mutable","name":"hashedVersion","nameLocation":"8491:13:12","nodeType":"VariableDeclaration","scope":3079,"src":"8483:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8483:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3066,"initialValue":{"expression":{"id":3064,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"8507:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$2769_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":3065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8509:14:12","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":2764,"src":"8507:16:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8483:40:12"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3067,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"8541:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8558:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8541:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3077,"nodeType":"Block","src":"8620:53:12","statements":[{"expression":{"arguments":[{"hexValue":"","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8655:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3073,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8645:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8645:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3035,"id":3076,"nodeType":"Return","src":"8638:20:12"}]},"id":3078,"nodeType":"IfStatement","src":"8537:136:12","trueBody":{"id":3072,"nodeType":"Block","src":"8561:53:12","statements":[{"expression":{"id":3070,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"8586:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3035,"id":3071,"nodeType":"Return","src":"8579:20:12"}]}}]},"id":3080,"nodeType":"IfStatement","src":"8143:540:12","trueBody":{"id":3061,"nodeType":"Block","src":"8174:57:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":3057,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"8211:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8205:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3055,"name":"bytes","nodeType":"ElementaryTypeName","src":"8205:5:12","typeDescriptions":{}}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8205:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3054,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8195:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8195:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3035,"id":3060,"nodeType":"Return","src":"8188:32:12"}]}}]},"documentation":{"id":3031,"nodeType":"StructuredDocumentation","src":"7751:210:12","text":" @dev The hash of the version parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead."},"id":3082,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712VersionHash","nameLocation":"7975:18:12","nodeType":"FunctionDefinition","parameters":{"id":3032,"nodeType":"ParameterList","parameters":[],"src":"7993:2:12"},"returnParameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3082,"src":"8019:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8019:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8018:9:12"},"scope":3083,"src":"7966:723:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3084,"src":"1959:6732:12","usedErrors":[860,863],"usedEvents":[868,3230]}],"src":"113:8579:12"},"id":12},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[3166]},"id":3167,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3085,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":3086,"nodeType":"StructuredDocumentation","src":"136:102:13","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts."},"fullyImplemented":false,"id":3166,"linearizedBaseContracts":[3166],"name":"IVotes","nameLocation":"249:6:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3087,"nodeType":"StructuredDocumentation","src":"262:55:13","text":" @dev The signature used has expired."},"errorSelector":"4683af0e","id":3091,"name":"VotesExpiredSignature","nameLocation":"328:21:13","nodeType":"ErrorDefinition","parameters":{"id":3090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3089,"mutability":"mutable","name":"expiry","nameLocation":"358:6:13","nodeType":"VariableDeclaration","scope":3091,"src":"350:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3088,"name":"uint256","nodeType":"ElementaryTypeName","src":"350:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"349:16:13"},"src":"322:44:13"},{"anonymous":false,"documentation":{"id":3092,"nodeType":"StructuredDocumentation","src":"372:71:13","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":3100,"name":"DelegateChanged","nameLocation":"454:15:13","nodeType":"EventDefinition","parameters":{"id":3099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3094,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"486:9:13","nodeType":"VariableDeclaration","scope":3100,"src":"470:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3093,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3096,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"513:12:13","nodeType":"VariableDeclaration","scope":3100,"src":"497:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3095,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3098,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"543:10:13","nodeType":"VariableDeclaration","scope":3100,"src":"527:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3097,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"469:85:13"},"src":"448:107:13"},{"anonymous":false,"documentation":{"id":3101,"nodeType":"StructuredDocumentation","src":"561:131:13","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":3109,"name":"DelegateVotesChanged","nameLocation":"703:20:13","nodeType":"EventDefinition","parameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"740:8:13","nodeType":"VariableDeclaration","scope":3109,"src":"724:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3102,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3105,"indexed":false,"mutability":"mutable","name":"previousVotes","nameLocation":"758:13:13","nodeType":"VariableDeclaration","scope":3109,"src":"750:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"750:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3107,"indexed":false,"mutability":"mutable","name":"newVotes","nameLocation":"781:8:13","nodeType":"VariableDeclaration","scope":3109,"src":"773:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"773:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"723:67:13"},"src":"697:94:13"},{"documentation":{"id":3110,"nodeType":"StructuredDocumentation","src":"797:79:13","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":3117,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"890:8:13","nodeType":"FunctionDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"mutability":"mutable","name":"account","nameLocation":"907:7:13","nodeType":"VariableDeclaration","scope":3117,"src":"899:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3111,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:17:13"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3117,"src":"939:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3114,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"938:9:13"},"scope":3166,"src":"881:67:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3118,"nodeType":"StructuredDocumentation","src":"954:230:13","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":3127,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1198:12:13","nodeType":"FunctionDefinition","parameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"account","nameLocation":"1219:7:13","nodeType":"VariableDeclaration","scope":3127,"src":"1211:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3119,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3122,"mutability":"mutable","name":"timepoint","nameLocation":"1236:9:13","nodeType":"VariableDeclaration","scope":3127,"src":"1228:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:36:13"},"returnParameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3127,"src":"1270:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"1270:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1269:9:13"},"scope":3166,"src":"1189:90:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3128,"nodeType":"StructuredDocumentation","src":"1285:481:13","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":3135,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1780:18:13","nodeType":"FunctionDefinition","parameters":{"id":3131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3130,"mutability":"mutable","name":"timepoint","nameLocation":"1807:9:13","nodeType":"VariableDeclaration","scope":3135,"src":"1799:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1799:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1798:19:13"},"returnParameters":{"id":3134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3135,"src":"1841:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1840:9:13"},"scope":3166,"src":"1771:79:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3136,"nodeType":"StructuredDocumentation","src":"1856:71:13","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":3143,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1941:9:13","nodeType":"FunctionDefinition","parameters":{"id":3139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3138,"mutability":"mutable","name":"account","nameLocation":"1959:7:13","nodeType":"VariableDeclaration","scope":3143,"src":"1951:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3137,"name":"address","nodeType":"ElementaryTypeName","src":"1951:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1950:17:13"},"returnParameters":{"id":3142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3143,"src":"1991:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3140,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1990:9:13"},"scope":3166,"src":"1932:68:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3144,"nodeType":"StructuredDocumentation","src":"2006:71:13","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":3149,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2091:8:13","nodeType":"FunctionDefinition","parameters":{"id":3147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"delegatee","nameLocation":"2108:9:13","nodeType":"VariableDeclaration","scope":3149,"src":"2100:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3145,"name":"address","nodeType":"ElementaryTypeName","src":"2100:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2099:19:13"},"returnParameters":{"id":3148,"nodeType":"ParameterList","parameters":[],"src":"2127:0:13"},"scope":3166,"src":"2082:46:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3150,"nodeType":"StructuredDocumentation","src":"2134:67:13","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":3165,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2215:13:13","nodeType":"FunctionDefinition","parameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3152,"mutability":"mutable","name":"delegatee","nameLocation":"2237:9:13","nodeType":"VariableDeclaration","scope":3165,"src":"2229:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3151,"name":"address","nodeType":"ElementaryTypeName","src":"2229:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3154,"mutability":"mutable","name":"nonce","nameLocation":"2256:5:13","nodeType":"VariableDeclaration","scope":3165,"src":"2248:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3153,"name":"uint256","nodeType":"ElementaryTypeName","src":"2248:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3156,"mutability":"mutable","name":"expiry","nameLocation":"2271:6:13","nodeType":"VariableDeclaration","scope":3165,"src":"2263:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3155,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3158,"mutability":"mutable","name":"v","nameLocation":"2285:1:13","nodeType":"VariableDeclaration","scope":3165,"src":"2279:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3157,"name":"uint8","nodeType":"ElementaryTypeName","src":"2279:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3160,"mutability":"mutable","name":"r","nameLocation":"2296:1:13","nodeType":"VariableDeclaration","scope":3165,"src":"2288:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2288:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3162,"mutability":"mutable","name":"s","nameLocation":"2307:1:13","nodeType":"VariableDeclaration","scope":3165,"src":"2299:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2299:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2228:81:13"},"returnParameters":{"id":3164,"nodeType":"ParameterList","parameters":[],"src":"2318:0:13"},"scope":3166,"src":"2206:113:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3167,"src":"239:2082:13","usedErrors":[3091],"usedEvents":[3100,3109]}],"src":"110:2212:13"},"id":13},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","exportedSymbols":{"IERC3156FlashBorrower":[3186]},"id":3187,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3168,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC3156FlashBorrower","contractDependencies":[],"contractKind":"interface","documentation":{"id":3169,"nodeType":"StructuredDocumentation","src":"146:123:14","text":" @dev Interface of the ERC3156 FlashBorrower, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]."},"fullyImplemented":false,"id":3186,"linearizedBaseContracts":[3186],"name":"IERC3156FlashBorrower","nameLocation":"280:21:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3170,"nodeType":"StructuredDocumentation","src":"308:405:14","text":" @dev Receive a flash loan.\n @param initiator The initiator of the loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param fee The additional amount of tokens to repay.\n @param data Arbitrary data structure, intended to contain user-defined parameters.\n @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\""},"functionSelector":"23e30c8b","id":3185,"implemented":false,"kind":"function","modifiers":[],"name":"onFlashLoan","nameLocation":"727:11:14","nodeType":"FunctionDefinition","parameters":{"id":3181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3172,"mutability":"mutable","name":"initiator","nameLocation":"756:9:14","nodeType":"VariableDeclaration","scope":3185,"src":"748:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3171,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3174,"mutability":"mutable","name":"token","nameLocation":"783:5:14","nodeType":"VariableDeclaration","scope":3185,"src":"775:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3173,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3176,"mutability":"mutable","name":"amount","nameLocation":"806:6:14","nodeType":"VariableDeclaration","scope":3185,"src":"798:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3175,"name":"uint256","nodeType":"ElementaryTypeName","src":"798:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3178,"mutability":"mutable","name":"fee","nameLocation":"830:3:14","nodeType":"VariableDeclaration","scope":3185,"src":"822:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3177,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3180,"mutability":"mutable","name":"data","nameLocation":"858:4:14","nodeType":"VariableDeclaration","scope":3185,"src":"843:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3179,"name":"bytes","nodeType":"ElementaryTypeName","src":"843:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"738:130:14"},"returnParameters":{"id":3184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3185,"src":"887:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"887:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"886:9:14"},"scope":3186,"src":"718:178:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3187,"src":"270:628:14","usedErrors":[],"usedEvents":[]}],"src":"120:779:14"},"id":14},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol","exportedSymbols":{"IERC3156FlashBorrower":[3186],"IERC3156FlashLender":[3225]},"id":3226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3188,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:15"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","file":"./IERC3156FlashBorrower.sol","id":3190,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3226,"sourceUnit":3187,"src":"144:66:15","symbolAliases":[{"foreign":{"id":3189,"name":"IERC3156FlashBorrower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"152:21:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IERC3156FlashLender","contractDependencies":[],"contractKind":"interface","documentation":{"id":3191,"nodeType":"StructuredDocumentation","src":"212:121:15","text":" @dev Interface of the ERC3156 FlashLender, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]."},"fullyImplemented":false,"id":3225,"linearizedBaseContracts":[3225],"name":"IERC3156FlashLender","nameLocation":"344:19:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3192,"nodeType":"StructuredDocumentation","src":"370:168:15","text":" @dev The amount of currency available to be lended.\n @param token The loan currency.\n @return The amount of `token` that can be borrowed."},"functionSelector":"613255ab","id":3199,"implemented":false,"kind":"function","modifiers":[],"name":"maxFlashLoan","nameLocation":"552:12:15","nodeType":"FunctionDefinition","parameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"token","nameLocation":"573:5:15","nodeType":"VariableDeclaration","scope":3199,"src":"565:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3193,"name":"address","nodeType":"ElementaryTypeName","src":"565:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"564:15:15"},"returnParameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3199,"src":"603:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"602:9:15"},"scope":3225,"src":"543:69:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3200,"nodeType":"StructuredDocumentation","src":"618:249:15","text":" @dev The fee to be charged for a given loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @return The amount of `token` to be charged for the loan, on top of the returned principal."},"functionSelector":"d9d98ce4","id":3209,"implemented":false,"kind":"function","modifiers":[],"name":"flashFee","nameLocation":"881:8:15","nodeType":"FunctionDefinition","parameters":{"id":3205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"token","nameLocation":"898:5:15","nodeType":"VariableDeclaration","scope":3209,"src":"890:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3201,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3204,"mutability":"mutable","name":"amount","nameLocation":"913:6:15","nodeType":"VariableDeclaration","scope":3209,"src":"905:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3203,"name":"uint256","nodeType":"ElementaryTypeName","src":"905:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"889:31:15"},"returnParameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3209,"src":"944:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"944:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"943:9:15"},"scope":3225,"src":"872:81:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"959:320:15","text":" @dev Initiate a flash loan.\n @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param data Arbitrary data structure, intended to contain user-defined parameters."},"functionSelector":"5cffe9de","id":3224,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"1293:9:15","nodeType":"FunctionDefinition","parameters":{"id":3220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"receiver","nameLocation":"1334:8:15","nodeType":"VariableDeclaration","scope":3224,"src":"1312:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$3186","typeString":"contract IERC3156FlashBorrower"},"typeName":{"id":3212,"nodeType":"UserDefinedTypeName","pathNode":{"id":3211,"name":"IERC3156FlashBorrower","nameLocations":["1312:21:15"],"nodeType":"IdentifierPath","referencedDeclaration":3186,"src":"1312:21:15"},"referencedDeclaration":3186,"src":"1312:21:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$3186","typeString":"contract IERC3156FlashBorrower"}},"visibility":"internal"},{"constant":false,"id":3215,"mutability":"mutable","name":"token","nameLocation":"1360:5:15","nodeType":"VariableDeclaration","scope":3224,"src":"1352:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3214,"name":"address","nodeType":"ElementaryTypeName","src":"1352:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3217,"mutability":"mutable","name":"amount","nameLocation":"1383:6:15","nodeType":"VariableDeclaration","scope":3224,"src":"1375:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3216,"name":"uint256","nodeType":"ElementaryTypeName","src":"1375:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3219,"mutability":"mutable","name":"data","nameLocation":"1414:4:15","nodeType":"VariableDeclaration","scope":3224,"src":"1399:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3218,"name":"bytes","nodeType":"ElementaryTypeName","src":"1399:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1302:122:15"},"returnParameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3224,"src":"1443:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3221,"name":"bool","nodeType":"ElementaryTypeName","src":"1443:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1442:6:15"},"scope":3225,"src":"1284:165:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3226,"src":"334:1117:15","usedErrors":[],"usedEvents":[]}],"src":"118:1334:15"},"id":15},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[3250]},"id":3251,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3227,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3250,"linearizedBaseContracts":[3250],"name":"IERC5267","nameLocation":"143:8:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3228,"nodeType":"StructuredDocumentation","src":"158:84:16","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":3230,"name":"EIP712DomainChanged","nameLocation":"253:19:16","nodeType":"EventDefinition","parameters":{"id":3229,"nodeType":"ParameterList","parameters":[],"src":"272:2:16"},"src":"247:28:16"},{"documentation":{"id":3231,"nodeType":"StructuredDocumentation","src":"281:140:16","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":3249,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:16","nodeType":"FunctionDefinition","parameters":{"id":3232,"nodeType":"ParameterList","parameters":[],"src":"447:2:16"},"returnParameters":{"id":3248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3234,"mutability":"mutable","name":"fields","nameLocation":"517:6:16","nodeType":"VariableDeclaration","scope":3249,"src":"510:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3233,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3236,"mutability":"mutable","name":"name","nameLocation":"551:4:16","nodeType":"VariableDeclaration","scope":3249,"src":"537:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3235,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3238,"mutability":"mutable","name":"version","nameLocation":"583:7:16","nodeType":"VariableDeclaration","scope":3249,"src":"569:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3237,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3240,"mutability":"mutable","name":"chainId","nameLocation":"612:7:16","nodeType":"VariableDeclaration","scope":3249,"src":"604:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3239,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3242,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:16","nodeType":"VariableDeclaration","scope":3249,"src":"633:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3241,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3244,"mutability":"mutable","name":"salt","nameLocation":"680:4:16","nodeType":"VariableDeclaration","scope":3249,"src":"672:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3247,"mutability":"mutable","name":"extensions","nameLocation":"715:10:16","nodeType":"VariableDeclaration","scope":3249,"src":"698:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3245,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3246,"nodeType":"ArrayTypeName","src":"698:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:16"},"scope":3250,"src":"426:310:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3251,"src":"133:605:16","usedErrors":[],"usedEvents":[3230]}],"src":"107:632:16"},"id":16},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[3261],"IERC6372":[3276],"IVotes":[3166]},"id":3262,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3252,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:17"},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":3254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3262,"sourceUnit":3167,"src":"133:54:17","symbolAliases":[{"foreign":{"id":3253,"name":"IVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"141:6:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":3256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3262,"sourceUnit":3277,"src":"188:40:17","symbolAliases":[{"foreign":{"id":3255,"name":"IERC6372","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"196:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3257,"name":"IERC6372","nameLocations":["252:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3276,"src":"252:8:17"},"id":3258,"nodeType":"InheritanceSpecifier","src":"252:8:17"},{"baseName":{"id":3259,"name":"IVotes","nameLocations":["262:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":3166,"src":"262:6:17"},"id":3260,"nodeType":"InheritanceSpecifier","src":"262:6:17"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3261,"linearizedBaseContracts":[3261,3166,3276],"name":"IERC5805","nameLocation":"240:8:17","nodeType":"ContractDefinition","nodes":[],"scope":3262,"src":"230:41:17","usedErrors":[3091],"usedEvents":[3100,3109]}],"src":"107:165:17"},"id":17},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[3276]},"id":3277,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3263,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3276,"linearizedBaseContracts":[3276],"name":"IERC6372","nameLocation":"143:8:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3264,"nodeType":"StructuredDocumentation","src":"158:133:18","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":3269,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"305:5:18","nodeType":"FunctionDefinition","parameters":{"id":3265,"nodeType":"ParameterList","parameters":[],"src":"310:2:18"},"returnParameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3269,"src":"336:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3266,"name":"uint48","nodeType":"ElementaryTypeName","src":"336:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"335:8:18"},"scope":3276,"src":"296:48:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3270,"nodeType":"StructuredDocumentation","src":"350:48:18","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":3275,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"465:10:18","nodeType":"FunctionDefinition","parameters":{"id":3271,"nodeType":"ParameterList","parameters":[],"src":"475:2:18"},"returnParameters":{"id":3274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3275,"src":"501:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3272,"name":"string","nodeType":"ElementaryTypeName","src":"501:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"500:15:18"},"scope":3276,"src":"456:60:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3277,"src":"133:385:18","usedErrors":[],"usedEvents":[]}],"src":"107:412:18"},"id":18},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[3413],"IERC20Errors":[3318],"IERC721Errors":[3366]},"id":3414,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3278,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":3279,"nodeType":"StructuredDocumentation","src":"138:139:19","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":3318,"linearizedBaseContracts":[3318],"name":"IERC20Errors","nameLocation":"288:12:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3280,"nodeType":"StructuredDocumentation","src":"307:309:19","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":3288,"name":"ERC20InsufficientBalance","nameLocation":"627:24:19","nodeType":"ErrorDefinition","parameters":{"id":3287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3282,"mutability":"mutable","name":"sender","nameLocation":"660:6:19","nodeType":"VariableDeclaration","scope":3288,"src":"652:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3281,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3284,"mutability":"mutable","name":"balance","nameLocation":"676:7:19","nodeType":"VariableDeclaration","scope":3288,"src":"668:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3283,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3286,"mutability":"mutable","name":"needed","nameLocation":"693:6:19","nodeType":"VariableDeclaration","scope":3288,"src":"685:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:19"},"src":"621:80:19"},{"documentation":{"id":3289,"nodeType":"StructuredDocumentation","src":"707:152:19","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":3293,"name":"ERC20InvalidSender","nameLocation":"870:18:19","nodeType":"ErrorDefinition","parameters":{"id":3292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"sender","nameLocation":"897:6:19","nodeType":"VariableDeclaration","scope":3293,"src":"889:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3290,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:19"},"src":"864:41:19"},{"documentation":{"id":3294,"nodeType":"StructuredDocumentation","src":"911:159:19","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":3298,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:19","nodeType":"ErrorDefinition","parameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:19","nodeType":"VariableDeclaration","scope":3298,"src":"1102:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3295,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:19"},"src":"1075:45:19"},{"documentation":{"id":3299,"nodeType":"StructuredDocumentation","src":"1126:345:19","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":3307,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:19","nodeType":"ErrorDefinition","parameters":{"id":3306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3301,"mutability":"mutable","name":"spender","nameLocation":"1517:7:19","nodeType":"VariableDeclaration","scope":3307,"src":"1509:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3300,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3303,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:19","nodeType":"VariableDeclaration","scope":3307,"src":"1526:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3305,"mutability":"mutable","name":"needed","nameLocation":"1553:6:19","nodeType":"VariableDeclaration","scope":3307,"src":"1545:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:19"},"src":"1476:85:19"},{"documentation":{"id":3308,"nodeType":"StructuredDocumentation","src":"1567:174:19","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":3312,"name":"ERC20InvalidApprover","nameLocation":"1752:20:19","nodeType":"ErrorDefinition","parameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3310,"mutability":"mutable","name":"approver","nameLocation":"1781:8:19","nodeType":"VariableDeclaration","scope":3312,"src":"1773:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3309,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:19"},"src":"1746:45:19"},{"documentation":{"id":3313,"nodeType":"StructuredDocumentation","src":"1797:195:19","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":3317,"name":"ERC20InvalidSpender","nameLocation":"2003:19:19","nodeType":"ErrorDefinition","parameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3315,"mutability":"mutable","name":"spender","nameLocation":"2031:7:19","nodeType":"VariableDeclaration","scope":3317,"src":"2023:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3314,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:19"},"src":"1997:43:19"}],"scope":3414,"src":"278:1764:19","usedErrors":[3288,3293,3298,3307,3312,3317],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":3319,"nodeType":"StructuredDocumentation","src":"2044:141:19","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":3366,"linearizedBaseContracts":[3366],"name":"IERC721Errors","nameLocation":"2196:13:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3320,"nodeType":"StructuredDocumentation","src":"2216:219:19","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":3324,"name":"ERC721InvalidOwner","nameLocation":"2446:18:19","nodeType":"ErrorDefinition","parameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3322,"mutability":"mutable","name":"owner","nameLocation":"2473:5:19","nodeType":"VariableDeclaration","scope":3324,"src":"2465:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3321,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:19"},"src":"2440:40:19"},{"documentation":{"id":3325,"nodeType":"StructuredDocumentation","src":"2486:132:19","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":3329,"name":"ERC721NonexistentToken","nameLocation":"2629:22:19","nodeType":"ErrorDefinition","parameters":{"id":3328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3327,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:19","nodeType":"VariableDeclaration","scope":3329,"src":"2652:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3326,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:19"},"src":"2623:46:19"},{"documentation":{"id":3330,"nodeType":"StructuredDocumentation","src":"2675:289:19","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":3338,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:19","nodeType":"ErrorDefinition","parameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"mutability":"mutable","name":"sender","nameLocation":"3004:6:19","nodeType":"VariableDeclaration","scope":3338,"src":"2996:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3331,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3334,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:19","nodeType":"VariableDeclaration","scope":3338,"src":"3012:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3336,"mutability":"mutable","name":"owner","nameLocation":"3037:5:19","nodeType":"VariableDeclaration","scope":3338,"src":"3029:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3335,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:19"},"src":"2969:75:19"},{"documentation":{"id":3339,"nodeType":"StructuredDocumentation","src":"3050:152:19","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":3343,"name":"ERC721InvalidSender","nameLocation":"3213:19:19","nodeType":"ErrorDefinition","parameters":{"id":3342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3341,"mutability":"mutable","name":"sender","nameLocation":"3241:6:19","nodeType":"VariableDeclaration","scope":3343,"src":"3233:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3340,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:19"},"src":"3207:42:19"},{"documentation":{"id":3344,"nodeType":"StructuredDocumentation","src":"3255:159:19","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":3348,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:19","nodeType":"ErrorDefinition","parameters":{"id":3347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3346,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:19","nodeType":"VariableDeclaration","scope":3348,"src":"3447:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3345,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:19"},"src":"3419:46:19"},{"documentation":{"id":3349,"nodeType":"StructuredDocumentation","src":"3471:247:19","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":3355,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:19","nodeType":"ErrorDefinition","parameters":{"id":3354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3351,"mutability":"mutable","name":"operator","nameLocation":"3764:8:19","nodeType":"VariableDeclaration","scope":3355,"src":"3756:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3350,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3353,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:19","nodeType":"VariableDeclaration","scope":3355,"src":"3774:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3352,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:19"},"src":"3723:68:19"},{"documentation":{"id":3356,"nodeType":"StructuredDocumentation","src":"3797:174:19","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":3360,"name":"ERC721InvalidApprover","nameLocation":"3982:21:19","nodeType":"ErrorDefinition","parameters":{"id":3359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3358,"mutability":"mutable","name":"approver","nameLocation":"4012:8:19","nodeType":"VariableDeclaration","scope":3360,"src":"4004:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3357,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:19"},"src":"3976:46:19"},{"documentation":{"id":3361,"nodeType":"StructuredDocumentation","src":"4028:197:19","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":3365,"name":"ERC721InvalidOperator","nameLocation":"4236:21:19","nodeType":"ErrorDefinition","parameters":{"id":3364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3363,"mutability":"mutable","name":"operator","nameLocation":"4266:8:19","nodeType":"VariableDeclaration","scope":3365,"src":"4258:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3362,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:19"},"src":"4230:46:19"}],"scope":3414,"src":"2186:2092:19","usedErrors":[3324,3329,3338,3343,3348,3355,3360,3365],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":3367,"nodeType":"StructuredDocumentation","src":"4280:143:19","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":3413,"linearizedBaseContracts":[3413],"name":"IERC1155Errors","nameLocation":"4434:14:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3368,"nodeType":"StructuredDocumentation","src":"4455:361:19","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":3378,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:19","nodeType":"ErrorDefinition","parameters":{"id":3377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"sender","nameLocation":"4862:6:19","nodeType":"VariableDeclaration","scope":3378,"src":"4854:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3369,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3372,"mutability":"mutable","name":"balance","nameLocation":"4878:7:19","nodeType":"VariableDeclaration","scope":3378,"src":"4870:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3374,"mutability":"mutable","name":"needed","nameLocation":"4895:6:19","nodeType":"VariableDeclaration","scope":3378,"src":"4887:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3373,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3376,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:19","nodeType":"VariableDeclaration","scope":3378,"src":"4903:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3375,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:19"},"src":"4821:99:19"},{"documentation":{"id":3379,"nodeType":"StructuredDocumentation","src":"4926:152:19","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":3383,"name":"ERC1155InvalidSender","nameLocation":"5089:20:19","nodeType":"ErrorDefinition","parameters":{"id":3382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"sender","nameLocation":"5118:6:19","nodeType":"VariableDeclaration","scope":3383,"src":"5110:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3380,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:19"},"src":"5083:43:19"},{"documentation":{"id":3384,"nodeType":"StructuredDocumentation","src":"5132:159:19","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":3388,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:19","nodeType":"ErrorDefinition","parameters":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:19","nodeType":"VariableDeclaration","scope":3388,"src":"5325:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3385,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:19"},"src":"5296:47:19"},{"documentation":{"id":3389,"nodeType":"StructuredDocumentation","src":"5349:256:19","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":3395,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:19","nodeType":"ErrorDefinition","parameters":{"id":3394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3391,"mutability":"mutable","name":"operator","nameLocation":"5653:8:19","nodeType":"VariableDeclaration","scope":3395,"src":"5645:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3390,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3393,"mutability":"mutable","name":"owner","nameLocation":"5671:5:19","nodeType":"VariableDeclaration","scope":3395,"src":"5663:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3392,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:19"},"src":"5610:68:19"},{"documentation":{"id":3396,"nodeType":"StructuredDocumentation","src":"5684:174:19","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":3400,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:19","nodeType":"ErrorDefinition","parameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"approver","nameLocation":"5900:8:19","nodeType":"VariableDeclaration","scope":3400,"src":"5892:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3397,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:19"},"src":"5863:47:19"},{"documentation":{"id":3401,"nodeType":"StructuredDocumentation","src":"5916:197:19","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":3405,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:19","nodeType":"ErrorDefinition","parameters":{"id":3404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3403,"mutability":"mutable","name":"operator","nameLocation":"6155:8:19","nodeType":"VariableDeclaration","scope":3405,"src":"6147:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3402,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:19"},"src":"6118:47:19"},{"documentation":{"id":3406,"nodeType":"StructuredDocumentation","src":"6171:280:19","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":3412,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:19","nodeType":"ErrorDefinition","parameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:19","nodeType":"VariableDeclaration","scope":3412,"src":"6488:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3407,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3410,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:19","nodeType":"VariableDeclaration","scope":3412,"src":"6507:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3409,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:19"},"src":"6456:73:19"}],"scope":3414,"src":"4424:2107:19","usedErrors":[3378,3383,3388,3395,3400,3405,3412],"usedEvents":[]}],"src":"112:6420:19"},"id":19},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[3491]},"id":3492,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3415,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":3416,"nodeType":"StructuredDocumentation","src":"132:70:20","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":3491,"linearizedBaseContracts":[3491],"name":"IERC20","nameLocation":"213:6:20","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3417,"nodeType":"StructuredDocumentation","src":"226:158:20","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3425,"name":"Transfer","nameLocation":"395:8:20","nodeType":"EventDefinition","parameters":{"id":3424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3419,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:20","nodeType":"VariableDeclaration","scope":3425,"src":"404:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3418,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3421,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:20","nodeType":"VariableDeclaration","scope":3425,"src":"426:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3420,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3423,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:20","nodeType":"VariableDeclaration","scope":3425,"src":"446:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3422,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:20"},"src":"389:72:20"},{"anonymous":false,"documentation":{"id":3426,"nodeType":"StructuredDocumentation","src":"467:148:20","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3434,"name":"Approval","nameLocation":"626:8:20","nodeType":"EventDefinition","parameters":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3428,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:20","nodeType":"VariableDeclaration","scope":3434,"src":"635:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3427,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3430,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:20","nodeType":"VariableDeclaration","scope":3434,"src":"658:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3429,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3432,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:20","nodeType":"VariableDeclaration","scope":3434,"src":"683:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3431,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:20"},"src":"620:78:20"},{"documentation":{"id":3435,"nodeType":"StructuredDocumentation","src":"704:65:20","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":3440,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:20","nodeType":"FunctionDefinition","parameters":{"id":3436,"nodeType":"ParameterList","parameters":[],"src":"794:2:20"},"returnParameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3440,"src":"820:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:20"},"scope":3491,"src":"774:55:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3441,"nodeType":"StructuredDocumentation","src":"835:71:20","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":3448,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:20","nodeType":"FunctionDefinition","parameters":{"id":3444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3443,"mutability":"mutable","name":"account","nameLocation":"938:7:20","nodeType":"VariableDeclaration","scope":3448,"src":"930:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3442,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:20"},"returnParameters":{"id":3447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3448,"src":"970:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:20"},"scope":3491,"src":"911:68:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3449,"nodeType":"StructuredDocumentation","src":"985:213:20","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":3458,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:20","nodeType":"FunctionDefinition","parameters":{"id":3454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3451,"mutability":"mutable","name":"to","nameLocation":"1229:2:20","nodeType":"VariableDeclaration","scope":3458,"src":"1221:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3450,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3453,"mutability":"mutable","name":"value","nameLocation":"1241:5:20","nodeType":"VariableDeclaration","scope":3458,"src":"1233:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:20"},"returnParameters":{"id":3457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3458,"src":"1266:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3455,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:20"},"scope":3491,"src":"1203:69:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3459,"nodeType":"StructuredDocumentation","src":"1278:264:20","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":3468,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:20","nodeType":"FunctionDefinition","parameters":{"id":3464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3461,"mutability":"mutable","name":"owner","nameLocation":"1574:5:20","nodeType":"VariableDeclaration","scope":3468,"src":"1566:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3460,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3463,"mutability":"mutable","name":"spender","nameLocation":"1589:7:20","nodeType":"VariableDeclaration","scope":3468,"src":"1581:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3462,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:20"},"returnParameters":{"id":3467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3468,"src":"1621:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:20"},"scope":3491,"src":"1547:83:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3469,"nodeType":"StructuredDocumentation","src":"1636:667:20","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3478,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:20","nodeType":"FunctionDefinition","parameters":{"id":3474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3471,"mutability":"mutable","name":"spender","nameLocation":"2333:7:20","nodeType":"VariableDeclaration","scope":3478,"src":"2325:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3470,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3473,"mutability":"mutable","name":"value","nameLocation":"2350:5:20","nodeType":"VariableDeclaration","scope":3478,"src":"2342:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:20"},"returnParameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3478,"src":"2375:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3475,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:20"},"scope":3491,"src":"2308:73:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3479,"nodeType":"StructuredDocumentation","src":"2387:297:20","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3490,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:20","nodeType":"FunctionDefinition","parameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3481,"mutability":"mutable","name":"from","nameLocation":"2719:4:20","nodeType":"VariableDeclaration","scope":3490,"src":"2711:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3480,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3483,"mutability":"mutable","name":"to","nameLocation":"2733:2:20","nodeType":"VariableDeclaration","scope":3490,"src":"2725:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3482,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3485,"mutability":"mutable","name":"value","nameLocation":"2745:5:20","nodeType":"VariableDeclaration","scope":3490,"src":"2737:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:20"},"returnParameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3490,"src":"2770:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3487,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:20"},"scope":3491,"src":"2689:87:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3492,"src":"203:2575:20","usedErrors":[],"usedEvents":[3425,3434]}],"src":"106:2673:20"},"id":20},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[3491],"IERC20Metadata":[3517]},"id":3518,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3493,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":3495,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3518,"sourceUnit":3492,"src":"151:37:21","symbolAliases":[{"foreign":{"id":3494,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"159:6:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3497,"name":"IERC20","nameLocations":["305:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":3491,"src":"305:6:21"},"id":3498,"nodeType":"InheritanceSpecifier","src":"305:6:21"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3496,"nodeType":"StructuredDocumentation","src":"190:86:21","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":3517,"linearizedBaseContracts":[3517,3491],"name":"IERC20Metadata","nameLocation":"287:14:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3499,"nodeType":"StructuredDocumentation","src":"318:54:21","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":3504,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:21","nodeType":"FunctionDefinition","parameters":{"id":3500,"nodeType":"ParameterList","parameters":[],"src":"390:2:21"},"returnParameters":{"id":3503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3504,"src":"416:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3501,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:21"},"scope":3517,"src":"377:54:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3505,"nodeType":"StructuredDocumentation","src":"437:56:21","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":3510,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:21","nodeType":"FunctionDefinition","parameters":{"id":3506,"nodeType":"ParameterList","parameters":[],"src":"513:2:21"},"returnParameters":{"id":3509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3510,"src":"539:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3507,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:21"},"scope":3517,"src":"498:56:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3511,"nodeType":"StructuredDocumentation","src":"560:65:21","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":3516,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:21","nodeType":"FunctionDefinition","parameters":{"id":3512,"nodeType":"ParameterList","parameters":[],"src":"647:2:21"},"returnParameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3516,"src":"673:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3513,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:21"},"scope":3517,"src":"630:50:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3518,"src":"277:405:21","usedErrors":[],"usedEvents":[3425,3434]}],"src":"125:558:21"},"id":21},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[3553]},"id":3554,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3519,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":3520,"nodeType":"StructuredDocumentation","src":"149:1963:22","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":3553,"linearizedBaseContracts":[3553],"name":"IERC20Permit","nameLocation":"2123:12:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3521,"nodeType":"StructuredDocumentation","src":"2142:850:22","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":3538,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:22","nodeType":"FunctionDefinition","parameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3523,"mutability":"mutable","name":"owner","nameLocation":"3030:5:22","nodeType":"VariableDeclaration","scope":3538,"src":"3022:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3522,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3525,"mutability":"mutable","name":"spender","nameLocation":"3053:7:22","nodeType":"VariableDeclaration","scope":3538,"src":"3045:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3524,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3527,"mutability":"mutable","name":"value","nameLocation":"3078:5:22","nodeType":"VariableDeclaration","scope":3538,"src":"3070:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3529,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:22","nodeType":"VariableDeclaration","scope":3538,"src":"3093:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3528,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3531,"mutability":"mutable","name":"v","nameLocation":"3125:1:22","nodeType":"VariableDeclaration","scope":3538,"src":"3119:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3530,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3533,"mutability":"mutable","name":"r","nameLocation":"3144:1:22","nodeType":"VariableDeclaration","scope":3538,"src":"3136:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3535,"mutability":"mutable","name":"s","nameLocation":"3163:1:22","nodeType":"VariableDeclaration","scope":3538,"src":"3155:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:22"},"returnParameters":{"id":3537,"nodeType":"ParameterList","parameters":[],"src":"3179:0:22"},"scope":3553,"src":"2997:183:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3539,"nodeType":"StructuredDocumentation","src":"3186:294:22","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":3546,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:22","nodeType":"FunctionDefinition","parameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"owner","nameLocation":"3509:5:22","nodeType":"VariableDeclaration","scope":3546,"src":"3501:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3540,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:22"},"returnParameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3546,"src":"3539:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:22"},"scope":3553,"src":"3485:63:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3547,"nodeType":"StructuredDocumentation","src":"3554:128:22","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":3552,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:22","nodeType":"FunctionDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[],"src":"3765:2:22"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3552,"src":"3791:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:22"},"scope":3553,"src":"3740:60:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3554,"src":"2113:1689:22","usedErrors":[],"usedEvents":[]}],"src":"123:3680:22"},"id":22},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5284],"SignedMath":[7144],"Strings":[3808]},"id":3809,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3555,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3557,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3809,"sourceUnit":5285,"src":"127:37:23","symbolAliases":[{"foreign":{"id":3556,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"135:4:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3559,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3809,"sourceUnit":7145,"src":"165:49:23","symbolAliases":[{"foreign":{"id":3558,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7144,"src":"173:10:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3560,"nodeType":"StructuredDocumentation","src":"216:34:23","text":" @dev String operations."},"fullyImplemented":true,"id":3808,"linearizedBaseContracts":[3808],"name":"Strings","nameLocation":"259:7:23","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3563,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:23","nodeType":"VariableDeclaration","scope":3808,"src":"273:56:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3561,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:23","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3566,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:23","nodeType":"VariableDeclaration","scope":3808,"src":"335:42:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3564,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:23","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":3567,"nodeType":"StructuredDocumentation","src":"384:81:23","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":3573,"name":"StringsInsufficientHexLength","nameLocation":"476:28:23","nodeType":"ErrorDefinition","parameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"mutability":"mutable","name":"value","nameLocation":"513:5:23","nodeType":"VariableDeclaration","scope":3573,"src":"505:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3568,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3571,"mutability":"mutable","name":"length","nameLocation":"528:6:23","nodeType":"VariableDeclaration","scope":3573,"src":"520:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3570,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:23"},"src":"470:66:23"},{"body":{"id":3620,"nodeType":"Block","src":"708:627:23","statements":[{"id":3619,"nodeType":"UncheckedBlock","src":"718:611:23","statements":[{"assignments":[3582],"declarations":[{"constant":false,"id":3582,"mutability":"mutable","name":"length","nameLocation":"750:6:23","nodeType":"VariableDeclaration","scope":3619,"src":"742:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3581,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3589,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"770:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3583,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"759:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5284_$","typeString":"type(library Math)"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:23","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5104,"src":"759:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:23"},{"assignments":[3591],"declarations":[{"constant":false,"id":3591,"mutability":"mutable","name":"buffer","nameLocation":"808:6:23","nodeType":"VariableDeclaration","scope":3619,"src":"794:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3590,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3596,"initialValue":{"arguments":[{"id":3594,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"828:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3592,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:23"},{"assignments":[3598],"declarations":[{"constant":false,"id":3598,"mutability":"mutable","name":"ptr","nameLocation":"857:3:23","nodeType":"VariableDeclaration","scope":3619,"src":"849:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3597,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3599,"nodeType":"VariableDeclarationStatement","src":"849:11:23"},{"AST":{"nodeType":"YulBlock","src":"930:67:23","statements":[{"nodeType":"YulAssignment","src":"948:35:23","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"959:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:2:23","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"975:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:23"},"nodeType":"YulFunctionCall","src":"967:15:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:23"},"nodeType":"YulFunctionCall","src":"955:28:23"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"948:3:23"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3591,"isOffset":false,"isSlot":false,"src":"959:6:23","valueSize":1},{"declaration":3582,"isOffset":false,"isSlot":false,"src":"975:6:23","valueSize":1},{"declaration":3598,"isOffset":false,"isSlot":false,"src":"948:3:23","valueSize":1}],"id":3600,"nodeType":"InlineAssembly","src":"921:76:23"},{"body":{"id":3615,"nodeType":"Block","src":"1023:269:23","statements":[{"expression":{"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:23","subExpression":{"id":3602,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"1041:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3604,"nodeType":"ExpressionStatement","src":"1041:5:23"},{"AST":{"nodeType":"YulBlock","src":"1124:86:23","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1154:3:23"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:23","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1164:3:23"},"nodeType":"YulFunctionCall","src":"1164:14:23"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1180:10:23"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1159:4:23"},"nodeType":"YulFunctionCall","src":"1159:32:23"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1146:7:23"},"nodeType":"YulFunctionCall","src":"1146:46:23"},"nodeType":"YulExpressionStatement","src":"1146:46:23"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3563,"isOffset":false,"isSlot":false,"src":"1180:10:23","valueSize":1},{"declaration":3598,"isOffset":false,"isSlot":false,"src":"1154:3:23","valueSize":1},{"declaration":3576,"isOffset":false,"isSlot":false,"src":"1168:5:23","valueSize":1}],"id":3605,"nodeType":"InlineAssembly","src":"1115:95:23"},{"expression":{"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"1227:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3609,"nodeType":"ExpressionStatement","src":"1227:11:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"1260:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3614,"nodeType":"IfStatement","src":"1256:21:23","trueBody":{"id":3613,"nodeType":"Break","src":"1272:5:23"}}]},"condition":{"hexValue":"74727565","id":3601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3616,"nodeType":"WhileStatement","src":"1010:282:23"},{"expression":{"id":3617,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"1312:6:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3580,"id":3618,"nodeType":"Return","src":"1305:13:23"}]}]},"documentation":{"id":3574,"nodeType":"StructuredDocumentation","src":"542:90:23","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3621,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:23","nodeType":"FunctionDefinition","parameters":{"id":3577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"value","nameLocation":"663:5:23","nodeType":"VariableDeclaration","scope":3621,"src":"655:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3575,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:23"},"returnParameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3621,"src":"693:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3578,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:23"},"scope":3808,"src":"637:698:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3646,"nodeType":"Block","src":"1511:92:23","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"1542:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:23","trueExpression":{"hexValue":"2d","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"1588:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3639,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7144,"src":"1573:10:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7144_$","typeString":"type(library SignedMath)"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:23","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7143,"src":"1573:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3638,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"1564:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3629,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:23","typeDescriptions":{}}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:23","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:23","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3628,"id":3645,"nodeType":"Return","src":"1521:75:23"}]},"documentation":{"id":3622,"nodeType":"StructuredDocumentation","src":"1341:89:23","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3647,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:23","nodeType":"FunctionDefinition","parameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"value","nameLocation":"1466:5:23","nodeType":"VariableDeclaration","scope":3647,"src":"1459:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3623,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:23"},"returnParameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3647,"src":"1496:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3626,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:23"},"scope":3808,"src":"1435:168:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3666,"nodeType":"Block","src":"1782:100:23","statements":[{"id":3665,"nodeType":"UncheckedBlock","src":"1792:84:23","statements":[{"expression":{"arguments":[{"id":3656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"1835:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"1854:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3657,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"1842:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5284_$","typeString":"type(library Math)"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:23","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5226,"src":"1842:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3655,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3667,3750,3770],"referencedDeclaration":3750,"src":"1823:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3654,"id":3664,"nodeType":"Return","src":"1816:49:23"}]}]},"documentation":{"id":3648,"nodeType":"StructuredDocumentation","src":"1609:94:23","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3667,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:23","nodeType":"FunctionDefinition","parameters":{"id":3651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3650,"mutability":"mutable","name":"value","nameLocation":"1737:5:23","nodeType":"VariableDeclaration","scope":3667,"src":"1729:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3649,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:23"},"returnParameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3667,"src":"1767:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3652,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:23"},"scope":3808,"src":"1708:174:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3749,"nodeType":"Block","src":"2095:435:23","statements":[{"assignments":[3678],"declarations":[{"constant":false,"id":3678,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:23","nodeType":"VariableDeclaration","scope":3749,"src":"2105:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3677,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3680,"initialValue":{"id":3679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"2126:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:23"},{"assignments":[3682],"declarations":[{"constant":false,"id":3682,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:23","nodeType":"VariableDeclaration","scope":3749,"src":"2141:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3681,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3691,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3686,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"2177:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3683,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:23"},{"expression":{"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3692,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"2198:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3694,"indexExpression":{"hexValue":"30","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3697,"nodeType":"ExpressionStatement","src":"2198:15:23"},{"expression":{"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3698,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"2223:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3700,"indexExpression":{"hexValue":"31","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3703,"nodeType":"ExpressionStatement","src":"2223:15:23"},{"body":{"id":3732,"nodeType":"Block","src":"2293:95:23","statements":[{"expression":{"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3718,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"2307:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3720,"indexExpression":{"id":3719,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"2314:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3721,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"2319:10:23","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3725,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3722,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"2330:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:23","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3727,"nodeType":"ExpressionStatement","src":"2307:40:23"},{"expression":{"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3728,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"2361:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3731,"nodeType":"ExpressionStatement","src":"2361:16:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3712,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"2281:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3733,"initializationExpression":{"assignments":[3705],"declarations":[{"constant":false,"id":3705,"mutability":"mutable","name":"i","nameLocation":"2261:1:23","nodeType":"VariableDeclaration","scope":3733,"src":"2253:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3704,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3711,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3707,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"2269:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:23"},"loopExpression":{"expression":{"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:23","subExpression":{"id":3715,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"2290:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3717,"nodeType":"ExpressionStatement","src":"2288:3:23"},"nodeType":"ForStatement","src":"2248:140:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3734,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"2401:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3743,"nodeType":"IfStatement","src":"2397:96:23","trueBody":{"id":3742,"nodeType":"Block","src":"2418:75:23","statements":[{"errorCall":{"arguments":[{"id":3738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"2468:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3739,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"2475:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3737,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"2439:28:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3741,"nodeType":"RevertStatement","src":"2432:50:23"}]}},{"expression":{"arguments":[{"id":3746,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"2516:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3744,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:23","typeDescriptions":{}}},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3676,"id":3748,"nodeType":"Return","src":"2502:21:23"}]},"documentation":{"id":3668,"nodeType":"StructuredDocumentation","src":"1888:112:23","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3750,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:23","nodeType":"FunctionDefinition","parameters":{"id":3673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3670,"mutability":"mutable","name":"value","nameLocation":"2034:5:23","nodeType":"VariableDeclaration","scope":3750,"src":"2026:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3672,"mutability":"mutable","name":"length","nameLocation":"2049:6:23","nodeType":"VariableDeclaration","scope":3750,"src":"2041:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:23"},"returnParameters":{"id":3676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3750,"src":"2080:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3674,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:23"},"scope":3808,"src":"2005:525:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3769,"nodeType":"Block","src":"2762:75:23","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3763,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"2807:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3761,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:23","typeDescriptions":{}}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:23","typeDescriptions":{}}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3766,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"2815:14:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3758,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3667,3750,3770],"referencedDeclaration":3750,"src":"2779:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3757,"id":3768,"nodeType":"Return","src":"2772:58:23"}]},"documentation":{"id":3751,"nodeType":"StructuredDocumentation","src":"2536:148:23","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3770,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:23","nodeType":"FunctionDefinition","parameters":{"id":3754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3753,"mutability":"mutable","name":"addr","nameLocation":"2718:4:23","nodeType":"VariableDeclaration","scope":3770,"src":"2710:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3752,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:23"},"returnParameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3770,"src":"2747:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3755,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:23"},"scope":3808,"src":"2689:148:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3806,"nodeType":"Block","src":"2992:104:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3782,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"3015:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3780,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:23","typeDescriptions":{}}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:23","memberName":"length","nodeType":"MemberAccess","src":"3009:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3787,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"3034:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3785,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:23","typeDescriptions":{}}},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:23","memberName":"length","nodeType":"MemberAccess","src":"3028:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3794,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"3063:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3792,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:23","typeDescriptions":{}}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3791,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3800,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"3086:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3798,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:23","typeDescriptions":{}}},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3797,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3779,"id":3805,"nodeType":"Return","src":"3002:87:23"}]},"documentation":{"id":3771,"nodeType":"StructuredDocumentation","src":"2843:66:23","text":" @dev Returns true if the two strings are equal."},"id":3807,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:23","nodeType":"FunctionDefinition","parameters":{"id":3776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3773,"mutability":"mutable","name":"a","nameLocation":"2943:1:23","nodeType":"VariableDeclaration","scope":3807,"src":"2929:15:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3772,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3775,"mutability":"mutable","name":"b","nameLocation":"2960:1:23","nodeType":"VariableDeclaration","scope":3807,"src":"2946:15:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3774,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:23"},"returnParameters":{"id":3779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3807,"src":"2986:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3777,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:23"},"scope":3808,"src":"2914:182:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3809,"src":"251:2847:23","usedErrors":[3573],"usedEvents":[]}],"src":"101:2998:23"},"id":23},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4156]},"id":4157,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3810,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3811,"nodeType":"StructuredDocumentation","src":"138:205:24","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4156,"linearizedBaseContracts":[4156],"name":"ECDSA","nameLocation":"352:5:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3816,"members":[{"id":3812,"name":"NoError","nameLocation":"392:7:24","nodeType":"EnumValue","src":"392:7:24"},{"id":3813,"name":"InvalidSignature","nameLocation":"409:16:24","nodeType":"EnumValue","src":"409:16:24"},{"id":3814,"name":"InvalidSignatureLength","nameLocation":"435:22:24","nodeType":"EnumValue","src":"435:22:24"},{"id":3815,"name":"InvalidSignatureS","nameLocation":"467:17:24","nodeType":"EnumValue","src":"467:17:24"}],"name":"RecoverError","nameLocation":"369:12:24","nodeType":"EnumDefinition","src":"364:126:24"},{"documentation":{"id":3817,"nodeType":"StructuredDocumentation","src":"496:63:24","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3819,"name":"ECDSAInvalidSignature","nameLocation":"570:21:24","nodeType":"ErrorDefinition","parameters":{"id":3818,"nodeType":"ParameterList","parameters":[],"src":"591:2:24"},"src":"564:30:24"},{"documentation":{"id":3820,"nodeType":"StructuredDocumentation","src":"600:60:24","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3824,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:24","nodeType":"ErrorDefinition","parameters":{"id":3823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3822,"mutability":"mutable","name":"length","nameLocation":"707:6:24","nodeType":"VariableDeclaration","scope":3824,"src":"699:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3821,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:24"},"src":"665:50:24"},{"documentation":{"id":3825,"nodeType":"StructuredDocumentation","src":"721:85:24","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3829,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:24","nodeType":"ErrorDefinition","parameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"s","nameLocation":"848:1:24","nodeType":"VariableDeclaration","scope":3829,"src":"840:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:24"},"src":"811:40:24"},{"body":{"id":3881,"nodeType":"Block","src":"2242:653:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3844,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"2256:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:24","memberName":"length","nodeType":"MemberAccess","src":"2256:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:24","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3879,"nodeType":"Block","src":"2781:108:24","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3866,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:24","typeDescriptions":{}}},"id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3870,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"2815:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3816_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:24","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3814,"src":"2815:35:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3874,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"2860:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:24","memberName":"length","nodeType":"MemberAccess","src":"2860:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:24","typeDescriptions":{}}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3816_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3843,"id":3878,"nodeType":"Return","src":"2795:83:24"}]},"id":3880,"nodeType":"IfStatement","src":"2252:637:24","trueBody":{"id":3865,"nodeType":"Block","src":"2280:495:24","statements":[{"assignments":[3849],"declarations":[{"constant":false,"id":3849,"mutability":"mutable","name":"r","nameLocation":"2302:1:24","nodeType":"VariableDeclaration","scope":3865,"src":"2294:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3848,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3850,"nodeType":"VariableDeclarationStatement","src":"2294:9:24"},{"assignments":[3852],"declarations":[{"constant":false,"id":3852,"mutability":"mutable","name":"s","nameLocation":"2325:1:24","nodeType":"VariableDeclaration","scope":3865,"src":"2317:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3853,"nodeType":"VariableDeclarationStatement","src":"2317:9:24"},{"assignments":[3855],"declarations":[{"constant":false,"id":3855,"mutability":"mutable","name":"v","nameLocation":"2346:1:24","nodeType":"VariableDeclaration","scope":3865,"src":"2340:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3854,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3856,"nodeType":"VariableDeclarationStatement","src":"2340:7:24"},{"AST":{"nodeType":"YulBlock","src":"2548:171:24","statements":[{"nodeType":"YulAssignment","src":"2566:32:24","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2581:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"2592:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2577:3:24"},"nodeType":"YulFunctionCall","src":"2577:20:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2571:5:24"},"nodeType":"YulFunctionCall","src":"2571:27:24"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2566:1:24"}]},{"nodeType":"YulAssignment","src":"2615:32:24","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2630:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"2641:4:24","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2626:3:24"},"nodeType":"YulFunctionCall","src":"2626:20:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2620:5:24"},"nodeType":"YulFunctionCall","src":"2620:27:24"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2615:1:24"}]},{"nodeType":"YulAssignment","src":"2664:41:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2674:1:24","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2687:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"2698:4:24","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2683:3:24"},"nodeType":"YulFunctionCall","src":"2683:20:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2677:5:24"},"nodeType":"YulFunctionCall","src":"2677:27:24"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2669:4:24"},"nodeType":"YulFunctionCall","src":"2669:36:24"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2664:1:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3849,"isOffset":false,"isSlot":false,"src":"2566:1:24","valueSize":1},{"declaration":3852,"isOffset":false,"isSlot":false,"src":"2615:1:24","valueSize":1},{"declaration":3834,"isOffset":false,"isSlot":false,"src":"2581:9:24","valueSize":1},{"declaration":3834,"isOffset":false,"isSlot":false,"src":"2630:9:24","valueSize":1},{"declaration":3834,"isOffset":false,"isSlot":false,"src":"2687:9:24","valueSize":1},{"declaration":3855,"isOffset":false,"isSlot":false,"src":"2664:1:24","valueSize":1}],"id":3857,"nodeType":"InlineAssembly","src":"2539:180:24"},{"expression":{"arguments":[{"id":3859,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"2750:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3860,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"2756:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3861,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"2759:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3862,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"2762:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3858,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3882,3962,4070],"referencedDeclaration":4070,"src":"2739:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3816_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3816_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3843,"id":3864,"nodeType":"Return","src":"2732:32:24"}]}}]},"documentation":{"id":3830,"nodeType":"StructuredDocumentation","src":"857:1267:24","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3882,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:24","nodeType":"FunctionDefinition","parameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3832,"mutability":"mutable","name":"hash","nameLocation":"2157:4:24","nodeType":"VariableDeclaration","scope":3882,"src":"2149:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3834,"mutability":"mutable","name":"signature","nameLocation":"2176:9:24","nodeType":"VariableDeclaration","scope":3882,"src":"2163:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3833,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:24"},"returnParameters":{"id":3843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3882,"src":"2210:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3836,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3882,"src":"2219:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3839,"nodeType":"UserDefinedTypeName","pathNode":{"id":3838,"name":"RecoverError","nameLocations":["2219:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":3816,"src":"2219:12:24"},"referencedDeclaration":3816,"src":"2219:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3882,"src":"2233:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:24"},"scope":4156,"src":"2129:766:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3911,"nodeType":"Block","src":"3789:168:24","statements":[{"assignments":[3893,3896,3898],"declarations":[{"constant":false,"id":3893,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:24","nodeType":"VariableDeclaration","scope":3911,"src":"3800:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3892,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3896,"mutability":"mutable","name":"error","nameLocation":"3832:5:24","nodeType":"VariableDeclaration","scope":3911,"src":"3819:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3895,"nodeType":"UserDefinedTypeName","pathNode":{"id":3894,"name":"RecoverError","nameLocations":["3819:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":3816,"src":"3819:12:24"},"referencedDeclaration":3816,"src":"3819:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3898,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:24","nodeType":"VariableDeclaration","scope":3911,"src":"3839:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3903,"initialValue":{"arguments":[{"id":3900,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"3870:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3901,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"3876:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3899,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3882,3962,4070],"referencedDeclaration":3882,"src":"3859:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3816_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3816_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:24"},{"expression":{"arguments":[{"id":3905,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"3908:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},{"id":3906,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"3915:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3904,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"3896:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3816_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3908,"nodeType":"ExpressionStatement","src":"3896:28:24"},{"expression":{"id":3909,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"3941:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3891,"id":3910,"nodeType":"Return","src":"3934:16:24"}]},"documentation":{"id":3883,"nodeType":"StructuredDocumentation","src":"2901:796:24","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3912,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:24","nodeType":"FunctionDefinition","parameters":{"id":3888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3885,"mutability":"mutable","name":"hash","nameLocation":"3727:4:24","nodeType":"VariableDeclaration","scope":3912,"src":"3719:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3887,"mutability":"mutable","name":"signature","nameLocation":"3746:9:24","nodeType":"VariableDeclaration","scope":3912,"src":"3733:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3886,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:24"},"returnParameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3912,"src":"3780:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3889,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:24"},"scope":4156,"src":"3702:255:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3961,"nodeType":"Block","src":"4285:342:24","statements":[{"id":3960,"nodeType":"UncheckedBlock","src":"4295:326:24","statements":[{"assignments":[3930],"declarations":[{"constant":false,"id":3930,"mutability":"mutable","name":"s","nameLocation":"4327:1:24","nodeType":"VariableDeclaration","scope":3960,"src":"4319:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3937,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3931,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"4331:2:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:24","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:24","typeDescriptions":{}}},"id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:24"},{"assignments":[3939],"declarations":[{"constant":false,"id":3939,"mutability":"mutable","name":"v","nameLocation":"4528:1:24","nodeType":"VariableDeclaration","scope":3960,"src":"4522:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3938,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3952,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3944,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"4547:2:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3942,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:24","typeDescriptions":{}}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3948,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:24","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3940,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:24","typeDescriptions":{}}},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:24"},{"expression":{"arguments":[{"id":3954,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"4596:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3955,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"4602:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3956,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"4605:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3957,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"4608:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3953,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3882,3962,4070],"referencedDeclaration":4070,"src":"4585:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3816_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3816_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3928,"id":3959,"nodeType":"Return","src":"4578:32:24"}]}]},"documentation":{"id":3913,"nodeType":"StructuredDocumentation","src":"3963:205:24","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":3962,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:24","nodeType":"FunctionDefinition","parameters":{"id":3920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3915,"mutability":"mutable","name":"hash","nameLocation":"4201:4:24","nodeType":"VariableDeclaration","scope":3962,"src":"4193:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3914,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3917,"mutability":"mutable","name":"r","nameLocation":"4215:1:24","nodeType":"VariableDeclaration","scope":3962,"src":"4207:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3919,"mutability":"mutable","name":"vs","nameLocation":"4226:2:24","nodeType":"VariableDeclaration","scope":3962,"src":"4218:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:24"},"returnParameters":{"id":3928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3962,"src":"4253:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3921,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3962,"src":"4262:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3924,"nodeType":"UserDefinedTypeName","pathNode":{"id":3923,"name":"RecoverError","nameLocations":["4262:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":3816,"src":"4262:12:24"},"referencedDeclaration":3816,"src":"4262:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3962,"src":"4276:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:24"},"scope":4156,"src":"4173:454:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3994,"nodeType":"Block","src":"4840:164:24","statements":[{"assignments":[3975,3978,3980],"declarations":[{"constant":false,"id":3975,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:24","nodeType":"VariableDeclaration","scope":3994,"src":"4851:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3974,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3978,"mutability":"mutable","name":"error","nameLocation":"4883:5:24","nodeType":"VariableDeclaration","scope":3994,"src":"4870:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3977,"nodeType":"UserDefinedTypeName","pathNode":{"id":3976,"name":"RecoverError","nameLocations":["4870:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":3816,"src":"4870:12:24"},"referencedDeclaration":3816,"src":"4870:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3980,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:24","nodeType":"VariableDeclaration","scope":3994,"src":"4890:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3986,"initialValue":{"arguments":[{"id":3982,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"4921:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3983,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"4927:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3984,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"4930:2:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3981,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3882,3962,4070],"referencedDeclaration":3962,"src":"4910:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3816_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3816_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:24"},{"expression":{"arguments":[{"id":3988,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"4955:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},{"id":3989,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"4962:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3987,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"4943:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3816_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3991,"nodeType":"ExpressionStatement","src":"4943:28:24"},{"expression":{"id":3992,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"4988:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3973,"id":3993,"nodeType":"Return","src":"4981:16:24"}]},"documentation":{"id":3963,"nodeType":"StructuredDocumentation","src":"4633:116:24","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3995,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:24","nodeType":"FunctionDefinition","parameters":{"id":3970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3965,"mutability":"mutable","name":"hash","nameLocation":"4779:4:24","nodeType":"VariableDeclaration","scope":3995,"src":"4771:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3967,"mutability":"mutable","name":"r","nameLocation":"4793:1:24","nodeType":"VariableDeclaration","scope":3995,"src":"4785:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3969,"mutability":"mutable","name":"vs","nameLocation":"4804:2:24","nodeType":"VariableDeclaration","scope":3995,"src":"4796:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:24"},"returnParameters":{"id":3973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3995,"src":"4831:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3971,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:24"},"scope":4156,"src":"4754:250:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4069,"nodeType":"Block","src":"5298:1372:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4016,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"6194:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4014,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:24","typeDescriptions":{}}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:24","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4030,"nodeType":"IfStatement","src":"6182:164:24","trueBody":{"id":4029,"nodeType":"Block","src":"6267:79:24","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4020,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:24","typeDescriptions":{}}},"id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4024,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"6301:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3816_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:24","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3815,"src":"6301:30:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},{"id":4026,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"6333:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3816_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4013,"id":4028,"nodeType":"Return","src":"6281:54:24"}]}},{"assignments":[4032],"declarations":[{"constant":false,"id":4032,"mutability":"mutable","name":"signer","nameLocation":"6448:6:24","nodeType":"VariableDeclaration","scope":4069,"src":"6440:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4031,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4039,"initialValue":{"arguments":[{"id":4034,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"6467:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4035,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"6473:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4036,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"6476:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4037,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"6479:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4033,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:24","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:24"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4040,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"6495:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4041,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:24","typeDescriptions":{}}},"id":4044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4059,"nodeType":"IfStatement","src":"6491:113:24","trueBody":{"id":4058,"nodeType":"Block","src":"6517:87:24","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4046,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:24","typeDescriptions":{}}},"id":4049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4050,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"6551:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3816_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:24","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3813,"src":"6551:29:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:24","typeDescriptions":{}}},"id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3816_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4013,"id":4057,"nodeType":"Return","src":"6531:62:24"}]}},{"expression":{"components":[{"id":4060,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"6622:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4061,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"6630:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3816_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:24","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3812,"src":"6630:20:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4063,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:24","typeDescriptions":{}}},"id":4066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4067,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3816_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4013,"id":4068,"nodeType":"Return","src":"6614:49:24"}]},"documentation":{"id":3996,"nodeType":"StructuredDocumentation","src":"5010:125:24","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4070,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:24","nodeType":"FunctionDefinition","parameters":{"id":4005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3998,"mutability":"mutable","name":"hash","nameLocation":"5177:4:24","nodeType":"VariableDeclaration","scope":4070,"src":"5169:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3997,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4000,"mutability":"mutable","name":"v","nameLocation":"5197:1:24","nodeType":"VariableDeclaration","scope":4070,"src":"5191:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3999,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4002,"mutability":"mutable","name":"r","nameLocation":"5216:1:24","nodeType":"VariableDeclaration","scope":4070,"src":"5208:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4004,"mutability":"mutable","name":"s","nameLocation":"5235:1:24","nodeType":"VariableDeclaration","scope":4070,"src":"5227:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4003,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:24"},"returnParameters":{"id":4013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4070,"src":"5266:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4006,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4070,"src":"5275:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4009,"nodeType":"UserDefinedTypeName","pathNode":{"id":4008,"name":"RecoverError","nameLocations":["5275:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":3816,"src":"5275:12:24"},"referencedDeclaration":3816,"src":"5275:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4070,"src":"5289:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:24"},"scope":4156,"src":"5140:1530:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4105,"nodeType":"Block","src":"6897:166:24","statements":[{"assignments":[4085,4088,4090],"declarations":[{"constant":false,"id":4085,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:24","nodeType":"VariableDeclaration","scope":4105,"src":"6908:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4084,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4088,"mutability":"mutable","name":"error","nameLocation":"6940:5:24","nodeType":"VariableDeclaration","scope":4105,"src":"6927:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4087,"nodeType":"UserDefinedTypeName","pathNode":{"id":4086,"name":"RecoverError","nameLocations":["6927:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":3816,"src":"6927:12:24"},"referencedDeclaration":3816,"src":"6927:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4090,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:24","nodeType":"VariableDeclaration","scope":4105,"src":"6947:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4097,"initialValue":{"arguments":[{"id":4092,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"6978:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4093,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"6984:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4094,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"6987:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4095,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"6990:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4091,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3882,3962,4070],"referencedDeclaration":4070,"src":"6967:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3816_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3816_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:24"},{"expression":{"arguments":[{"id":4099,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"7014:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},{"id":4100,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"7021:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4098,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"7002:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3816_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4102,"nodeType":"ExpressionStatement","src":"7002:28:24"},{"expression":{"id":4103,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"7047:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4083,"id":4104,"nodeType":"Return","src":"7040:16:24"}]},"documentation":{"id":4071,"nodeType":"StructuredDocumentation","src":"6676:122:24","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4106,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:24","nodeType":"FunctionDefinition","parameters":{"id":4080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4073,"mutability":"mutable","name":"hash","nameLocation":"6828:4:24","nodeType":"VariableDeclaration","scope":4106,"src":"6820:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4075,"mutability":"mutable","name":"v","nameLocation":"6840:1:24","nodeType":"VariableDeclaration","scope":4106,"src":"6834:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4074,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4077,"mutability":"mutable","name":"r","nameLocation":"6851:1:24","nodeType":"VariableDeclaration","scope":4106,"src":"6843:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4079,"mutability":"mutable","name":"s","nameLocation":"6862:1:24","nodeType":"VariableDeclaration","scope":4106,"src":"6854:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:24"},"returnParameters":{"id":4083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4106,"src":"6888:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4081,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:24"},"scope":4156,"src":"6803:260:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4154,"nodeType":"Block","src":"7268:460:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4115,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"7282:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4116,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"7291:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3816_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:24","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3812,"src":"7291:20:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4121,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"7378:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4122,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"7387:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3816_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:24","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3813,"src":"7387:29:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4129,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"7483:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4130,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"7492:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3816_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:24","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3814,"src":"7492:35:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4141,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"7617:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4142,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"7626:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3816_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:24","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3815,"src":"7626:30:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4150,"nodeType":"IfStatement","src":"7613:109:24","trueBody":{"id":4149,"nodeType":"Block","src":"7658:64:24","statements":[{"errorCall":{"arguments":[{"id":4146,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4112,"src":"7702:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4145,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"7679:22:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4148,"nodeType":"RevertStatement","src":"7672:39:24"}]}},"id":4151,"nodeType":"IfStatement","src":"7479:243:24","trueBody":{"id":4140,"nodeType":"Block","src":"7529:78:24","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4136,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4112,"src":"7586:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4134,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:24","typeDescriptions":{}}},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4133,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"7550:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4139,"nodeType":"RevertStatement","src":"7543:53:24"}]}},"id":4152,"nodeType":"IfStatement","src":"7374:348:24","trueBody":{"id":4128,"nodeType":"Block","src":"7418:55:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4125,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"7439:21:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4127,"nodeType":"RevertStatement","src":"7432:30:24"}]}},"id":4153,"nodeType":"IfStatement","src":"7278:444:24","trueBody":{"id":4120,"nodeType":"Block","src":"7313:55:24","statements":[{"functionReturnParameters":4114,"id":4119,"nodeType":"Return","src":"7327:7:24"}]}}]},"documentation":{"id":4107,"nodeType":"StructuredDocumentation","src":"7069:122:24","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":4155,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:24","nodeType":"FunctionDefinition","parameters":{"id":4113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"error","nameLocation":"7230:5:24","nodeType":"VariableDeclaration","scope":4155,"src":"7217:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4109,"nodeType":"UserDefinedTypeName","pathNode":{"id":4108,"name":"RecoverError","nameLocations":["7217:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":3816,"src":"7217:12:24"},"referencedDeclaration":3816,"src":"7217:12:24","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3816","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4112,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:24","nodeType":"VariableDeclaration","scope":4155,"src":"7237:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:24"},"returnParameters":{"id":4114,"nodeType":"ParameterList","parameters":[],"src":"7268:0:24"},"scope":4156,"src":"7196:532:24","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4157,"src":"344:7386:24","usedErrors":[3819,3824,3829],"usedEvents":[]}],"src":"112:7619:24"},"id":24},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4230],"Strings":[3808]},"id":4231,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4158,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4160,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4231,"sourceUnit":3809,"src":"149:39:25","symbolAliases":[{"foreign":{"id":4159,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"157:7:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4161,"nodeType":"StructuredDocumentation","src":"190:330:25","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4230,"linearizedBaseContracts":[4230],"name":"MessageHashUtils","nameLocation":"529:16:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":4170,"nodeType":"Block","src":"1314:368:25","statements":[{"AST":{"nodeType":"YulBlock","src":"1376:300:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:4:25","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1403:34:25","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1390:6:25"},"nodeType":"YulFunctionCall","src":"1390:48:25"},"nodeType":"YulExpressionStatement","src":"1390:48:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1499:4:25","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1505:11:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1492:6:25"},"nodeType":"YulFunctionCall","src":"1492:25:25"},"nodeType":"YulExpressionStatement","src":"1492:25:25"},{"nodeType":"YulAssignment","src":"1571:31:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1591:4:25","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:25","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1581:9:25"},"nodeType":"YulFunctionCall","src":"1581:21:25"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1571:6:25"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4167,"isOffset":false,"isSlot":false,"src":"1571:6:25","valueSize":1},{"declaration":4164,"isOffset":false,"isSlot":false,"src":"1505:11:25","valueSize":1}],"id":4169,"nodeType":"InlineAssembly","src":"1367:309:25"}]},"documentation":{"id":4162,"nodeType":"StructuredDocumentation","src":"552:665:25","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4171,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:25","nodeType":"FunctionDefinition","parameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4164,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:25","nodeType":"VariableDeclaration","scope":4171,"src":"1254:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:25"},"returnParameters":{"id":4168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4167,"mutability":"mutable","name":"digest","nameLocation":"1306:6:25","nodeType":"VariableDeclaration","scope":4171,"src":"1298:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:25"},"scope":4230,"src":"1222:460:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4196,"nodeType":"Block","src":"2234:143:25","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4188,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"2343:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:25","memberName":"length","nodeType":"MemberAccess","src":"2343:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4186,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"2326:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3808_$","typeString":"type(library Strings)"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:25","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3621,"src":"2326:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4184,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:25","typeDescriptions":{}}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4192,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"2361:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4180,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:25","typeDescriptions":{}}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:25","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:25","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4179,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4178,"id":4195,"nodeType":"Return","src":"2244:126:25"}]},"documentation":{"id":4172,"nodeType":"StructuredDocumentation","src":"1688:455:25","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4197,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:25","nodeType":"FunctionDefinition","parameters":{"id":4175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"message","nameLocation":"2193:7:25","nodeType":"VariableDeclaration","scope":4197,"src":"2180:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4173,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:25"},"returnParameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4197,"src":"2225:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:25"},"scope":4230,"src":"2148:229:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4216,"nodeType":"Block","src":"2831:80:25","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4211,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"2887:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4212,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"2898:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4208,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4207,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4206,"id":4215,"nodeType":"Return","src":"2841:63:25"}]},"documentation":{"id":4198,"nodeType":"StructuredDocumentation","src":"2383:332:25","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4217,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:25","nodeType":"FunctionDefinition","parameters":{"id":4203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"validator","nameLocation":"2769:9:25","nodeType":"VariableDeclaration","scope":4217,"src":"2761:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4199,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4202,"mutability":"mutable","name":"data","nameLocation":"2793:4:25","nodeType":"VariableDeclaration","scope":4217,"src":"2780:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4201,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:25"},"returnParameters":{"id":4206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4217,"src":"2822:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:25"},"scope":4230,"src":"2720:191:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4228,"nodeType":"Block","src":"3462:292:25","statements":[{"AST":{"nodeType":"YulBlock","src":"3524:224:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3538:22:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3555:4:25","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3549:5:25"},"nodeType":"YulFunctionCall","src":"3549:11:25"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3542:3:25","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3580:3:25"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3585:10:25","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3573:6:25"},"nodeType":"YulFunctionCall","src":"3573:23:25"},"nodeType":"YulExpressionStatement","src":"3573:23:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3620:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"3625:4:25","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:25"},"nodeType":"YulFunctionCall","src":"3616:14:25"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3632:15:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3609:6:25"},"nodeType":"YulFunctionCall","src":"3609:39:25"},"nodeType":"YulExpressionStatement","src":"3609:39:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3672:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"3677:4:25","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:25"},"nodeType":"YulFunctionCall","src":"3668:14:25"},{"name":"structHash","nodeType":"YulIdentifier","src":"3684:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3661:6:25"},"nodeType":"YulFunctionCall","src":"3661:34:25"},"nodeType":"YulExpressionStatement","src":"3661:34:25"},{"nodeType":"YulAssignment","src":"3708:30:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3728:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"3733:4:25","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3718:9:25"},"nodeType":"YulFunctionCall","src":"3718:20:25"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3708:6:25"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4225,"isOffset":false,"isSlot":false,"src":"3708:6:25","valueSize":1},{"declaration":4220,"isOffset":false,"isSlot":false,"src":"3632:15:25","valueSize":1},{"declaration":4222,"isOffset":false,"isSlot":false,"src":"3684:10:25","valueSize":1}],"id":4227,"nodeType":"InlineAssembly","src":"3515:233:25"}]},"documentation":{"id":4218,"nodeType":"StructuredDocumentation","src":"2917:431:25","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4229,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:25","nodeType":"FunctionDefinition","parameters":{"id":4223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:25","nodeType":"VariableDeclaration","scope":4229,"src":"3378:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4222,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:25","nodeType":"VariableDeclaration","scope":4229,"src":"3403:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:25"},"returnParameters":{"id":4226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4225,"mutability":"mutable","name":"digest","nameLocation":"3454:6:25","nodeType":"VariableDeclaration","scope":4229,"src":"3446:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:25"},"scope":4230,"src":"3353:401:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4231,"src":"521:3235:25","usedErrors":[],"usedEvents":[]}],"src":"123:3634:25"},"id":25},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5284]},"id":5285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4232,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4233,"nodeType":"StructuredDocumentation","src":"129:73:26","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5284,"linearizedBaseContracts":[5284],"name":"Math","nameLocation":"211:4:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4234,"nodeType":"StructuredDocumentation","src":"222:50:26","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":4236,"name":"MathOverflowedMulDiv","nameLocation":"283:20:26","nodeType":"ErrorDefinition","parameters":{"id":4235,"nodeType":"ParameterList","parameters":[],"src":"303:2:26"},"src":"277:29:26"},{"canonicalName":"Math.Rounding","id":4241,"members":[{"id":4237,"name":"Floor","nameLocation":"336:5:26","nodeType":"EnumValue","src":"336:5:26"},{"id":4238,"name":"Ceil","nameLocation":"379:4:26","nodeType":"EnumValue","src":"379:4:26"},{"id":4239,"name":"Trunc","nameLocation":"421:5:26","nodeType":"EnumValue","src":"421:5:26"},{"id":4240,"name":"Expand","nameLocation":"451:6:26","nodeType":"EnumValue","src":"451:6:26"}],"name":"Rounding","nameLocation":"317:8:26","nodeType":"EnumDefinition","src":"312:169:26"},{"body":{"id":4272,"nodeType":"Block","src":"661:140:26","statements":[{"id":4271,"nodeType":"UncheckedBlock","src":"671:124:26","statements":[{"assignments":[4254],"declarations":[{"constant":false,"id":4254,"mutability":"mutable","name":"c","nameLocation":"703:1:26","nodeType":"VariableDeclaration","scope":4271,"src":"695:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4253,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4258,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4255,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"707:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4256,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"711:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4259,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"730:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4260,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"734:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4266,"nodeType":"IfStatement","src":"726:28:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4252,"id":4265,"nodeType":"Return","src":"737:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4268,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"782:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4252,"id":4270,"nodeType":"Return","src":"768:16:26"}]}]},"documentation":{"id":4242,"nodeType":"StructuredDocumentation","src":"487:93:26","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":4273,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:26","nodeType":"FunctionDefinition","parameters":{"id":4247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4244,"mutability":"mutable","name":"a","nameLocation":"609:1:26","nodeType":"VariableDeclaration","scope":4273,"src":"601:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4243,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4246,"mutability":"mutable","name":"b","nameLocation":"620:1:26","nodeType":"VariableDeclaration","scope":4273,"src":"612:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4245,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:26"},"returnParameters":{"id":4252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4273,"src":"646:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4248,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4273,"src":"652:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:26"},"scope":5284,"src":"585:216:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4300,"nodeType":"Block","src":"984:113:26","statements":[{"id":4299,"nodeType":"UncheckedBlock","src":"994:97:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4285,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"1022:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4286,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"1026:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4292,"nodeType":"IfStatement","src":"1018:28:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4284,"id":4291,"nodeType":"Return","src":"1029:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"1074:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4295,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"1078:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4297,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4284,"id":4298,"nodeType":"Return","src":"1060:20:26"}]}]},"documentation":{"id":4274,"nodeType":"StructuredDocumentation","src":"807:96:26","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":4301,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:26","nodeType":"FunctionDefinition","parameters":{"id":4279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"a","nameLocation":"932:1:26","nodeType":"VariableDeclaration","scope":4301,"src":"924:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4275,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4278,"mutability":"mutable","name":"b","nameLocation":"943:1:26","nodeType":"VariableDeclaration","scope":4301,"src":"935:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4277,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:26"},"returnParameters":{"id":4284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4301,"src":"969:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4280,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4301,"src":"975:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4282,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:26"},"scope":5284,"src":"908:189:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4342,"nodeType":"Block","src":"1283:417:26","statements":[{"id":4341,"nodeType":"UncheckedBlock","src":"1293:401:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4313,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"1551:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4320,"nodeType":"IfStatement","src":"1547:28:26","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4312,"id":4319,"nodeType":"Return","src":"1559:16:26"}},{"assignments":[4322],"declarations":[{"constant":false,"id":4322,"mutability":"mutable","name":"c","nameLocation":"1597:1:26","nodeType":"VariableDeclaration","scope":4341,"src":"1589:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4326,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4323,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"1601:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4324,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"1605:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4327,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"1624:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4328,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"1628:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4330,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"1633:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4336,"nodeType":"IfStatement","src":"1620:33:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4312,"id":4335,"nodeType":"Return","src":"1636:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":4337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4338,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"1681:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4339,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4312,"id":4340,"nodeType":"Return","src":"1667:16:26"}]}]},"documentation":{"id":4302,"nodeType":"StructuredDocumentation","src":"1103:99:26","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":4343,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:26","nodeType":"FunctionDefinition","parameters":{"id":4307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"a","nameLocation":"1231:1:26","nodeType":"VariableDeclaration","scope":4343,"src":"1223:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4306,"mutability":"mutable","name":"b","nameLocation":"1242:1:26","nodeType":"VariableDeclaration","scope":4343,"src":"1234:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:26"},"returnParameters":{"id":4312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4343,"src":"1268:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4308,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4343,"src":"1274:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:26"},"scope":5284,"src":"1207:493:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4370,"nodeType":"Block","src":"1887:114:26","statements":[{"id":4369,"nodeType":"UncheckedBlock","src":"1897:98:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4355,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"1925:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4362,"nodeType":"IfStatement","src":"1921:29:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4354,"id":4361,"nodeType":"Return","src":"1933:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":4363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4364,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"1978:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4365,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"1982:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4367,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4354,"id":4368,"nodeType":"Return","src":"1964:20:26"}]}]},"documentation":{"id":4344,"nodeType":"StructuredDocumentation","src":"1706:100:26","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":4371,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:26","nodeType":"FunctionDefinition","parameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4346,"mutability":"mutable","name":"a","nameLocation":"1835:1:26","nodeType":"VariableDeclaration","scope":4371,"src":"1827:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4345,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4348,"mutability":"mutable","name":"b","nameLocation":"1846:1:26","nodeType":"VariableDeclaration","scope":4371,"src":"1838:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4347,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:26"},"returnParameters":{"id":4354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4371,"src":"1872:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4350,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4371,"src":"1878:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4352,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:26"},"scope":5284,"src":"1811:190:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4398,"nodeType":"Block","src":"2198:114:26","statements":[{"id":4397,"nodeType":"UncheckedBlock","src":"2208:98:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4383,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"2236:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4390,"nodeType":"IfStatement","src":"2232:29:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4382,"id":4389,"nodeType":"Return","src":"2244:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4392,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"2289:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4393,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"2293:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4382,"id":4396,"nodeType":"Return","src":"2275:20:26"}]}]},"documentation":{"id":4372,"nodeType":"StructuredDocumentation","src":"2007:110:26","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":4399,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:26","nodeType":"FunctionDefinition","parameters":{"id":4377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4374,"mutability":"mutable","name":"a","nameLocation":"2146:1:26","nodeType":"VariableDeclaration","scope":4399,"src":"2138:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4373,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4376,"mutability":"mutable","name":"b","nameLocation":"2157:1:26","nodeType":"VariableDeclaration","scope":4399,"src":"2149:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4375,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:26"},"returnParameters":{"id":4382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4399,"src":"2183:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4378,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4399,"src":"2189:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4380,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:26"},"scope":5284,"src":"2122:190:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4416,"nodeType":"Block","src":"2449:37:26","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4409,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"2466:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4410,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"2470:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4413,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"2478:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:26","trueExpression":{"id":4412,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"2474:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4408,"id":4415,"nodeType":"Return","src":"2459:20:26"}]},"documentation":{"id":4400,"nodeType":"StructuredDocumentation","src":"2318:59:26","text":" @dev Returns the largest of two numbers."},"id":4417,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:26","nodeType":"FunctionDefinition","parameters":{"id":4405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4402,"mutability":"mutable","name":"a","nameLocation":"2403:1:26","nodeType":"VariableDeclaration","scope":4417,"src":"2395:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4401,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4404,"mutability":"mutable","name":"b","nameLocation":"2414:1:26","nodeType":"VariableDeclaration","scope":4417,"src":"2406:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4403,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:26"},"returnParameters":{"id":4408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4417,"src":"2440:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4406,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:26"},"scope":5284,"src":"2382:104:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4434,"nodeType":"Block","src":"2624:37:26","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4427,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"2641:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4428,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"2645:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4431,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"2653:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:26","trueExpression":{"id":4430,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"2649:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4426,"id":4433,"nodeType":"Return","src":"2634:20:26"}]},"documentation":{"id":4418,"nodeType":"StructuredDocumentation","src":"2492:60:26","text":" @dev Returns the smallest of two numbers."},"id":4435,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:26","nodeType":"FunctionDefinition","parameters":{"id":4423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"a","nameLocation":"2578:1:26","nodeType":"VariableDeclaration","scope":4435,"src":"2570:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4422,"mutability":"mutable","name":"b","nameLocation":"2589:1:26","nodeType":"VariableDeclaration","scope":4435,"src":"2581:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4421,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:26"},"returnParameters":{"id":4426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4435,"src":"2615:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4424,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:26"},"scope":5284,"src":"2557:104:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4457,"nodeType":"Block","src":"2845:82:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4445,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"2900:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4446,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"2904:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"2910:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4450,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"2914:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4444,"id":4456,"nodeType":"Return","src":"2892:28:26"}]},"documentation":{"id":4436,"nodeType":"StructuredDocumentation","src":"2667:102:26","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4458,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:26","nodeType":"FunctionDefinition","parameters":{"id":4441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4438,"mutability":"mutable","name":"a","nameLocation":"2799:1:26","nodeType":"VariableDeclaration","scope":4458,"src":"2791:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4440,"mutability":"mutable","name":"b","nameLocation":"2810:1:26","nodeType":"VariableDeclaration","scope":4458,"src":"2802:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4439,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:26"},"returnParameters":{"id":4444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4458,"src":"2836:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4442,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:26"},"scope":5284,"src":"2774:153:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4491,"nodeType":"Block","src":"3219:260:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4468,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"3233:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4476,"nodeType":"IfStatement","src":"3229:127:26","trueBody":{"id":4475,"nodeType":"Block","src":"3241:115:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4471,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"3340:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4472,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"3344:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4467,"id":4474,"nodeType":"Return","src":"3333:12:26"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4477,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"3444:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"3458:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4485,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"3467:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:26","trueExpression":{"hexValue":"30","id":4480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4467,"id":4490,"nodeType":"Return","src":"3437:35:26"}]},"documentation":{"id":4459,"nodeType":"StructuredDocumentation","src":"2933:210:26","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4492,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:26","nodeType":"FunctionDefinition","parameters":{"id":4464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4461,"mutability":"mutable","name":"a","nameLocation":"3173:1:26","nodeType":"VariableDeclaration","scope":4492,"src":"3165:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4460,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4463,"mutability":"mutable","name":"b","nameLocation":"3184:1:26","nodeType":"VariableDeclaration","scope":4492,"src":"3176:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4462,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:26"},"returnParameters":{"id":4467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4492,"src":"3210:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4465,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:26"},"scope":5284,"src":"3148:331:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4617,"nodeType":"Block","src":"3901:4018:26","statements":[{"id":4616,"nodeType":"UncheckedBlock","src":"3911:4002:26","statements":[{"assignments":[4505],"declarations":[{"constant":false,"id":4505,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:26","nodeType":"VariableDeclaration","scope":4616,"src":"4232:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4504,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4509,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4506,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"4248:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4507,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"4252:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:26"},{"assignments":[4511],"declarations":[{"constant":false,"id":4511,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:26","nodeType":"VariableDeclaration","scope":4616,"src":"4312:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4510,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4512,"nodeType":"VariableDeclarationStatement","src":"4312:13:26"},{"AST":{"nodeType":"YulBlock","src":"4392:122:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:26"},"nodeType":"YulFunctionCall","src":"4433:6:26"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:26"},"nodeType":"YulFunctionCall","src":"4420:20:26"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:26","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:26","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:26"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:26"},"nodeType":"YulFunctionCall","src":"4470:14:26"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:26"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:26"},"nodeType":"YulFunctionCall","src":"4486:13:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:26"},"nodeType":"YulFunctionCall","src":"4466:34:26"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4505,"isOffset":false,"isSlot":false,"src":"4478:5:26","valueSize":1},{"declaration":4505,"isOffset":false,"isSlot":false,"src":"4493:5:26","valueSize":1},{"declaration":4511,"isOffset":false,"isSlot":false,"src":"4457:5:26","valueSize":1},{"declaration":4495,"isOffset":false,"isSlot":false,"src":"4427:1:26","valueSize":1},{"declaration":4497,"isOffset":false,"isSlot":false,"src":"4430:1:26","valueSize":1}],"id":4513,"nodeType":"InlineAssembly","src":"4383:131:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4514,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"4595:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4522,"nodeType":"IfStatement","src":"4591:368:26","trueBody":{"id":4521,"nodeType":"Block","src":"4607:352:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4517,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"4925:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4518,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"4933:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4503,"id":4520,"nodeType":"Return","src":"4918:26:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4523,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"5065:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4524,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"5080:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4530,"nodeType":"IfStatement","src":"5061:88:26","trueBody":{"id":4529,"nodeType":"Block","src":"5087:62:26","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4526,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"5112:20:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4528,"nodeType":"RevertStatement","src":"5105:29:26"}]}},{"assignments":[4532],"declarations":[{"constant":false,"id":4532,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:26","nodeType":"VariableDeclaration","scope":4616,"src":"5404:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4531,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4533,"nodeType":"VariableDeclarationStatement","src":"5404:17:26"},{"AST":{"nodeType":"YulBlock","src":"5444:291:26","statements":[{"nodeType":"YulAssignment","src":"5513:38:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:26"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:26"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:26"},"nodeType":"YulFunctionCall","src":"5526:25:26"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:26"}]},{"nodeType":"YulAssignment","src":"5633:41:26","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:26"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:26"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:26"},"nodeType":"YulFunctionCall","src":"5653:20:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:26"},"nodeType":"YulFunctionCall","src":"5642:32:26"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:26"}]},{"nodeType":"YulAssignment","src":"5691:30:26","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:26"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:26"},"nodeType":"YulFunctionCall","src":"5700:21:26"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4499,"isOffset":false,"isSlot":false,"src":"5539:11:26","valueSize":1},{"declaration":4505,"isOffset":false,"isSlot":false,"src":"5667:5:26","valueSize":1},{"declaration":4505,"isOffset":false,"isSlot":false,"src":"5691:5:26","valueSize":1},{"declaration":4505,"isOffset":false,"isSlot":false,"src":"5704:5:26","valueSize":1},{"declaration":4511,"isOffset":false,"isSlot":false,"src":"5633:5:26","valueSize":1},{"declaration":4511,"isOffset":false,"isSlot":false,"src":"5646:5:26","valueSize":1},{"declaration":4532,"isOffset":false,"isSlot":false,"src":"5513:9:26","valueSize":1},{"declaration":4532,"isOffset":false,"isSlot":false,"src":"5656:9:26","valueSize":1},{"declaration":4532,"isOffset":false,"isSlot":false,"src":"5711:9:26","valueSize":1},{"declaration":4495,"isOffset":false,"isSlot":false,"src":"5533:1:26","valueSize":1},{"declaration":4497,"isOffset":false,"isSlot":false,"src":"5536:1:26","valueSize":1}],"id":4534,"nodeType":"InlineAssembly","src":"5435:300:26"},{"assignments":[4536],"declarations":[{"constant":false,"id":4536,"mutability":"mutable","name":"twos","nameLocation":"5947:4:26","nodeType":"VariableDeclaration","scope":4616,"src":"5939:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4535,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4543,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4537,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"5954:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4539,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"5973:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:26"},{"AST":{"nodeType":"YulBlock","src":"6008:362:26","statements":[{"nodeType":"YulAssignment","src":"6073:37:26","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:26"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:26"},"nodeType":"YulFunctionCall","src":"6088:22:26"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:26"}]},{"nodeType":"YulAssignment","src":"6177:25:26","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:26"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:26"},"nodeType":"YulFunctionCall","src":"6186:16:26"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:26"}]},{"nodeType":"YulAssignment","src":"6317:39:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:26","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:26"},"nodeType":"YulFunctionCall","src":"6333:12:26"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:26"},"nodeType":"YulFunctionCall","src":"6329:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:26"},"nodeType":"YulFunctionCall","src":"6325:31:26"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4499,"isOffset":false,"isSlot":false,"src":"6073:11:26","valueSize":1},{"declaration":4499,"isOffset":false,"isSlot":false,"src":"6092:11:26","valueSize":1},{"declaration":4505,"isOffset":false,"isSlot":false,"src":"6177:5:26","valueSize":1},{"declaration":4505,"isOffset":false,"isSlot":false,"src":"6190:5:26","valueSize":1},{"declaration":4536,"isOffset":false,"isSlot":false,"src":"6105:4:26","valueSize":1},{"declaration":4536,"isOffset":false,"isSlot":false,"src":"6197:4:26","valueSize":1},{"declaration":4536,"isOffset":false,"isSlot":false,"src":"6317:4:26","valueSize":1},{"declaration":4536,"isOffset":false,"isSlot":false,"src":"6340:4:26","valueSize":1},{"declaration":4536,"isOffset":false,"isSlot":false,"src":"6347:4:26","valueSize":1}],"id":4544,"nodeType":"InlineAssembly","src":"5999:371:26"},{"expression":{"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4545,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"6436:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4546,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"6445:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4547,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"6453:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4550,"nodeType":"ExpressionStatement","src":"6436:21:26"},{"assignments":[4552],"declarations":[{"constant":false,"id":4552,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:26","nodeType":"VariableDeclaration","scope":4616,"src":"6775:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4551,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4559,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4554,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"6798:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:26"},{"expression":{"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4560,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"7031:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4562,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"7046:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4563,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"7060:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4567,"nodeType":"ExpressionStatement","src":"7031:36:26"},{"expression":{"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4568,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"7100:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4570,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"7115:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4571,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"7129:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4575,"nodeType":"ExpressionStatement","src":"7100:36:26"},{"expression":{"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4576,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"7170:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4578,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"7185:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4579,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"7199:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4583,"nodeType":"ExpressionStatement","src":"7170:36:26"},{"expression":{"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4584,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"7240:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4586,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"7255:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4587,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"7269:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4591,"nodeType":"ExpressionStatement","src":"7240:36:26"},{"expression":{"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4592,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"7310:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4594,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"7325:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4595,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"7339:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4599,"nodeType":"ExpressionStatement","src":"7310:36:26"},{"expression":{"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4600,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"7381:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4602,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"7396:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4603,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"7410:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4607,"nodeType":"ExpressionStatement","src":"7381:36:26"},{"expression":{"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"7851:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4609,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"7860:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4610,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"7868:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4613,"nodeType":"ExpressionStatement","src":"7851:24:26"},{"expression":{"id":4614,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"7896:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4503,"id":4615,"nodeType":"Return","src":"7889:13:26"}]}]},"documentation":{"id":4493,"nodeType":"StructuredDocumentation","src":"3485:313:26","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4618,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:26","nodeType":"FunctionDefinition","parameters":{"id":4500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4495,"mutability":"mutable","name":"x","nameLocation":"3827:1:26","nodeType":"VariableDeclaration","scope":4618,"src":"3819:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4497,"mutability":"mutable","name":"y","nameLocation":"3838:1:26","nodeType":"VariableDeclaration","scope":4618,"src":"3830:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4499,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:26","nodeType":"VariableDeclaration","scope":4618,"src":"3841:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4498,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:26"},"returnParameters":{"id":4503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4502,"mutability":"mutable","name":"result","nameLocation":"3893:6:26","nodeType":"VariableDeclaration","scope":4618,"src":"3885:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4501,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:26"},"scope":5284,"src":"3803:4116:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4660,"nodeType":"Block","src":"8161:192:26","statements":[{"assignments":[4634],"declarations":[{"constant":false,"id":4634,"mutability":"mutable","name":"result","nameLocation":"8179:6:26","nodeType":"VariableDeclaration","scope":4660,"src":"8171:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4633,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4640,"initialValue":{"arguments":[{"id":4636,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"8195:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4637,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"8198:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4638,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"8201:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4635,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4618,4661],"referencedDeclaration":4618,"src":"8188:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4642,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"8244:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}],"id":4641,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"8227:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4241_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4645,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"8264:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4646,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"8267:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4647,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"8270:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4644,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:26","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4657,"nodeType":"IfStatement","src":"8223:101:26","trueBody":{"id":4656,"nodeType":"Block","src":"8288:36:26","statements":[{"expression":{"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"8302:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4655,"nodeType":"ExpressionStatement","src":"8302:11:26"}]}},{"expression":{"id":4658,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"8340:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4632,"id":4659,"nodeType":"Return","src":"8333:13:26"}]},"documentation":{"id":4619,"nodeType":"StructuredDocumentation","src":"7925:121:26","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4661,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:26","nodeType":"FunctionDefinition","parameters":{"id":4629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4621,"mutability":"mutable","name":"x","nameLocation":"8075:1:26","nodeType":"VariableDeclaration","scope":4661,"src":"8067:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4620,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4623,"mutability":"mutable","name":"y","nameLocation":"8086:1:26","nodeType":"VariableDeclaration","scope":4661,"src":"8078:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4622,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4625,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:26","nodeType":"VariableDeclaration","scope":4661,"src":"8089:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4624,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4628,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:26","nodeType":"VariableDeclaration","scope":4661,"src":"8110:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"},"typeName":{"id":4627,"nodeType":"UserDefinedTypeName","pathNode":{"id":4626,"name":"Rounding","nameLocations":["8110:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4241,"src":"8110:8:26"},"referencedDeclaration":4241,"src":"8110:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:26"},"returnParameters":{"id":4632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4661,"src":"8152:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4630,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:26"},"scope":5284,"src":"8051:302:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4772,"nodeType":"Block","src":"8644:1585:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4669,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"8658:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4675,"nodeType":"IfStatement","src":"8654:45:26","trueBody":{"id":4674,"nodeType":"Block","src":"8666:33:26","statements":[{"expression":{"hexValue":"30","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4668,"id":4673,"nodeType":"Return","src":"8680:8:26"}]}},{"assignments":[4677],"declarations":[{"constant":false,"id":4677,"mutability":"mutable","name":"result","nameLocation":"9386:6:26","nodeType":"VariableDeclaration","scope":4772,"src":"9378:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4676,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4686,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4680,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"9406:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4679,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4940,4975],"referencedDeclaration":4940,"src":"9401:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:26"},{"id":4771,"nodeType":"UncheckedBlock","src":"9815:408:26","statements":[{"expression":{"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4687,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"9839:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4688,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"9849:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4689,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"9858:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"9862:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4697,"nodeType":"ExpressionStatement","src":"9839:35:26"},{"expression":{"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4698,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"9888:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"9898:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4700,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"9907:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"9911:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4708,"nodeType":"ExpressionStatement","src":"9888:35:26"},{"expression":{"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"9937:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4710,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"9947:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4711,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"9956:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"9960:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4715,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4719,"nodeType":"ExpressionStatement","src":"9937:35:26"},{"expression":{"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4720,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"9986:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4721,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"9996:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4722,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"10005:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4723,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"10009:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4726,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4730,"nodeType":"ExpressionStatement","src":"9986:35:26"},{"expression":{"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4731,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"10035:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4732,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"10045:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4733,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"10054:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4734,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"10058:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4741,"nodeType":"ExpressionStatement","src":"10035:35:26"},{"expression":{"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4742,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"10084:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4743,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"10094:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4744,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"10103:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4745,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"10107:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4748,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4752,"nodeType":"ExpressionStatement","src":"10084:35:26"},{"expression":{"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4753,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"10133:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4754,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"10143:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4755,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"10152:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4756,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"10156:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4759,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4763,"nodeType":"ExpressionStatement","src":"10133:35:26"},{"expression":{"arguments":[{"id":4765,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"10193:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4766,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"10201:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4767,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"10205:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4764,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"10189:3:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4668,"id":4770,"nodeType":"Return","src":"10182:30:26"}]}]},"documentation":{"id":4662,"nodeType":"StructuredDocumentation","src":"8359:223:26","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4773,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:26","nodeType":"FunctionDefinition","parameters":{"id":4665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4664,"mutability":"mutable","name":"a","nameLocation":"8609:1:26","nodeType":"VariableDeclaration","scope":4773,"src":"8601:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4663,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:26"},"returnParameters":{"id":4668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4773,"src":"8635:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4666,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:26"},"scope":5284,"src":"8587:1642:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4807,"nodeType":"Block","src":"10405:164:26","statements":[{"id":4806,"nodeType":"UncheckedBlock","src":"10415:148:26","statements":[{"assignments":[4785],"declarations":[{"constant":false,"id":4785,"mutability":"mutable","name":"result","nameLocation":"10447:6:26","nodeType":"VariableDeclaration","scope":4806,"src":"10439:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4789,"initialValue":{"arguments":[{"id":4787,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4776,"src":"10461:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4786,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4773,4808],"referencedDeclaration":4773,"src":"10456:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4790,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"10484:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4792,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"10511:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}],"id":4791,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"10494:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4241_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"10524:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4795,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"10533:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4797,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4776,"src":"10542:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:26","trueExpression":{"hexValue":"31","id":4800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4783,"id":4805,"nodeType":"Return","src":"10477:75:26"}]}]},"documentation":{"id":4774,"nodeType":"StructuredDocumentation","src":"10235:89:26","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4808,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:26","nodeType":"FunctionDefinition","parameters":{"id":4780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4776,"mutability":"mutable","name":"a","nameLocation":"10351:1:26","nodeType":"VariableDeclaration","scope":4808,"src":"10343:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4775,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4779,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:26","nodeType":"VariableDeclaration","scope":4808,"src":"10354:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"},"typeName":{"id":4778,"nodeType":"UserDefinedTypeName","pathNode":{"id":4777,"name":"Rounding","nameLocations":["10354:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4241,"src":"10354:8:26"},"referencedDeclaration":4241,"src":"10354:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:26"},"returnParameters":{"id":4783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4808,"src":"10396:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4781,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:26"},"scope":5284,"src":"10329:240:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4939,"nodeType":"Block","src":"10760:922:26","statements":[{"assignments":[4817],"declarations":[{"constant":false,"id":4817,"mutability":"mutable","name":"result","nameLocation":"10778:6:26","nodeType":"VariableDeclaration","scope":4939,"src":"10770:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4816,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4819,"initialValue":{"hexValue":"30","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:26"},{"id":4936,"nodeType":"UncheckedBlock","src":"10798:855:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"10826:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4834,"nodeType":"IfStatement","src":"10822:99:26","trueBody":{"id":4833,"nodeType":"Block","src":"10844:77:26","statements":[{"expression":{"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"10862:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4828,"nodeType":"ExpressionStatement","src":"10862:13:26"},{"expression":{"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4829,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"10893:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4832,"nodeType":"ExpressionStatement","src":"10893:13:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"10938:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4849,"nodeType":"IfStatement","src":"10934:96:26","trueBody":{"id":4848,"nodeType":"Block","src":"10955:75:26","statements":[{"expression":{"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"10973:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4843,"nodeType":"ExpressionStatement","src":"10973:12:26"},{"expression":{"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4844,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"11003:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4847,"nodeType":"ExpressionStatement","src":"11003:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"11047:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4864,"nodeType":"IfStatement","src":"11043:96:26","trueBody":{"id":4863,"nodeType":"Block","src":"11064:75:26","statements":[{"expression":{"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"11082:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4858,"nodeType":"ExpressionStatement","src":"11082:12:26"},{"expression":{"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4859,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"11112:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4862,"nodeType":"ExpressionStatement","src":"11112:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"11156:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4879,"nodeType":"IfStatement","src":"11152:96:26","trueBody":{"id":4878,"nodeType":"Block","src":"11173:75:26","statements":[{"expression":{"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"11191:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4873,"nodeType":"ExpressionStatement","src":"11191:12:26"},{"expression":{"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4874,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"11221:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4877,"nodeType":"ExpressionStatement","src":"11221:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"11265:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4894,"nodeType":"IfStatement","src":"11261:93:26","trueBody":{"id":4893,"nodeType":"Block","src":"11281:73:26","statements":[{"expression":{"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"11299:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4888,"nodeType":"ExpressionStatement","src":"11299:11:26"},{"expression":{"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4889,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"11328:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4892,"nodeType":"ExpressionStatement","src":"11328:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"11371:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4909,"nodeType":"IfStatement","src":"11367:93:26","trueBody":{"id":4908,"nodeType":"Block","src":"11387:73:26","statements":[{"expression":{"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"11405:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4903,"nodeType":"ExpressionStatement","src":"11405:11:26"},{"expression":{"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4904,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"11434:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4907,"nodeType":"ExpressionStatement","src":"11434:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"11477:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4924,"nodeType":"IfStatement","src":"11473:93:26","trueBody":{"id":4923,"nodeType":"Block","src":"11493:73:26","statements":[{"expression":{"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"11511:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4918,"nodeType":"ExpressionStatement","src":"11511:11:26"},{"expression":{"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4919,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"11540:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4922,"nodeType":"ExpressionStatement","src":"11540:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"11583:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4935,"nodeType":"IfStatement","src":"11579:64:26","trueBody":{"id":4934,"nodeType":"Block","src":"11599:44:26","statements":[{"expression":{"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4930,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"11617:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4933,"nodeType":"ExpressionStatement","src":"11617:11:26"}]}}]},{"expression":{"id":4937,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"11669:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4815,"id":4938,"nodeType":"Return","src":"11662:13:26"}]},"documentation":{"id":4809,"nodeType":"StructuredDocumentation","src":"10575:119:26","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4940,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:26","nodeType":"FunctionDefinition","parameters":{"id":4812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4811,"mutability":"mutable","name":"value","nameLocation":"10721:5:26","nodeType":"VariableDeclaration","scope":4940,"src":"10713:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4810,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:26"},"returnParameters":{"id":4815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4940,"src":"10751:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4813,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:26"},"scope":5284,"src":"10699:983:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4974,"nodeType":"Block","src":"11915:168:26","statements":[{"id":4973,"nodeType":"UncheckedBlock","src":"11925:152:26","statements":[{"assignments":[4952],"declarations":[{"constant":false,"id":4952,"mutability":"mutable","name":"result","nameLocation":"11957:6:26","nodeType":"VariableDeclaration","scope":4973,"src":"11949:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4951,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4956,"initialValue":{"arguments":[{"id":4954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"11971:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4953,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4940,4975],"referencedDeclaration":4940,"src":"11966:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4957,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"11998:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4959,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"12025:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}],"id":4958,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"12008:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4241_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"12043:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"12052:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:26","trueExpression":{"hexValue":"31","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4950,"id":4972,"nodeType":"Return","src":"11991:75:26"}]}]},"documentation":{"id":4941,"nodeType":"StructuredDocumentation","src":"11688:142:26","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4975,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:26","nodeType":"FunctionDefinition","parameters":{"id":4947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4943,"mutability":"mutable","name":"value","nameLocation":"11857:5:26","nodeType":"VariableDeclaration","scope":4975,"src":"11849:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4942,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4946,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:26","nodeType":"VariableDeclaration","scope":4975,"src":"11864:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"},"typeName":{"id":4945,"nodeType":"UserDefinedTypeName","pathNode":{"id":4944,"name":"Rounding","nameLocations":["11864:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4241,"src":"11864:8:26"},"referencedDeclaration":4241,"src":"11864:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:26"},"returnParameters":{"id":4950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4975,"src":"11906:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4948,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:26"},"scope":5284,"src":"11835:248:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5103,"nodeType":"Block","src":"12276:854:26","statements":[{"assignments":[4984],"declarations":[{"constant":false,"id":4984,"mutability":"mutable","name":"result","nameLocation":"12294:6:26","nodeType":"VariableDeclaration","scope":5103,"src":"12286:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4983,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4986,"initialValue":{"hexValue":"30","id":4985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:26"},{"id":5100,"nodeType":"UncheckedBlock","src":"12314:787:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"12342:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5003,"nodeType":"IfStatement","src":"12338:103:26","trueBody":{"id":5002,"nodeType":"Block","src":"12361:80:26","statements":[{"expression":{"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"12379:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4997,"nodeType":"ExpressionStatement","src":"12379:17:26"},{"expression":{"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4998,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"12414:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5001,"nodeType":"ExpressionStatement","src":"12414:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"12458:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5020,"nodeType":"IfStatement","src":"12454:103:26","trueBody":{"id":5019,"nodeType":"Block","src":"12477:80:26","statements":[{"expression":{"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"12495:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5014,"nodeType":"ExpressionStatement","src":"12495:17:26"},{"expression":{"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5015,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"12530:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5018,"nodeType":"ExpressionStatement","src":"12530:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"12574:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5037,"nodeType":"IfStatement","src":"12570:103:26","trueBody":{"id":5036,"nodeType":"Block","src":"12593:80:26","statements":[{"expression":{"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"12611:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5031,"nodeType":"ExpressionStatement","src":"12611:17:26"},{"expression":{"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5032,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"12646:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5035,"nodeType":"ExpressionStatement","src":"12646:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"12690:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5054,"nodeType":"IfStatement","src":"12686:100:26","trueBody":{"id":5053,"nodeType":"Block","src":"12708:78:26","statements":[{"expression":{"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"12726:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5048,"nodeType":"ExpressionStatement","src":"12726:16:26"},{"expression":{"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"12760:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5052,"nodeType":"ExpressionStatement","src":"12760:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"12803:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5071,"nodeType":"IfStatement","src":"12799:100:26","trueBody":{"id":5070,"nodeType":"Block","src":"12821:78:26","statements":[{"expression":{"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"12839:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5065,"nodeType":"ExpressionStatement","src":"12839:16:26"},{"expression":{"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"12873:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5069,"nodeType":"ExpressionStatement","src":"12873:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"12916:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5088,"nodeType":"IfStatement","src":"12912:100:26","trueBody":{"id":5087,"nodeType":"Block","src":"12934:78:26","statements":[{"expression":{"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"12952:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5082,"nodeType":"ExpressionStatement","src":"12952:16:26"},{"expression":{"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5083,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"12986:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5086,"nodeType":"ExpressionStatement","src":"12986:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"13029:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5099,"nodeType":"IfStatement","src":"13025:66:26","trueBody":{"id":5098,"nodeType":"Block","src":"13047:44:26","statements":[{"expression":{"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"13065:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5097,"nodeType":"ExpressionStatement","src":"13065:11:26"}]}}]},{"expression":{"id":5101,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"13117:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4982,"id":5102,"nodeType":"Return","src":"13110:13:26"}]},"documentation":{"id":4976,"nodeType":"StructuredDocumentation","src":"12089:120:26","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5104,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:26","nodeType":"FunctionDefinition","parameters":{"id":4979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4978,"mutability":"mutable","name":"value","nameLocation":"12237:5:26","nodeType":"VariableDeclaration","scope":5104,"src":"12229:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4977,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:26"},"returnParameters":{"id":4982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5104,"src":"12267:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4980,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:26"},"scope":5284,"src":"12214:916:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5138,"nodeType":"Block","src":"13365:170:26","statements":[{"id":5137,"nodeType":"UncheckedBlock","src":"13375:154:26","statements":[{"assignments":[5116],"declarations":[{"constant":false,"id":5116,"mutability":"mutable","name":"result","nameLocation":"13407:6:26","nodeType":"VariableDeclaration","scope":5137,"src":"13399:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5115,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5120,"initialValue":{"arguments":[{"id":5118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"13422:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5117,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5104,5139],"referencedDeclaration":5104,"src":"13416:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5121,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"13449:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5123,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"13476:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}],"id":5122,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"13459:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4241_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5126,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"13495:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"13504:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:26","trueExpression":{"hexValue":"31","id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5114,"id":5136,"nodeType":"Return","src":"13442:76:26"}]}]},"documentation":{"id":5105,"nodeType":"StructuredDocumentation","src":"13136:143:26","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5139,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:26","nodeType":"FunctionDefinition","parameters":{"id":5111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5107,"mutability":"mutable","name":"value","nameLocation":"13307:5:26","nodeType":"VariableDeclaration","scope":5139,"src":"13299:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5106,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5110,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:26","nodeType":"VariableDeclaration","scope":5139,"src":"13314:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"},"typeName":{"id":5109,"nodeType":"UserDefinedTypeName","pathNode":{"id":5108,"name":"Rounding","nameLocations":["13314:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4241,"src":"13314:8:26"},"referencedDeclaration":4241,"src":"13314:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:26"},"returnParameters":{"id":5114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5139,"src":"13356:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5112,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:26"},"scope":5284,"src":"13284:251:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5225,"nodeType":"Block","src":"13855:600:26","statements":[{"assignments":[5148],"declarations":[{"constant":false,"id":5148,"mutability":"mutable","name":"result","nameLocation":"13873:6:26","nodeType":"VariableDeclaration","scope":5225,"src":"13865:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5147,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5150,"initialValue":{"hexValue":"30","id":5149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:26"},{"id":5222,"nodeType":"UncheckedBlock","src":"13893:533:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"13921:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5165,"nodeType":"IfStatement","src":"13917:98:26","trueBody":{"id":5164,"nodeType":"Block","src":"13939:76:26","statements":[{"expression":{"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"13957:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5159,"nodeType":"ExpressionStatement","src":"13957:13:26"},{"expression":{"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5160,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"13988:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5163,"nodeType":"ExpressionStatement","src":"13988:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"14032:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5180,"nodeType":"IfStatement","src":"14028:95:26","trueBody":{"id":5179,"nodeType":"Block","src":"14049:74:26","statements":[{"expression":{"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"14067:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5174,"nodeType":"ExpressionStatement","src":"14067:12:26"},{"expression":{"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5175,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"14097:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5178,"nodeType":"ExpressionStatement","src":"14097:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"14140:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5195,"nodeType":"IfStatement","src":"14136:95:26","trueBody":{"id":5194,"nodeType":"Block","src":"14157:74:26","statements":[{"expression":{"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"14175:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5189,"nodeType":"ExpressionStatement","src":"14175:12:26"},{"expression":{"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5190,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"14205:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5193,"nodeType":"ExpressionStatement","src":"14205:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"14248:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5210,"nodeType":"IfStatement","src":"14244:95:26","trueBody":{"id":5209,"nodeType":"Block","src":"14265:74:26","statements":[{"expression":{"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"14283:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5204,"nodeType":"ExpressionStatement","src":"14283:12:26"},{"expression":{"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5205,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"14313:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5208,"nodeType":"ExpressionStatement","src":"14313:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"14356:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5221,"nodeType":"IfStatement","src":"14352:64:26","trueBody":{"id":5220,"nodeType":"Block","src":"14372:44:26","statements":[{"expression":{"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5216,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"14390:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5219,"nodeType":"ExpressionStatement","src":"14390:11:26"}]}}]},{"expression":{"id":5223,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"14442:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5146,"id":5224,"nodeType":"Return","src":"14435:13:26"}]},"documentation":{"id":5140,"nodeType":"StructuredDocumentation","src":"13541:246:26","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5226,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:26","nodeType":"FunctionDefinition","parameters":{"id":5143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5142,"mutability":"mutable","name":"value","nameLocation":"13816:5:26","nodeType":"VariableDeclaration","scope":5226,"src":"13808:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5141,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:26"},"returnParameters":{"id":5146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5226,"src":"13846:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5144,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:26"},"scope":5284,"src":"13792:663:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5263,"nodeType":"Block","src":"14692:177:26","statements":[{"id":5262,"nodeType":"UncheckedBlock","src":"14702:161:26","statements":[{"assignments":[5238],"declarations":[{"constant":false,"id":5238,"mutability":"mutable","name":"result","nameLocation":"14734:6:26","nodeType":"VariableDeclaration","scope":5262,"src":"14726:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5237,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5242,"initialValue":{"arguments":[{"id":5240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"14750:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5239,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5226,5264],"referencedDeclaration":5226,"src":"14743:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5243,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"14777:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5245,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"14804:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}],"id":5244,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"14787:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4241_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"14823:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"14838:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:26","trueExpression":{"hexValue":"31","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5236,"id":5261,"nodeType":"Return","src":"14770:82:26"}]}]},"documentation":{"id":5227,"nodeType":"StructuredDocumentation","src":"14461:144:26","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5264,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:26","nodeType":"FunctionDefinition","parameters":{"id":5233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5229,"mutability":"mutable","name":"value","nameLocation":"14634:5:26","nodeType":"VariableDeclaration","scope":5264,"src":"14626:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5228,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5232,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:26","nodeType":"VariableDeclaration","scope":5264,"src":"14641:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"},"typeName":{"id":5231,"nodeType":"UserDefinedTypeName","pathNode":{"id":5230,"name":"Rounding","nameLocations":["14641:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4241,"src":"14641:8:26"},"referencedDeclaration":4241,"src":"14641:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:26"},"returnParameters":{"id":5236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5264,"src":"14683:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5234,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:26"},"scope":5284,"src":"14610:259:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5282,"nodeType":"Block","src":"15067:48:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5275,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"15090:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}],"id":5274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5273,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:26","typeDescriptions":{}}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5272,"id":5281,"nodeType":"Return","src":"15077:31:26"}]},"documentation":{"id":5265,"nodeType":"StructuredDocumentation","src":"14875:113:26","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5283,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:26","nodeType":"FunctionDefinition","parameters":{"id":5269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5268,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:26","nodeType":"VariableDeclaration","scope":5283,"src":"15019:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"},"typeName":{"id":5267,"nodeType":"UserDefinedTypeName","pathNode":{"id":5266,"name":"Rounding","nameLocations":["15019:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4241,"src":"15019:8:26"},"referencedDeclaration":4241,"src":"15019:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4241","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:26"},"returnParameters":{"id":5272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5283,"src":"15061:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5270,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:26"},"scope":5284,"src":"14993:122:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5285,"src":"203:14914:26","usedErrors":[4236],"usedEvents":[]}],"src":"103:15015:26"},"id":26},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7039]},"id":7040,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5287,"nodeType":"StructuredDocumentation","src":"218:545:27","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7039,"linearizedBaseContracts":[7039],"name":"SafeCast","nameLocation":"772:8:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5288,"nodeType":"StructuredDocumentation","src":"787:68:27","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5294,"name":"SafeCastOverflowedUintDowncast","nameLocation":"866:30:27","nodeType":"ErrorDefinition","parameters":{"id":5293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5290,"mutability":"mutable","name":"bits","nameLocation":"903:4:27","nodeType":"VariableDeclaration","scope":5294,"src":"897:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5289,"name":"uint8","nodeType":"ElementaryTypeName","src":"897:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5292,"mutability":"mutable","name":"value","nameLocation":"917:5:27","nodeType":"VariableDeclaration","scope":5294,"src":"909:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5291,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"896:27:27"},"src":"860:64:27"},{"documentation":{"id":5295,"nodeType":"StructuredDocumentation","src":"930:75:27","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5299,"name":"SafeCastOverflowedIntToUint","nameLocation":"1016:27:27","nodeType":"ErrorDefinition","parameters":{"id":5298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5297,"mutability":"mutable","name":"value","nameLocation":"1051:5:27","nodeType":"VariableDeclaration","scope":5299,"src":"1044:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5296,"name":"int256","nodeType":"ElementaryTypeName","src":"1044:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1043:14:27"},"src":"1010:48:27"},{"documentation":{"id":5300,"nodeType":"StructuredDocumentation","src":"1064:67:27","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5306,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1142:29:27","nodeType":"ErrorDefinition","parameters":{"id":5305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5302,"mutability":"mutable","name":"bits","nameLocation":"1178:4:27","nodeType":"VariableDeclaration","scope":5306,"src":"1172:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5301,"name":"uint8","nodeType":"ElementaryTypeName","src":"1172:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5304,"mutability":"mutable","name":"value","nameLocation":"1191:5:27","nodeType":"VariableDeclaration","scope":5306,"src":"1184:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5303,"name":"int256","nodeType":"ElementaryTypeName","src":"1184:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1171:26:27"},"src":"1136:62:27"},{"documentation":{"id":5307,"nodeType":"StructuredDocumentation","src":"1204:75:27","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5311,"name":"SafeCastOverflowedUintToInt","nameLocation":"1290:27:27","nodeType":"ErrorDefinition","parameters":{"id":5310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"value","nameLocation":"1326:5:27","nodeType":"VariableDeclaration","scope":5311,"src":"1318:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5308,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1317:15:27"},"src":"1284:49:27"},{"body":{"id":5338,"nodeType":"Block","src":"1690:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"1704:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1717:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5321,"name":"uint248","nodeType":"ElementaryTypeName","src":"1717:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5320,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:3:27","memberName":"max","nodeType":"MemberAccess","src":"1712:17:27","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1704:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5332,"nodeType":"IfStatement","src":"1700:105:27","trueBody":{"id":5331,"nodeType":"Block","src":"1731:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:3:27","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"1788:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5326,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"1752:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5330,"nodeType":"RevertStatement","src":"1745:49:27"}]}},{"expression":{"arguments":[{"id":5335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"1829:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1821:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5333,"name":"uint248","nodeType":"ElementaryTypeName","src":"1821:7:27","typeDescriptions":{}}},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1821:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5318,"id":5337,"nodeType":"Return","src":"1814:21:27"}]},"documentation":{"id":5312,"nodeType":"StructuredDocumentation","src":"1339:280:27","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5339,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1633:9:27","nodeType":"FunctionDefinition","parameters":{"id":5315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5314,"mutability":"mutable","name":"value","nameLocation":"1651:5:27","nodeType":"VariableDeclaration","scope":5339,"src":"1643:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5313,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1642:15:27"},"returnParameters":{"id":5318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5339,"src":"1681:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5316,"name":"uint248","nodeType":"ElementaryTypeName","src":"1681:7:27","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1680:9:27"},"scope":7039,"src":"1624:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5366,"nodeType":"Block","src":"2199:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5342,"src":"2213:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2226:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5349,"name":"uint240","nodeType":"ElementaryTypeName","src":"2226:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5348,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2221:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2221:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2235:3:27","memberName":"max","nodeType":"MemberAccess","src":"2221:17:27","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2213:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5360,"nodeType":"IfStatement","src":"2209:105:27","trueBody":{"id":5359,"nodeType":"Block","src":"2240:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:3:27","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5342,"src":"2297:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5354,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"2261:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5358,"nodeType":"RevertStatement","src":"2254:49:27"}]}},{"expression":{"arguments":[{"id":5363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5342,"src":"2338:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2330:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5361,"name":"uint240","nodeType":"ElementaryTypeName","src":"2330:7:27","typeDescriptions":{}}},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2330:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5346,"id":5365,"nodeType":"Return","src":"2323:21:27"}]},"documentation":{"id":5340,"nodeType":"StructuredDocumentation","src":"1848:280:27","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5367,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2142:9:27","nodeType":"FunctionDefinition","parameters":{"id":5343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5342,"mutability":"mutable","name":"value","nameLocation":"2160:5:27","nodeType":"VariableDeclaration","scope":5367,"src":"2152:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5341,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2151:15:27"},"returnParameters":{"id":5346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5367,"src":"2190:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5344,"name":"uint240","nodeType":"ElementaryTypeName","src":"2190:7:27","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2189:9:27"},"scope":7039,"src":"2133:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5394,"nodeType":"Block","src":"2708:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"2722:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2735:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5377,"name":"uint232","nodeType":"ElementaryTypeName","src":"2735:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5376,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2730:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2744:3:27","memberName":"max","nodeType":"MemberAccess","src":"2730:17:27","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2722:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5388,"nodeType":"IfStatement","src":"2718:105:27","trueBody":{"id":5387,"nodeType":"Block","src":"2749:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2801:3:27","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"2806:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5382,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"2770:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5386,"nodeType":"RevertStatement","src":"2763:49:27"}]}},{"expression":{"arguments":[{"id":5391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"2847:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2839:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5389,"name":"uint232","nodeType":"ElementaryTypeName","src":"2839:7:27","typeDescriptions":{}}},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2839:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5374,"id":5393,"nodeType":"Return","src":"2832:21:27"}]},"documentation":{"id":5368,"nodeType":"StructuredDocumentation","src":"2357:280:27","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5395,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2651:9:27","nodeType":"FunctionDefinition","parameters":{"id":5371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5370,"mutability":"mutable","name":"value","nameLocation":"2669:5:27","nodeType":"VariableDeclaration","scope":5395,"src":"2661:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5369,"name":"uint256","nodeType":"ElementaryTypeName","src":"2661:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2660:15:27"},"returnParameters":{"id":5374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5395,"src":"2699:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5372,"name":"uint232","nodeType":"ElementaryTypeName","src":"2699:7:27","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2698:9:27"},"scope":7039,"src":"2642:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5422,"nodeType":"Block","src":"3217:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"3231:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3244:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5405,"name":"uint224","nodeType":"ElementaryTypeName","src":"3244:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3239:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3253:3:27","memberName":"max","nodeType":"MemberAccess","src":"3239:17:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3231:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5416,"nodeType":"IfStatement","src":"3227:105:27","trueBody":{"id":5415,"nodeType":"Block","src":"3258:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3310:3:27","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"3315:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5410,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"3279:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3279:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5414,"nodeType":"RevertStatement","src":"3272:49:27"}]}},{"expression":{"arguments":[{"id":5419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"3356:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3348:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5417,"name":"uint224","nodeType":"ElementaryTypeName","src":"3348:7:27","typeDescriptions":{}}},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3348:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5402,"id":5421,"nodeType":"Return","src":"3341:21:27"}]},"documentation":{"id":5396,"nodeType":"StructuredDocumentation","src":"2866:280:27","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5423,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3160:9:27","nodeType":"FunctionDefinition","parameters":{"id":5399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5398,"mutability":"mutable","name":"value","nameLocation":"3178:5:27","nodeType":"VariableDeclaration","scope":5423,"src":"3170:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5397,"name":"uint256","nodeType":"ElementaryTypeName","src":"3170:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3169:15:27"},"returnParameters":{"id":5402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5423,"src":"3208:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5400,"name":"uint224","nodeType":"ElementaryTypeName","src":"3208:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3207:9:27"},"scope":7039,"src":"3151:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5450,"nodeType":"Block","src":"3726:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"3740:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3753:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5433,"name":"uint216","nodeType":"ElementaryTypeName","src":"3753:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5432,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3748:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3748:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3762:3:27","memberName":"max","nodeType":"MemberAccess","src":"3748:17:27","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3740:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5444,"nodeType":"IfStatement","src":"3736:105:27","trueBody":{"id":5443,"nodeType":"Block","src":"3767:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3819:3:27","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"3824:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5438,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"3788:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3788:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5442,"nodeType":"RevertStatement","src":"3781:49:27"}]}},{"expression":{"arguments":[{"id":5447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"3865:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3857:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5445,"name":"uint216","nodeType":"ElementaryTypeName","src":"3857:7:27","typeDescriptions":{}}},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3857:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5430,"id":5449,"nodeType":"Return","src":"3850:21:27"}]},"documentation":{"id":5424,"nodeType":"StructuredDocumentation","src":"3375:280:27","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5451,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3669:9:27","nodeType":"FunctionDefinition","parameters":{"id":5427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5426,"mutability":"mutable","name":"value","nameLocation":"3687:5:27","nodeType":"VariableDeclaration","scope":5451,"src":"3679:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5425,"name":"uint256","nodeType":"ElementaryTypeName","src":"3679:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3678:15:27"},"returnParameters":{"id":5430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5451,"src":"3717:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5428,"name":"uint216","nodeType":"ElementaryTypeName","src":"3717:7:27","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3716:9:27"},"scope":7039,"src":"3660:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5478,"nodeType":"Block","src":"4235:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"4249:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4262:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5461,"name":"uint208","nodeType":"ElementaryTypeName","src":"4262:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4257:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4271:3:27","memberName":"max","nodeType":"MemberAccess","src":"4257:17:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4249:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5472,"nodeType":"IfStatement","src":"4245:105:27","trueBody":{"id":5471,"nodeType":"Block","src":"4276:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4328:3:27","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"4333:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5466,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"4297:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5470,"nodeType":"RevertStatement","src":"4290:49:27"}]}},{"expression":{"arguments":[{"id":5475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"4374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4366:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5473,"name":"uint208","nodeType":"ElementaryTypeName","src":"4366:7:27","typeDescriptions":{}}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4366:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5458,"id":5477,"nodeType":"Return","src":"4359:21:27"}]},"documentation":{"id":5452,"nodeType":"StructuredDocumentation","src":"3884:280:27","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5479,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4178:9:27","nodeType":"FunctionDefinition","parameters":{"id":5455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5454,"mutability":"mutable","name":"value","nameLocation":"4196:5:27","nodeType":"VariableDeclaration","scope":5479,"src":"4188:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5453,"name":"uint256","nodeType":"ElementaryTypeName","src":"4188:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4187:15:27"},"returnParameters":{"id":5458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5479,"src":"4226:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5456,"name":"uint208","nodeType":"ElementaryTypeName","src":"4226:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4225:9:27"},"scope":7039,"src":"4169:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5506,"nodeType":"Block","src":"4744:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"4758:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4771:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5489,"name":"uint200","nodeType":"ElementaryTypeName","src":"4771:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5488,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4766:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4766:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4780:3:27","memberName":"max","nodeType":"MemberAccess","src":"4766:17:27","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4758:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5500,"nodeType":"IfStatement","src":"4754:105:27","trueBody":{"id":5499,"nodeType":"Block","src":"4785:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:3:27","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"4842:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5494,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"4806:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4806:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5498,"nodeType":"RevertStatement","src":"4799:49:27"}]}},{"expression":{"arguments":[{"id":5503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"4883:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4875:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5501,"name":"uint200","nodeType":"ElementaryTypeName","src":"4875:7:27","typeDescriptions":{}}},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4875:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5486,"id":5505,"nodeType":"Return","src":"4868:21:27"}]},"documentation":{"id":5480,"nodeType":"StructuredDocumentation","src":"4393:280:27","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5507,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4687:9:27","nodeType":"FunctionDefinition","parameters":{"id":5483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5482,"mutability":"mutable","name":"value","nameLocation":"4705:5:27","nodeType":"VariableDeclaration","scope":5507,"src":"4697:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5481,"name":"uint256","nodeType":"ElementaryTypeName","src":"4697:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4696:15:27"},"returnParameters":{"id":5486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5507,"src":"4735:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5484,"name":"uint200","nodeType":"ElementaryTypeName","src":"4735:7:27","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4734:9:27"},"scope":7039,"src":"4678:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5534,"nodeType":"Block","src":"5253:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"5267:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5280:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5517,"name":"uint192","nodeType":"ElementaryTypeName","src":"5280:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5516,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5275:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5289:3:27","memberName":"max","nodeType":"MemberAccess","src":"5275:17:27","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5267:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5528,"nodeType":"IfStatement","src":"5263:105:27","trueBody":{"id":5527,"nodeType":"Block","src":"5294:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5346:3:27","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"5351:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5522,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"5315:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5526,"nodeType":"RevertStatement","src":"5308:49:27"}]}},{"expression":{"arguments":[{"id":5531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"5392:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5384:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5529,"name":"uint192","nodeType":"ElementaryTypeName","src":"5384:7:27","typeDescriptions":{}}},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5384:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5514,"id":5533,"nodeType":"Return","src":"5377:21:27"}]},"documentation":{"id":5508,"nodeType":"StructuredDocumentation","src":"4902:280:27","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5535,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5196:9:27","nodeType":"FunctionDefinition","parameters":{"id":5511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5510,"mutability":"mutable","name":"value","nameLocation":"5214:5:27","nodeType":"VariableDeclaration","scope":5535,"src":"5206:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5509,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5205:15:27"},"returnParameters":{"id":5514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5535,"src":"5244:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5512,"name":"uint192","nodeType":"ElementaryTypeName","src":"5244:7:27","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5243:9:27"},"scope":7039,"src":"5187:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5562,"nodeType":"Block","src":"5762:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"5776:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5789:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5545,"name":"uint184","nodeType":"ElementaryTypeName","src":"5789:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5544,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5784:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5798:3:27","memberName":"max","nodeType":"MemberAccess","src":"5784:17:27","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5776:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5556,"nodeType":"IfStatement","src":"5772:105:27","trueBody":{"id":5555,"nodeType":"Block","src":"5803:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5855:3:27","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"5860:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5550,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"5824:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5824:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5554,"nodeType":"RevertStatement","src":"5817:49:27"}]}},{"expression":{"arguments":[{"id":5559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"5901:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5893:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5557,"name":"uint184","nodeType":"ElementaryTypeName","src":"5893:7:27","typeDescriptions":{}}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5893:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5542,"id":5561,"nodeType":"Return","src":"5886:21:27"}]},"documentation":{"id":5536,"nodeType":"StructuredDocumentation","src":"5411:280:27","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5563,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5705:9:27","nodeType":"FunctionDefinition","parameters":{"id":5539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5538,"mutability":"mutable","name":"value","nameLocation":"5723:5:27","nodeType":"VariableDeclaration","scope":5563,"src":"5715:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5537,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5714:15:27"},"returnParameters":{"id":5542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5563,"src":"5753:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5540,"name":"uint184","nodeType":"ElementaryTypeName","src":"5753:7:27","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5752:9:27"},"scope":7039,"src":"5696:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5590,"nodeType":"Block","src":"6271:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"6285:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6298:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5573,"name":"uint176","nodeType":"ElementaryTypeName","src":"6298:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5572,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6293:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6293:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6307:3:27","memberName":"max","nodeType":"MemberAccess","src":"6293:17:27","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6285:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5584,"nodeType":"IfStatement","src":"6281:105:27","trueBody":{"id":5583,"nodeType":"Block","src":"6312:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6364:3:27","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"6369:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5578,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"6333:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5582,"nodeType":"RevertStatement","src":"6326:49:27"}]}},{"expression":{"arguments":[{"id":5587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"6410:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6402:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5585,"name":"uint176","nodeType":"ElementaryTypeName","src":"6402:7:27","typeDescriptions":{}}},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6402:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5570,"id":5589,"nodeType":"Return","src":"6395:21:27"}]},"documentation":{"id":5564,"nodeType":"StructuredDocumentation","src":"5920:280:27","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5591,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6214:9:27","nodeType":"FunctionDefinition","parameters":{"id":5567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5566,"mutability":"mutable","name":"value","nameLocation":"6232:5:27","nodeType":"VariableDeclaration","scope":5591,"src":"6224:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5565,"name":"uint256","nodeType":"ElementaryTypeName","src":"6224:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6223:15:27"},"returnParameters":{"id":5570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5591,"src":"6262:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5568,"name":"uint176","nodeType":"ElementaryTypeName","src":"6262:7:27","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6261:9:27"},"scope":7039,"src":"6205:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5618,"nodeType":"Block","src":"6780:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"6794:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6807:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5601,"name":"uint168","nodeType":"ElementaryTypeName","src":"6807:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5600,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6802:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6802:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6816:3:27","memberName":"max","nodeType":"MemberAccess","src":"6802:17:27","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6794:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5612,"nodeType":"IfStatement","src":"6790:105:27","trueBody":{"id":5611,"nodeType":"Block","src":"6821:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6873:3:27","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"6878:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5606,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"6842:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6842:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5610,"nodeType":"RevertStatement","src":"6835:49:27"}]}},{"expression":{"arguments":[{"id":5615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"6919:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5613,"name":"uint168","nodeType":"ElementaryTypeName","src":"6911:7:27","typeDescriptions":{}}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5598,"id":5617,"nodeType":"Return","src":"6904:21:27"}]},"documentation":{"id":5592,"nodeType":"StructuredDocumentation","src":"6429:280:27","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5619,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6723:9:27","nodeType":"FunctionDefinition","parameters":{"id":5595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5594,"mutability":"mutable","name":"value","nameLocation":"6741:5:27","nodeType":"VariableDeclaration","scope":5619,"src":"6733:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5593,"name":"uint256","nodeType":"ElementaryTypeName","src":"6733:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6732:15:27"},"returnParameters":{"id":5598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5619,"src":"6771:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5596,"name":"uint168","nodeType":"ElementaryTypeName","src":"6771:7:27","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6770:9:27"},"scope":7039,"src":"6714:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5646,"nodeType":"Block","src":"7289:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"7303:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7316:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5629,"name":"uint160","nodeType":"ElementaryTypeName","src":"7316:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5628,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7311:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7311:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7325:3:27","memberName":"max","nodeType":"MemberAccess","src":"7311:17:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7303:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5640,"nodeType":"IfStatement","src":"7299:105:27","trueBody":{"id":5639,"nodeType":"Block","src":"7330:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7382:3:27","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"7387:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5634,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"7351:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7351:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5638,"nodeType":"RevertStatement","src":"7344:49:27"}]}},{"expression":{"arguments":[{"id":5643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"7428:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7420:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5641,"name":"uint160","nodeType":"ElementaryTypeName","src":"7420:7:27","typeDescriptions":{}}},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7420:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5626,"id":5645,"nodeType":"Return","src":"7413:21:27"}]},"documentation":{"id":5620,"nodeType":"StructuredDocumentation","src":"6938:280:27","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5647,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7232:9:27","nodeType":"FunctionDefinition","parameters":{"id":5623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5622,"mutability":"mutable","name":"value","nameLocation":"7250:5:27","nodeType":"VariableDeclaration","scope":5647,"src":"7242:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5621,"name":"uint256","nodeType":"ElementaryTypeName","src":"7242:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7241:15:27"},"returnParameters":{"id":5626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5647,"src":"7280:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5624,"name":"uint160","nodeType":"ElementaryTypeName","src":"7280:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7279:9:27"},"scope":7039,"src":"7223:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5674,"nodeType":"Block","src":"7798:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"7812:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7825:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5657,"name":"uint152","nodeType":"ElementaryTypeName","src":"7825:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5656,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7820:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7820:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7834:3:27","memberName":"max","nodeType":"MemberAccess","src":"7820:17:27","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7812:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5668,"nodeType":"IfStatement","src":"7808:105:27","trueBody":{"id":5667,"nodeType":"Block","src":"7839:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7891:3:27","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"7896:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5662,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"7860:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7860:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5666,"nodeType":"RevertStatement","src":"7853:49:27"}]}},{"expression":{"arguments":[{"id":5671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"7937:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7929:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5669,"name":"uint152","nodeType":"ElementaryTypeName","src":"7929:7:27","typeDescriptions":{}}},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7929:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5654,"id":5673,"nodeType":"Return","src":"7922:21:27"}]},"documentation":{"id":5648,"nodeType":"StructuredDocumentation","src":"7447:280:27","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5675,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7741:9:27","nodeType":"FunctionDefinition","parameters":{"id":5651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5650,"mutability":"mutable","name":"value","nameLocation":"7759:5:27","nodeType":"VariableDeclaration","scope":5675,"src":"7751:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5649,"name":"uint256","nodeType":"ElementaryTypeName","src":"7751:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7750:15:27"},"returnParameters":{"id":5654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5675,"src":"7789:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5652,"name":"uint152","nodeType":"ElementaryTypeName","src":"7789:7:27","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7788:9:27"},"scope":7039,"src":"7732:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5702,"nodeType":"Block","src":"8307:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"8321:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8334:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5685,"name":"uint144","nodeType":"ElementaryTypeName","src":"8334:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5684,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8329:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8343:3:27","memberName":"max","nodeType":"MemberAccess","src":"8329:17:27","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8321:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5696,"nodeType":"IfStatement","src":"8317:105:27","trueBody":{"id":5695,"nodeType":"Block","src":"8348:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8400:3:27","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"8405:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5690,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"8369:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8369:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5694,"nodeType":"RevertStatement","src":"8362:49:27"}]}},{"expression":{"arguments":[{"id":5699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"8446:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8438:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5697,"name":"uint144","nodeType":"ElementaryTypeName","src":"8438:7:27","typeDescriptions":{}}},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8438:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5682,"id":5701,"nodeType":"Return","src":"8431:21:27"}]},"documentation":{"id":5676,"nodeType":"StructuredDocumentation","src":"7956:280:27","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5703,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8250:9:27","nodeType":"FunctionDefinition","parameters":{"id":5679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5678,"mutability":"mutable","name":"value","nameLocation":"8268:5:27","nodeType":"VariableDeclaration","scope":5703,"src":"8260:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5677,"name":"uint256","nodeType":"ElementaryTypeName","src":"8260:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8259:15:27"},"returnParameters":{"id":5682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5703,"src":"8298:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5680,"name":"uint144","nodeType":"ElementaryTypeName","src":"8298:7:27","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8297:9:27"},"scope":7039,"src":"8241:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5730,"nodeType":"Block","src":"8816:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"8830:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8843:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5713,"name":"uint136","nodeType":"ElementaryTypeName","src":"8843:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5712,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8838:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8852:3:27","memberName":"max","nodeType":"MemberAccess","src":"8838:17:27","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8830:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5724,"nodeType":"IfStatement","src":"8826:105:27","trueBody":{"id":5723,"nodeType":"Block","src":"8857:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8909:3:27","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"8914:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5718,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"8878:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8878:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5722,"nodeType":"RevertStatement","src":"8871:49:27"}]}},{"expression":{"arguments":[{"id":5727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"8955:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8947:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5725,"name":"uint136","nodeType":"ElementaryTypeName","src":"8947:7:27","typeDescriptions":{}}},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8947:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5710,"id":5729,"nodeType":"Return","src":"8940:21:27"}]},"documentation":{"id":5704,"nodeType":"StructuredDocumentation","src":"8465:280:27","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5731,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8759:9:27","nodeType":"FunctionDefinition","parameters":{"id":5707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5706,"mutability":"mutable","name":"value","nameLocation":"8777:5:27","nodeType":"VariableDeclaration","scope":5731,"src":"8769:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5705,"name":"uint256","nodeType":"ElementaryTypeName","src":"8769:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8768:15:27"},"returnParameters":{"id":5710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5731,"src":"8807:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5708,"name":"uint136","nodeType":"ElementaryTypeName","src":"8807:7:27","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8806:9:27"},"scope":7039,"src":"8750:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5758,"nodeType":"Block","src":"9325:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"9339:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9352:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5741,"name":"uint128","nodeType":"ElementaryTypeName","src":"9352:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5740,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9347:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9347:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9361:3:27","memberName":"max","nodeType":"MemberAccess","src":"9347:17:27","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9339:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5752,"nodeType":"IfStatement","src":"9335:105:27","trueBody":{"id":5751,"nodeType":"Block","src":"9366:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9418:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"9423:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5746,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"9387:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9387:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5750,"nodeType":"RevertStatement","src":"9380:49:27"}]}},{"expression":{"arguments":[{"id":5755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"9464:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5753,"name":"uint128","nodeType":"ElementaryTypeName","src":"9456:7:27","typeDescriptions":{}}},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5738,"id":5757,"nodeType":"Return","src":"9449:21:27"}]},"documentation":{"id":5732,"nodeType":"StructuredDocumentation","src":"8974:280:27","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5759,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9268:9:27","nodeType":"FunctionDefinition","parameters":{"id":5735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5734,"mutability":"mutable","name":"value","nameLocation":"9286:5:27","nodeType":"VariableDeclaration","scope":5759,"src":"9278:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5733,"name":"uint256","nodeType":"ElementaryTypeName","src":"9278:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9277:15:27"},"returnParameters":{"id":5738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5759,"src":"9316:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5736,"name":"uint128","nodeType":"ElementaryTypeName","src":"9316:7:27","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9315:9:27"},"scope":7039,"src":"9259:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5786,"nodeType":"Block","src":"9834:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"9848:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9861:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5769,"name":"uint120","nodeType":"ElementaryTypeName","src":"9861:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9856:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9856:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9870:3:27","memberName":"max","nodeType":"MemberAccess","src":"9856:17:27","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9848:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5780,"nodeType":"IfStatement","src":"9844:105:27","trueBody":{"id":5779,"nodeType":"Block","src":"9875:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9927:3:27","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"9932:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5774,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"9896:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9896:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5778,"nodeType":"RevertStatement","src":"9889:49:27"}]}},{"expression":{"arguments":[{"id":5783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"9973:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9965:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5781,"name":"uint120","nodeType":"ElementaryTypeName","src":"9965:7:27","typeDescriptions":{}}},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9965:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5766,"id":5785,"nodeType":"Return","src":"9958:21:27"}]},"documentation":{"id":5760,"nodeType":"StructuredDocumentation","src":"9483:280:27","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5787,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9777:9:27","nodeType":"FunctionDefinition","parameters":{"id":5763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5762,"mutability":"mutable","name":"value","nameLocation":"9795:5:27","nodeType":"VariableDeclaration","scope":5787,"src":"9787:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5761,"name":"uint256","nodeType":"ElementaryTypeName","src":"9787:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9786:15:27"},"returnParameters":{"id":5766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5787,"src":"9825:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5764,"name":"uint120","nodeType":"ElementaryTypeName","src":"9825:7:27","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9824:9:27"},"scope":7039,"src":"9768:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5814,"nodeType":"Block","src":"10343:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"10357:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10370:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5797,"name":"uint112","nodeType":"ElementaryTypeName","src":"10370:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5796,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10365:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10365:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10379:3:27","memberName":"max","nodeType":"MemberAccess","src":"10365:17:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10357:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5808,"nodeType":"IfStatement","src":"10353:105:27","trueBody":{"id":5807,"nodeType":"Block","src":"10384:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10436:3:27","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"10441:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5802,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"10405:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10405:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5806,"nodeType":"RevertStatement","src":"10398:49:27"}]}},{"expression":{"arguments":[{"id":5811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"10482:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5809,"name":"uint112","nodeType":"ElementaryTypeName","src":"10474:7:27","typeDescriptions":{}}},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10474:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5794,"id":5813,"nodeType":"Return","src":"10467:21:27"}]},"documentation":{"id":5788,"nodeType":"StructuredDocumentation","src":"9992:280:27","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5815,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10286:9:27","nodeType":"FunctionDefinition","parameters":{"id":5791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5790,"mutability":"mutable","name":"value","nameLocation":"10304:5:27","nodeType":"VariableDeclaration","scope":5815,"src":"10296:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5789,"name":"uint256","nodeType":"ElementaryTypeName","src":"10296:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10295:15:27"},"returnParameters":{"id":5794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5815,"src":"10334:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5792,"name":"uint112","nodeType":"ElementaryTypeName","src":"10334:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10333:9:27"},"scope":7039,"src":"10277:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5842,"nodeType":"Block","src":"10852:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"10866:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10879:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5825,"name":"uint104","nodeType":"ElementaryTypeName","src":"10879:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5824,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10874:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10874:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10888:3:27","memberName":"max","nodeType":"MemberAccess","src":"10874:17:27","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10866:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5836,"nodeType":"IfStatement","src":"10862:105:27","trueBody":{"id":5835,"nodeType":"Block","src":"10893:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10945:3:27","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"10950:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5830,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"10914:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10914:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5834,"nodeType":"RevertStatement","src":"10907:49:27"}]}},{"expression":{"arguments":[{"id":5839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"10991:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10983:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5837,"name":"uint104","nodeType":"ElementaryTypeName","src":"10983:7:27","typeDescriptions":{}}},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10983:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5822,"id":5841,"nodeType":"Return","src":"10976:21:27"}]},"documentation":{"id":5816,"nodeType":"StructuredDocumentation","src":"10501:280:27","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5843,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10795:9:27","nodeType":"FunctionDefinition","parameters":{"id":5819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5818,"mutability":"mutable","name":"value","nameLocation":"10813:5:27","nodeType":"VariableDeclaration","scope":5843,"src":"10805:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5817,"name":"uint256","nodeType":"ElementaryTypeName","src":"10805:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10804:15:27"},"returnParameters":{"id":5822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5843,"src":"10843:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5820,"name":"uint104","nodeType":"ElementaryTypeName","src":"10843:7:27","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10842:9:27"},"scope":7039,"src":"10786:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5870,"nodeType":"Block","src":"11355:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"11369:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11382:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5853,"name":"uint96","nodeType":"ElementaryTypeName","src":"11382:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5852,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11377:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11377:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11390:3:27","memberName":"max","nodeType":"MemberAccess","src":"11377:16:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11369:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5864,"nodeType":"IfStatement","src":"11365:103:27","trueBody":{"id":5863,"nodeType":"Block","src":"11395:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11447:2:27","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"11451:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5858,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"11416:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11416:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5862,"nodeType":"RevertStatement","src":"11409:48:27"}]}},{"expression":{"arguments":[{"id":5867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"11491:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11484:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5865,"name":"uint96","nodeType":"ElementaryTypeName","src":"11484:6:27","typeDescriptions":{}}},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11484:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5850,"id":5869,"nodeType":"Return","src":"11477:20:27"}]},"documentation":{"id":5844,"nodeType":"StructuredDocumentation","src":"11010:276:27","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5871,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11300:8:27","nodeType":"FunctionDefinition","parameters":{"id":5847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5846,"mutability":"mutable","name":"value","nameLocation":"11317:5:27","nodeType":"VariableDeclaration","scope":5871,"src":"11309:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5845,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:15:27"},"returnParameters":{"id":5850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5871,"src":"11347:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5848,"name":"uint96","nodeType":"ElementaryTypeName","src":"11347:6:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11346:8:27"},"scope":7039,"src":"11291:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5898,"nodeType":"Block","src":"11855:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"11869:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11882:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5881,"name":"uint88","nodeType":"ElementaryTypeName","src":"11882:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5880,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11877:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11877:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11890:3:27","memberName":"max","nodeType":"MemberAccess","src":"11877:16:27","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11869:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5892,"nodeType":"IfStatement","src":"11865:103:27","trueBody":{"id":5891,"nodeType":"Block","src":"11895:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11947:2:27","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"11951:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5886,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"11916:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11916:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5890,"nodeType":"RevertStatement","src":"11909:48:27"}]}},{"expression":{"arguments":[{"id":5895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"11991:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11984:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5893,"name":"uint88","nodeType":"ElementaryTypeName","src":"11984:6:27","typeDescriptions":{}}},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11984:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5878,"id":5897,"nodeType":"Return","src":"11977:20:27"}]},"documentation":{"id":5872,"nodeType":"StructuredDocumentation","src":"11510:276:27","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5899,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11800:8:27","nodeType":"FunctionDefinition","parameters":{"id":5875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5874,"mutability":"mutable","name":"value","nameLocation":"11817:5:27","nodeType":"VariableDeclaration","scope":5899,"src":"11809:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5873,"name":"uint256","nodeType":"ElementaryTypeName","src":"11809:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11808:15:27"},"returnParameters":{"id":5878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5899,"src":"11847:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5876,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:27","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11846:8:27"},"scope":7039,"src":"11791:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5926,"nodeType":"Block","src":"12355:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"12369:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12382:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5909,"name":"uint80","nodeType":"ElementaryTypeName","src":"12382:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5908,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12377:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12377:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12390:3:27","memberName":"max","nodeType":"MemberAccess","src":"12377:16:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12369:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5920,"nodeType":"IfStatement","src":"12365:103:27","trueBody":{"id":5919,"nodeType":"Block","src":"12395:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12447:2:27","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"12451:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5914,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"12416:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12416:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5918,"nodeType":"RevertStatement","src":"12409:48:27"}]}},{"expression":{"arguments":[{"id":5923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"12491:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12484:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5921,"name":"uint80","nodeType":"ElementaryTypeName","src":"12484:6:27","typeDescriptions":{}}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12484:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5906,"id":5925,"nodeType":"Return","src":"12477:20:27"}]},"documentation":{"id":5900,"nodeType":"StructuredDocumentation","src":"12010:276:27","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5927,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12300:8:27","nodeType":"FunctionDefinition","parameters":{"id":5903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5902,"mutability":"mutable","name":"value","nameLocation":"12317:5:27","nodeType":"VariableDeclaration","scope":5927,"src":"12309:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5901,"name":"uint256","nodeType":"ElementaryTypeName","src":"12309:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12308:15:27"},"returnParameters":{"id":5906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5927,"src":"12347:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5904,"name":"uint80","nodeType":"ElementaryTypeName","src":"12347:6:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12346:8:27"},"scope":7039,"src":"12291:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5954,"nodeType":"Block","src":"12855:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"12869:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12882:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5937,"name":"uint72","nodeType":"ElementaryTypeName","src":"12882:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5936,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12877:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12877:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12890:3:27","memberName":"max","nodeType":"MemberAccess","src":"12877:16:27","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12869:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5948,"nodeType":"IfStatement","src":"12865:103:27","trueBody":{"id":5947,"nodeType":"Block","src":"12895:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12947:2:27","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"12951:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5942,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"12916:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12916:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5946,"nodeType":"RevertStatement","src":"12909:48:27"}]}},{"expression":{"arguments":[{"id":5951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"12991:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12984:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5949,"name":"uint72","nodeType":"ElementaryTypeName","src":"12984:6:27","typeDescriptions":{}}},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12984:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5934,"id":5953,"nodeType":"Return","src":"12977:20:27"}]},"documentation":{"id":5928,"nodeType":"StructuredDocumentation","src":"12510:276:27","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5955,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12800:8:27","nodeType":"FunctionDefinition","parameters":{"id":5931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5930,"mutability":"mutable","name":"value","nameLocation":"12817:5:27","nodeType":"VariableDeclaration","scope":5955,"src":"12809:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5929,"name":"uint256","nodeType":"ElementaryTypeName","src":"12809:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12808:15:27"},"returnParameters":{"id":5934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5955,"src":"12847:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5932,"name":"uint72","nodeType":"ElementaryTypeName","src":"12847:6:27","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12846:8:27"},"scope":7039,"src":"12791:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5982,"nodeType":"Block","src":"13355:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"13369:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13382:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5965,"name":"uint64","nodeType":"ElementaryTypeName","src":"13382:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5964,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13377:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13377:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13390:3:27","memberName":"max","nodeType":"MemberAccess","src":"13377:16:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13369:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5976,"nodeType":"IfStatement","src":"13365:103:27","trueBody":{"id":5975,"nodeType":"Block","src":"13395:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13447:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"13451:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5970,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"13416:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5974,"nodeType":"RevertStatement","src":"13409:48:27"}]}},{"expression":{"arguments":[{"id":5979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"13491:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13484:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5977,"name":"uint64","nodeType":"ElementaryTypeName","src":"13484:6:27","typeDescriptions":{}}},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13484:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5962,"id":5981,"nodeType":"Return","src":"13477:20:27"}]},"documentation":{"id":5956,"nodeType":"StructuredDocumentation","src":"13010:276:27","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5983,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13300:8:27","nodeType":"FunctionDefinition","parameters":{"id":5959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5958,"mutability":"mutable","name":"value","nameLocation":"13317:5:27","nodeType":"VariableDeclaration","scope":5983,"src":"13309:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5957,"name":"uint256","nodeType":"ElementaryTypeName","src":"13309:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13308:15:27"},"returnParameters":{"id":5962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5983,"src":"13347:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5960,"name":"uint64","nodeType":"ElementaryTypeName","src":"13347:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13346:8:27"},"scope":7039,"src":"13291:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6010,"nodeType":"Block","src":"13855:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"13869:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13882:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5993,"name":"uint56","nodeType":"ElementaryTypeName","src":"13882:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5992,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13877:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13877:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13890:3:27","memberName":"max","nodeType":"MemberAccess","src":"13877:16:27","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13869:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6004,"nodeType":"IfStatement","src":"13865:103:27","trueBody":{"id":6003,"nodeType":"Block","src":"13895:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13947:2:27","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"13951:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5998,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"13916:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13916:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6002,"nodeType":"RevertStatement","src":"13909:48:27"}]}},{"expression":{"arguments":[{"id":6007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"13991:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13984:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6005,"name":"uint56","nodeType":"ElementaryTypeName","src":"13984:6:27","typeDescriptions":{}}},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13984:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5990,"id":6009,"nodeType":"Return","src":"13977:20:27"}]},"documentation":{"id":5984,"nodeType":"StructuredDocumentation","src":"13510:276:27","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6011,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13800:8:27","nodeType":"FunctionDefinition","parameters":{"id":5987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5986,"mutability":"mutable","name":"value","nameLocation":"13817:5:27","nodeType":"VariableDeclaration","scope":6011,"src":"13809:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5985,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13808:15:27"},"returnParameters":{"id":5990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6011,"src":"13847:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5988,"name":"uint56","nodeType":"ElementaryTypeName","src":"13847:6:27","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13846:8:27"},"scope":7039,"src":"13791:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6038,"nodeType":"Block","src":"14355:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"14369:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14382:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6021,"name":"uint48","nodeType":"ElementaryTypeName","src":"14382:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6020,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14377:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14377:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14390:3:27","memberName":"max","nodeType":"MemberAccess","src":"14377:16:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14369:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6032,"nodeType":"IfStatement","src":"14365:103:27","trueBody":{"id":6031,"nodeType":"Block","src":"14395:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14447:2:27","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"14451:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6026,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"14416:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14416:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6030,"nodeType":"RevertStatement","src":"14409:48:27"}]}},{"expression":{"arguments":[{"id":6035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"14491:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14484:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6033,"name":"uint48","nodeType":"ElementaryTypeName","src":"14484:6:27","typeDescriptions":{}}},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14484:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6018,"id":6037,"nodeType":"Return","src":"14477:20:27"}]},"documentation":{"id":6012,"nodeType":"StructuredDocumentation","src":"14010:276:27","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6039,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14300:8:27","nodeType":"FunctionDefinition","parameters":{"id":6015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6014,"mutability":"mutable","name":"value","nameLocation":"14317:5:27","nodeType":"VariableDeclaration","scope":6039,"src":"14309:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6013,"name":"uint256","nodeType":"ElementaryTypeName","src":"14309:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14308:15:27"},"returnParameters":{"id":6018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6039,"src":"14347:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6016,"name":"uint48","nodeType":"ElementaryTypeName","src":"14347:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14346:8:27"},"scope":7039,"src":"14291:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6066,"nodeType":"Block","src":"14855:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"14869:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14882:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6049,"name":"uint40","nodeType":"ElementaryTypeName","src":"14882:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6048,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14877:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14877:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14890:3:27","memberName":"max","nodeType":"MemberAccess","src":"14877:16:27","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14869:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6060,"nodeType":"IfStatement","src":"14865:103:27","trueBody":{"id":6059,"nodeType":"Block","src":"14895:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14947:2:27","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"14951:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6054,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"14916:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14916:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6058,"nodeType":"RevertStatement","src":"14909:48:27"}]}},{"expression":{"arguments":[{"id":6063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"14991:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14984:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6061,"name":"uint40","nodeType":"ElementaryTypeName","src":"14984:6:27","typeDescriptions":{}}},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14984:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6046,"id":6065,"nodeType":"Return","src":"14977:20:27"}]},"documentation":{"id":6040,"nodeType":"StructuredDocumentation","src":"14510:276:27","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6067,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14800:8:27","nodeType":"FunctionDefinition","parameters":{"id":6043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6042,"mutability":"mutable","name":"value","nameLocation":"14817:5:27","nodeType":"VariableDeclaration","scope":6067,"src":"14809:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6041,"name":"uint256","nodeType":"ElementaryTypeName","src":"14809:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14808:15:27"},"returnParameters":{"id":6046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6067,"src":"14847:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6044,"name":"uint40","nodeType":"ElementaryTypeName","src":"14847:6:27","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14846:8:27"},"scope":7039,"src":"14791:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6094,"nodeType":"Block","src":"15355:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"15369:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15382:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6077,"name":"uint32","nodeType":"ElementaryTypeName","src":"15382:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6076,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15377:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15377:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15390:3:27","memberName":"max","nodeType":"MemberAccess","src":"15377:16:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15369:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6088,"nodeType":"IfStatement","src":"15365:103:27","trueBody":{"id":6087,"nodeType":"Block","src":"15395:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15447:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"15451:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6082,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"15416:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15416:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6086,"nodeType":"RevertStatement","src":"15409:48:27"}]}},{"expression":{"arguments":[{"id":6091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"15491:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15484:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6089,"name":"uint32","nodeType":"ElementaryTypeName","src":"15484:6:27","typeDescriptions":{}}},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15484:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6074,"id":6093,"nodeType":"Return","src":"15477:20:27"}]},"documentation":{"id":6068,"nodeType":"StructuredDocumentation","src":"15010:276:27","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6095,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15300:8:27","nodeType":"FunctionDefinition","parameters":{"id":6071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6070,"mutability":"mutable","name":"value","nameLocation":"15317:5:27","nodeType":"VariableDeclaration","scope":6095,"src":"15309:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6069,"name":"uint256","nodeType":"ElementaryTypeName","src":"15309:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15308:15:27"},"returnParameters":{"id":6074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6095,"src":"15347:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6072,"name":"uint32","nodeType":"ElementaryTypeName","src":"15347:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15346:8:27"},"scope":7039,"src":"15291:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6122,"nodeType":"Block","src":"15855:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"15869:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15882:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6105,"name":"uint24","nodeType":"ElementaryTypeName","src":"15882:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6104,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15877:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15877:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15890:3:27","memberName":"max","nodeType":"MemberAccess","src":"15877:16:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15869:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6116,"nodeType":"IfStatement","src":"15865:103:27","trueBody":{"id":6115,"nodeType":"Block","src":"15895:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15947:2:27","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"15951:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6110,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"15916:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15916:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6114,"nodeType":"RevertStatement","src":"15909:48:27"}]}},{"expression":{"arguments":[{"id":6119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"15991:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15984:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6117,"name":"uint24","nodeType":"ElementaryTypeName","src":"15984:6:27","typeDescriptions":{}}},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15984:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6102,"id":6121,"nodeType":"Return","src":"15977:20:27"}]},"documentation":{"id":6096,"nodeType":"StructuredDocumentation","src":"15510:276:27","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6123,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15800:8:27","nodeType":"FunctionDefinition","parameters":{"id":6099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6098,"mutability":"mutable","name":"value","nameLocation":"15817:5:27","nodeType":"VariableDeclaration","scope":6123,"src":"15809:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6097,"name":"uint256","nodeType":"ElementaryTypeName","src":"15809:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15808:15:27"},"returnParameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6123,"src":"15847:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6100,"name":"uint24","nodeType":"ElementaryTypeName","src":"15847:6:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15846:8:27"},"scope":7039,"src":"15791:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6150,"nodeType":"Block","src":"16355:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"16369:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16382:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6133,"name":"uint16","nodeType":"ElementaryTypeName","src":"16382:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6132,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16377:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16377:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16390:3:27","memberName":"max","nodeType":"MemberAccess","src":"16377:16:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16369:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6144,"nodeType":"IfStatement","src":"16365:103:27","trueBody":{"id":6143,"nodeType":"Block","src":"16395:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16447:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"16451:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6138,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"16416:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16416:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6142,"nodeType":"RevertStatement","src":"16409:48:27"}]}},{"expression":{"arguments":[{"id":6147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"16491:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16484:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6145,"name":"uint16","nodeType":"ElementaryTypeName","src":"16484:6:27","typeDescriptions":{}}},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16484:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6130,"id":6149,"nodeType":"Return","src":"16477:20:27"}]},"documentation":{"id":6124,"nodeType":"StructuredDocumentation","src":"16010:276:27","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6151,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16300:8:27","nodeType":"FunctionDefinition","parameters":{"id":6127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6126,"mutability":"mutable","name":"value","nameLocation":"16317:5:27","nodeType":"VariableDeclaration","scope":6151,"src":"16309:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6125,"name":"uint256","nodeType":"ElementaryTypeName","src":"16309:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16308:15:27"},"returnParameters":{"id":6130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6151,"src":"16347:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6128,"name":"uint16","nodeType":"ElementaryTypeName","src":"16347:6:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16346:8:27"},"scope":7039,"src":"16291:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6178,"nodeType":"Block","src":"16849:146:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"16863:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16876:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6161,"name":"uint8","nodeType":"ElementaryTypeName","src":"16876:5:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6160,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16871:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16871:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16883:3:27","memberName":"max","nodeType":"MemberAccess","src":"16871:15:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16863:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6172,"nodeType":"IfStatement","src":"16859:101:27","trueBody":{"id":6171,"nodeType":"Block","src":"16888:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16940:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"16943:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6166,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"16909:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16909:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6170,"nodeType":"RevertStatement","src":"16902:47:27"}]}},{"expression":{"arguments":[{"id":6175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"16982:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16976:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6173,"name":"uint8","nodeType":"ElementaryTypeName","src":"16976:5:27","typeDescriptions":{}}},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16976:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6158,"id":6177,"nodeType":"Return","src":"16969:19:27"}]},"documentation":{"id":6152,"nodeType":"StructuredDocumentation","src":"16510:272:27","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6179,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16796:7:27","nodeType":"FunctionDefinition","parameters":{"id":6155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6154,"mutability":"mutable","name":"value","nameLocation":"16812:5:27","nodeType":"VariableDeclaration","scope":6179,"src":"16804:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6153,"name":"uint256","nodeType":"ElementaryTypeName","src":"16804:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16803:15:27"},"returnParameters":{"id":6158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6179,"src":"16842:5:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6156,"name":"uint8","nodeType":"ElementaryTypeName","src":"16842:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16841:7:27"},"scope":7039,"src":"16787:208:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6201,"nodeType":"Block","src":"17231:128:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"17245:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17253:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17245:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6195,"nodeType":"IfStatement","src":"17241:81:27","trueBody":{"id":6194,"nodeType":"Block","src":"17256:66:27","statements":[{"errorCall":{"arguments":[{"id":6191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"17305:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6190,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"17277:27:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17277:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6193,"nodeType":"RevertStatement","src":"17270:41:27"}]}},{"expression":{"arguments":[{"id":6198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"17346:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17338:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6196,"name":"uint256","nodeType":"ElementaryTypeName","src":"17338:7:27","typeDescriptions":{}}},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17338:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6186,"id":6200,"nodeType":"Return","src":"17331:21:27"}]},"documentation":{"id":6180,"nodeType":"StructuredDocumentation","src":"17001:160:27","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6202,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17175:9:27","nodeType":"FunctionDefinition","parameters":{"id":6183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6182,"mutability":"mutable","name":"value","nameLocation":"17192:5:27","nodeType":"VariableDeclaration","scope":6202,"src":"17185:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6181,"name":"int256","nodeType":"ElementaryTypeName","src":"17185:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17184:14:27"},"returnParameters":{"id":6186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6202,"src":"17222:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6184,"name":"uint256","nodeType":"ElementaryTypeName","src":"17222:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17221:9:27"},"scope":7039,"src":"17166:193:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6227,"nodeType":"Block","src":"17756:150:27","statements":[{"expression":{"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6210,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"17766:10:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"17786:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17779:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6211,"name":"int248","nodeType":"ElementaryTypeName","src":"17779:6:27","typeDescriptions":{}}},"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17779:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17766:26:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6216,"nodeType":"ExpressionStatement","src":"17766:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6217,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"17806:10:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"17820:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17806:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6226,"nodeType":"IfStatement","src":"17802:98:27","trueBody":{"id":6225,"nodeType":"Block","src":"17827:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17878:3:27","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"17883:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6220,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"17848:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17848:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6224,"nodeType":"RevertStatement","src":"17841:48:27"}]}}]},"documentation":{"id":6203,"nodeType":"StructuredDocumentation","src":"17365:312:27","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6228,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17691:8:27","nodeType":"FunctionDefinition","parameters":{"id":6206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6205,"mutability":"mutable","name":"value","nameLocation":"17707:5:27","nodeType":"VariableDeclaration","scope":6228,"src":"17700:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6204,"name":"int256","nodeType":"ElementaryTypeName","src":"17700:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17699:14:27"},"returnParameters":{"id":6209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6208,"mutability":"mutable","name":"downcasted","nameLocation":"17744:10:27","nodeType":"VariableDeclaration","scope":6228,"src":"17737:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6207,"name":"int248","nodeType":"ElementaryTypeName","src":"17737:6:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17736:19:27"},"scope":7039,"src":"17682:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6253,"nodeType":"Block","src":"18303:150:27","statements":[{"expression":{"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6236,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"18313:10:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"18333:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18326:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6237,"name":"int240","nodeType":"ElementaryTypeName","src":"18326:6:27","typeDescriptions":{}}},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18326:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18313:26:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6242,"nodeType":"ExpressionStatement","src":"18313:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6243,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"18353:10:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"18367:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18353:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6252,"nodeType":"IfStatement","src":"18349:98:27","trueBody":{"id":6251,"nodeType":"Block","src":"18374:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18425:3:27","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"18430:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6246,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"18395:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6250,"nodeType":"RevertStatement","src":"18388:48:27"}]}}]},"documentation":{"id":6229,"nodeType":"StructuredDocumentation","src":"17912:312:27","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6254,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18238:8:27","nodeType":"FunctionDefinition","parameters":{"id":6232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6231,"mutability":"mutable","name":"value","nameLocation":"18254:5:27","nodeType":"VariableDeclaration","scope":6254,"src":"18247:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6230,"name":"int256","nodeType":"ElementaryTypeName","src":"18247:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18246:14:27"},"returnParameters":{"id":6235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6234,"mutability":"mutable","name":"downcasted","nameLocation":"18291:10:27","nodeType":"VariableDeclaration","scope":6254,"src":"18284:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6233,"name":"int240","nodeType":"ElementaryTypeName","src":"18284:6:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18283:19:27"},"scope":7039,"src":"18229:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6279,"nodeType":"Block","src":"18850:150:27","statements":[{"expression":{"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6262,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"18860:10:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"18880:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18873:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6263,"name":"int232","nodeType":"ElementaryTypeName","src":"18873:6:27","typeDescriptions":{}}},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18873:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18860:26:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6268,"nodeType":"ExpressionStatement","src":"18860:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6269,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"18900:10:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"18914:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18900:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6278,"nodeType":"IfStatement","src":"18896:98:27","trueBody":{"id":6277,"nodeType":"Block","src":"18921:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18972:3:27","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"18977:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6272,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"18942:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18942:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6276,"nodeType":"RevertStatement","src":"18935:48:27"}]}}]},"documentation":{"id":6255,"nodeType":"StructuredDocumentation","src":"18459:312:27","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6280,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18785:8:27","nodeType":"FunctionDefinition","parameters":{"id":6258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6257,"mutability":"mutable","name":"value","nameLocation":"18801:5:27","nodeType":"VariableDeclaration","scope":6280,"src":"18794:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6256,"name":"int256","nodeType":"ElementaryTypeName","src":"18794:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18793:14:27"},"returnParameters":{"id":6261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6260,"mutability":"mutable","name":"downcasted","nameLocation":"18838:10:27","nodeType":"VariableDeclaration","scope":6280,"src":"18831:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6259,"name":"int232","nodeType":"ElementaryTypeName","src":"18831:6:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18830:19:27"},"scope":7039,"src":"18776:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6305,"nodeType":"Block","src":"19397:150:27","statements":[{"expression":{"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6288,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"19407:10:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"19427:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19420:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6289,"name":"int224","nodeType":"ElementaryTypeName","src":"19420:6:27","typeDescriptions":{}}},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19420:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19407:26:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6294,"nodeType":"ExpressionStatement","src":"19407:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6295,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"19447:10:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"19461:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19447:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6304,"nodeType":"IfStatement","src":"19443:98:27","trueBody":{"id":6303,"nodeType":"Block","src":"19468:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19519:3:27","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"19524:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6298,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"19489:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19489:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6302,"nodeType":"RevertStatement","src":"19482:48:27"}]}}]},"documentation":{"id":6281,"nodeType":"StructuredDocumentation","src":"19006:312:27","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6306,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19332:8:27","nodeType":"FunctionDefinition","parameters":{"id":6284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6283,"mutability":"mutable","name":"value","nameLocation":"19348:5:27","nodeType":"VariableDeclaration","scope":6306,"src":"19341:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6282,"name":"int256","nodeType":"ElementaryTypeName","src":"19341:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19340:14:27"},"returnParameters":{"id":6287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6286,"mutability":"mutable","name":"downcasted","nameLocation":"19385:10:27","nodeType":"VariableDeclaration","scope":6306,"src":"19378:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6285,"name":"int224","nodeType":"ElementaryTypeName","src":"19378:6:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19377:19:27"},"scope":7039,"src":"19323:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6331,"nodeType":"Block","src":"19944:150:27","statements":[{"expression":{"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6314,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"19954:10:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"19974:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19967:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6315,"name":"int216","nodeType":"ElementaryTypeName","src":"19967:6:27","typeDescriptions":{}}},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19967:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19954:26:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6320,"nodeType":"ExpressionStatement","src":"19954:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6321,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"19994:10:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"20008:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19994:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6330,"nodeType":"IfStatement","src":"19990:98:27","trueBody":{"id":6329,"nodeType":"Block","src":"20015:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20066:3:27","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"20071:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6324,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"20036:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20036:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6328,"nodeType":"RevertStatement","src":"20029:48:27"}]}}]},"documentation":{"id":6307,"nodeType":"StructuredDocumentation","src":"19553:312:27","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6332,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19879:8:27","nodeType":"FunctionDefinition","parameters":{"id":6310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6309,"mutability":"mutable","name":"value","nameLocation":"19895:5:27","nodeType":"VariableDeclaration","scope":6332,"src":"19888:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6308,"name":"int256","nodeType":"ElementaryTypeName","src":"19888:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19887:14:27"},"returnParameters":{"id":6313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6312,"mutability":"mutable","name":"downcasted","nameLocation":"19932:10:27","nodeType":"VariableDeclaration","scope":6332,"src":"19925:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6311,"name":"int216","nodeType":"ElementaryTypeName","src":"19925:6:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19924:19:27"},"scope":7039,"src":"19870:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6357,"nodeType":"Block","src":"20491:150:27","statements":[{"expression":{"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6340,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"20501:10:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"20521:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20514:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6341,"name":"int208","nodeType":"ElementaryTypeName","src":"20514:6:27","typeDescriptions":{}}},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20514:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20501:26:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6346,"nodeType":"ExpressionStatement","src":"20501:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6347,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"20541:10:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"20555:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20541:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6356,"nodeType":"IfStatement","src":"20537:98:27","trueBody":{"id":6355,"nodeType":"Block","src":"20562:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20613:3:27","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"20618:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6350,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"20583:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20583:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6354,"nodeType":"RevertStatement","src":"20576:48:27"}]}}]},"documentation":{"id":6333,"nodeType":"StructuredDocumentation","src":"20100:312:27","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6358,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20426:8:27","nodeType":"FunctionDefinition","parameters":{"id":6336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6335,"mutability":"mutable","name":"value","nameLocation":"20442:5:27","nodeType":"VariableDeclaration","scope":6358,"src":"20435:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6334,"name":"int256","nodeType":"ElementaryTypeName","src":"20435:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20434:14:27"},"returnParameters":{"id":6339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6338,"mutability":"mutable","name":"downcasted","nameLocation":"20479:10:27","nodeType":"VariableDeclaration","scope":6358,"src":"20472:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6337,"name":"int208","nodeType":"ElementaryTypeName","src":"20472:6:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20471:19:27"},"scope":7039,"src":"20417:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6383,"nodeType":"Block","src":"21038:150:27","statements":[{"expression":{"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6366,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"21048:10:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"21068:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21061:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6367,"name":"int200","nodeType":"ElementaryTypeName","src":"21061:6:27","typeDescriptions":{}}},"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21061:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21048:26:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6372,"nodeType":"ExpressionStatement","src":"21048:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6373,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"21088:10:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"21102:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21088:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6382,"nodeType":"IfStatement","src":"21084:98:27","trueBody":{"id":6381,"nodeType":"Block","src":"21109:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21160:3:27","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"21165:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6376,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"21130:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21130:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6380,"nodeType":"RevertStatement","src":"21123:48:27"}]}}]},"documentation":{"id":6359,"nodeType":"StructuredDocumentation","src":"20647:312:27","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6384,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20973:8:27","nodeType":"FunctionDefinition","parameters":{"id":6362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6361,"mutability":"mutable","name":"value","nameLocation":"20989:5:27","nodeType":"VariableDeclaration","scope":6384,"src":"20982:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6360,"name":"int256","nodeType":"ElementaryTypeName","src":"20982:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20981:14:27"},"returnParameters":{"id":6365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6364,"mutability":"mutable","name":"downcasted","nameLocation":"21026:10:27","nodeType":"VariableDeclaration","scope":6384,"src":"21019:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6363,"name":"int200","nodeType":"ElementaryTypeName","src":"21019:6:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21018:19:27"},"scope":7039,"src":"20964:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6409,"nodeType":"Block","src":"21585:150:27","statements":[{"expression":{"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6392,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"21595:10:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"21615:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21608:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6393,"name":"int192","nodeType":"ElementaryTypeName","src":"21608:6:27","typeDescriptions":{}}},"id":6396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21608:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21595:26:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6398,"nodeType":"ExpressionStatement","src":"21595:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6399,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"21635:10:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"21649:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21635:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6408,"nodeType":"IfStatement","src":"21631:98:27","trueBody":{"id":6407,"nodeType":"Block","src":"21656:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21707:3:27","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"21712:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6402,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"21677:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21677:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6406,"nodeType":"RevertStatement","src":"21670:48:27"}]}}]},"documentation":{"id":6385,"nodeType":"StructuredDocumentation","src":"21194:312:27","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6410,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21520:8:27","nodeType":"FunctionDefinition","parameters":{"id":6388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6387,"mutability":"mutable","name":"value","nameLocation":"21536:5:27","nodeType":"VariableDeclaration","scope":6410,"src":"21529:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6386,"name":"int256","nodeType":"ElementaryTypeName","src":"21529:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21528:14:27"},"returnParameters":{"id":6391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6390,"mutability":"mutable","name":"downcasted","nameLocation":"21573:10:27","nodeType":"VariableDeclaration","scope":6410,"src":"21566:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6389,"name":"int192","nodeType":"ElementaryTypeName","src":"21566:6:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21565:19:27"},"scope":7039,"src":"21511:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6435,"nodeType":"Block","src":"22132:150:27","statements":[{"expression":{"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6418,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"22142:10:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"22162:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22155:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6419,"name":"int184","nodeType":"ElementaryTypeName","src":"22155:6:27","typeDescriptions":{}}},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22155:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22142:26:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6424,"nodeType":"ExpressionStatement","src":"22142:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6425,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"22182:10:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"22196:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22182:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6434,"nodeType":"IfStatement","src":"22178:98:27","trueBody":{"id":6433,"nodeType":"Block","src":"22203:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22254:3:27","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"22259:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6428,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"22224:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22224:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6432,"nodeType":"RevertStatement","src":"22217:48:27"}]}}]},"documentation":{"id":6411,"nodeType":"StructuredDocumentation","src":"21741:312:27","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6436,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22067:8:27","nodeType":"FunctionDefinition","parameters":{"id":6414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6413,"mutability":"mutable","name":"value","nameLocation":"22083:5:27","nodeType":"VariableDeclaration","scope":6436,"src":"22076:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6412,"name":"int256","nodeType":"ElementaryTypeName","src":"22076:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22075:14:27"},"returnParameters":{"id":6417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6416,"mutability":"mutable","name":"downcasted","nameLocation":"22120:10:27","nodeType":"VariableDeclaration","scope":6436,"src":"22113:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6415,"name":"int184","nodeType":"ElementaryTypeName","src":"22113:6:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22112:19:27"},"scope":7039,"src":"22058:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6461,"nodeType":"Block","src":"22679:150:27","statements":[{"expression":{"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6444,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"22689:10:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"22709:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22702:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6445,"name":"int176","nodeType":"ElementaryTypeName","src":"22702:6:27","typeDescriptions":{}}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22702:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22689:26:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6450,"nodeType":"ExpressionStatement","src":"22689:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6451,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"22729:10:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"22743:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22729:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6460,"nodeType":"IfStatement","src":"22725:98:27","trueBody":{"id":6459,"nodeType":"Block","src":"22750:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22801:3:27","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"22806:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6454,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"22771:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22771:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6458,"nodeType":"RevertStatement","src":"22764:48:27"}]}}]},"documentation":{"id":6437,"nodeType":"StructuredDocumentation","src":"22288:312:27","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6462,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22614:8:27","nodeType":"FunctionDefinition","parameters":{"id":6440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6439,"mutability":"mutable","name":"value","nameLocation":"22630:5:27","nodeType":"VariableDeclaration","scope":6462,"src":"22623:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6438,"name":"int256","nodeType":"ElementaryTypeName","src":"22623:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22622:14:27"},"returnParameters":{"id":6443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6442,"mutability":"mutable","name":"downcasted","nameLocation":"22667:10:27","nodeType":"VariableDeclaration","scope":6462,"src":"22660:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6441,"name":"int176","nodeType":"ElementaryTypeName","src":"22660:6:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22659:19:27"},"scope":7039,"src":"22605:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6487,"nodeType":"Block","src":"23226:150:27","statements":[{"expression":{"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6470,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"23236:10:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"23256:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23249:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6471,"name":"int168","nodeType":"ElementaryTypeName","src":"23249:6:27","typeDescriptions":{}}},"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23249:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23236:26:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6476,"nodeType":"ExpressionStatement","src":"23236:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6477,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"23276:10:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"23290:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23276:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6486,"nodeType":"IfStatement","src":"23272:98:27","trueBody":{"id":6485,"nodeType":"Block","src":"23297:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23348:3:27","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"23353:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6480,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"23318:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23318:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6484,"nodeType":"RevertStatement","src":"23311:48:27"}]}}]},"documentation":{"id":6463,"nodeType":"StructuredDocumentation","src":"22835:312:27","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6488,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23161:8:27","nodeType":"FunctionDefinition","parameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6465,"mutability":"mutable","name":"value","nameLocation":"23177:5:27","nodeType":"VariableDeclaration","scope":6488,"src":"23170:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6464,"name":"int256","nodeType":"ElementaryTypeName","src":"23170:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23169:14:27"},"returnParameters":{"id":6469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6468,"mutability":"mutable","name":"downcasted","nameLocation":"23214:10:27","nodeType":"VariableDeclaration","scope":6488,"src":"23207:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6467,"name":"int168","nodeType":"ElementaryTypeName","src":"23207:6:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23206:19:27"},"scope":7039,"src":"23152:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6513,"nodeType":"Block","src":"23773:150:27","statements":[{"expression":{"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6496,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"23783:10:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6491,"src":"23803:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23796:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6497,"name":"int160","nodeType":"ElementaryTypeName","src":"23796:6:27","typeDescriptions":{}}},"id":6500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23796:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23783:26:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6502,"nodeType":"ExpressionStatement","src":"23783:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6503,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"23823:10:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6491,"src":"23837:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23823:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6512,"nodeType":"IfStatement","src":"23819:98:27","trueBody":{"id":6511,"nodeType":"Block","src":"23844:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23895:3:27","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6491,"src":"23900:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6506,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"23865:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23865:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6510,"nodeType":"RevertStatement","src":"23858:48:27"}]}}]},"documentation":{"id":6489,"nodeType":"StructuredDocumentation","src":"23382:312:27","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6514,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23708:8:27","nodeType":"FunctionDefinition","parameters":{"id":6492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6491,"mutability":"mutable","name":"value","nameLocation":"23724:5:27","nodeType":"VariableDeclaration","scope":6514,"src":"23717:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6490,"name":"int256","nodeType":"ElementaryTypeName","src":"23717:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23716:14:27"},"returnParameters":{"id":6495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6494,"mutability":"mutable","name":"downcasted","nameLocation":"23761:10:27","nodeType":"VariableDeclaration","scope":6514,"src":"23754:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6493,"name":"int160","nodeType":"ElementaryTypeName","src":"23754:6:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23753:19:27"},"scope":7039,"src":"23699:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6539,"nodeType":"Block","src":"24320:150:27","statements":[{"expression":{"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6522,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"24330:10:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"24350:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24343:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6523,"name":"int152","nodeType":"ElementaryTypeName","src":"24343:6:27","typeDescriptions":{}}},"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24343:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24330:26:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6528,"nodeType":"ExpressionStatement","src":"24330:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6529,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"24370:10:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"24384:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24370:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6538,"nodeType":"IfStatement","src":"24366:98:27","trueBody":{"id":6537,"nodeType":"Block","src":"24391:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24442:3:27","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"24447:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6532,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"24412:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24412:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6536,"nodeType":"RevertStatement","src":"24405:48:27"}]}}]},"documentation":{"id":6515,"nodeType":"StructuredDocumentation","src":"23929:312:27","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6540,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24255:8:27","nodeType":"FunctionDefinition","parameters":{"id":6518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6517,"mutability":"mutable","name":"value","nameLocation":"24271:5:27","nodeType":"VariableDeclaration","scope":6540,"src":"24264:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6516,"name":"int256","nodeType":"ElementaryTypeName","src":"24264:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24263:14:27"},"returnParameters":{"id":6521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6520,"mutability":"mutable","name":"downcasted","nameLocation":"24308:10:27","nodeType":"VariableDeclaration","scope":6540,"src":"24301:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6519,"name":"int152","nodeType":"ElementaryTypeName","src":"24301:6:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24300:19:27"},"scope":7039,"src":"24246:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6565,"nodeType":"Block","src":"24867:150:27","statements":[{"expression":{"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6548,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"24877:10:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"24897:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24890:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6549,"name":"int144","nodeType":"ElementaryTypeName","src":"24890:6:27","typeDescriptions":{}}},"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24890:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24877:26:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6554,"nodeType":"ExpressionStatement","src":"24877:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6555,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"24917:10:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"24931:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24917:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6564,"nodeType":"IfStatement","src":"24913:98:27","trueBody":{"id":6563,"nodeType":"Block","src":"24938:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24989:3:27","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"24994:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6558,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"24959:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24959:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6562,"nodeType":"RevertStatement","src":"24952:48:27"}]}}]},"documentation":{"id":6541,"nodeType":"StructuredDocumentation","src":"24476:312:27","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6566,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24802:8:27","nodeType":"FunctionDefinition","parameters":{"id":6544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6543,"mutability":"mutable","name":"value","nameLocation":"24818:5:27","nodeType":"VariableDeclaration","scope":6566,"src":"24811:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6542,"name":"int256","nodeType":"ElementaryTypeName","src":"24811:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24810:14:27"},"returnParameters":{"id":6547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6546,"mutability":"mutable","name":"downcasted","nameLocation":"24855:10:27","nodeType":"VariableDeclaration","scope":6566,"src":"24848:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6545,"name":"int144","nodeType":"ElementaryTypeName","src":"24848:6:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24847:19:27"},"scope":7039,"src":"24793:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6591,"nodeType":"Block","src":"25414:150:27","statements":[{"expression":{"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6574,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"25424:10:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"25444:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25437:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6575,"name":"int136","nodeType":"ElementaryTypeName","src":"25437:6:27","typeDescriptions":{}}},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25437:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25424:26:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6580,"nodeType":"ExpressionStatement","src":"25424:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6581,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"25464:10:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"25478:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25464:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6590,"nodeType":"IfStatement","src":"25460:98:27","trueBody":{"id":6589,"nodeType":"Block","src":"25485:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25536:3:27","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"25541:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6584,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"25506:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25506:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6588,"nodeType":"RevertStatement","src":"25499:48:27"}]}}]},"documentation":{"id":6567,"nodeType":"StructuredDocumentation","src":"25023:312:27","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6592,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25349:8:27","nodeType":"FunctionDefinition","parameters":{"id":6570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6569,"mutability":"mutable","name":"value","nameLocation":"25365:5:27","nodeType":"VariableDeclaration","scope":6592,"src":"25358:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6568,"name":"int256","nodeType":"ElementaryTypeName","src":"25358:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25357:14:27"},"returnParameters":{"id":6573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6572,"mutability":"mutable","name":"downcasted","nameLocation":"25402:10:27","nodeType":"VariableDeclaration","scope":6592,"src":"25395:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6571,"name":"int136","nodeType":"ElementaryTypeName","src":"25395:6:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25394:19:27"},"scope":7039,"src":"25340:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6617,"nodeType":"Block","src":"25961:150:27","statements":[{"expression":{"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6600,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"25971:10:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"25991:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25984:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6601,"name":"int128","nodeType":"ElementaryTypeName","src":"25984:6:27","typeDescriptions":{}}},"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25984:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25971:26:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6606,"nodeType":"ExpressionStatement","src":"25971:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6607,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"26011:10:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"26025:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26011:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6616,"nodeType":"IfStatement","src":"26007:98:27","trueBody":{"id":6615,"nodeType":"Block","src":"26032:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26083:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"26088:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6610,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"26053:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26053:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6614,"nodeType":"RevertStatement","src":"26046:48:27"}]}}]},"documentation":{"id":6593,"nodeType":"StructuredDocumentation","src":"25570:312:27","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6618,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25896:8:27","nodeType":"FunctionDefinition","parameters":{"id":6596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6595,"mutability":"mutable","name":"value","nameLocation":"25912:5:27","nodeType":"VariableDeclaration","scope":6618,"src":"25905:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6594,"name":"int256","nodeType":"ElementaryTypeName","src":"25905:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25904:14:27"},"returnParameters":{"id":6599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6598,"mutability":"mutable","name":"downcasted","nameLocation":"25949:10:27","nodeType":"VariableDeclaration","scope":6618,"src":"25942:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6597,"name":"int128","nodeType":"ElementaryTypeName","src":"25942:6:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25941:19:27"},"scope":7039,"src":"25887:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6643,"nodeType":"Block","src":"26508:150:27","statements":[{"expression":{"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6626,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"26518:10:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"26538:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26531:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6627,"name":"int120","nodeType":"ElementaryTypeName","src":"26531:6:27","typeDescriptions":{}}},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26531:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26518:26:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6632,"nodeType":"ExpressionStatement","src":"26518:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6633,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"26558:10:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"26572:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26558:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6642,"nodeType":"IfStatement","src":"26554:98:27","trueBody":{"id":6641,"nodeType":"Block","src":"26579:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26630:3:27","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"26635:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6636,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"26600:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26600:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6640,"nodeType":"RevertStatement","src":"26593:48:27"}]}}]},"documentation":{"id":6619,"nodeType":"StructuredDocumentation","src":"26117:312:27","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6644,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26443:8:27","nodeType":"FunctionDefinition","parameters":{"id":6622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6621,"mutability":"mutable","name":"value","nameLocation":"26459:5:27","nodeType":"VariableDeclaration","scope":6644,"src":"26452:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6620,"name":"int256","nodeType":"ElementaryTypeName","src":"26452:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26451:14:27"},"returnParameters":{"id":6625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6624,"mutability":"mutable","name":"downcasted","nameLocation":"26496:10:27","nodeType":"VariableDeclaration","scope":6644,"src":"26489:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6623,"name":"int120","nodeType":"ElementaryTypeName","src":"26489:6:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26488:19:27"},"scope":7039,"src":"26434:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6669,"nodeType":"Block","src":"27055:150:27","statements":[{"expression":{"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6652,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"27065:10:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"27085:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27078:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6653,"name":"int112","nodeType":"ElementaryTypeName","src":"27078:6:27","typeDescriptions":{}}},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27078:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27065:26:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6658,"nodeType":"ExpressionStatement","src":"27065:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6659,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"27105:10:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"27119:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27105:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6668,"nodeType":"IfStatement","src":"27101:98:27","trueBody":{"id":6667,"nodeType":"Block","src":"27126:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27177:3:27","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"27182:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6662,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"27147:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27147:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6666,"nodeType":"RevertStatement","src":"27140:48:27"}]}}]},"documentation":{"id":6645,"nodeType":"StructuredDocumentation","src":"26664:312:27","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6670,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26990:8:27","nodeType":"FunctionDefinition","parameters":{"id":6648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6647,"mutability":"mutable","name":"value","nameLocation":"27006:5:27","nodeType":"VariableDeclaration","scope":6670,"src":"26999:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6646,"name":"int256","nodeType":"ElementaryTypeName","src":"26999:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26998:14:27"},"returnParameters":{"id":6651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6650,"mutability":"mutable","name":"downcasted","nameLocation":"27043:10:27","nodeType":"VariableDeclaration","scope":6670,"src":"27036:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6649,"name":"int112","nodeType":"ElementaryTypeName","src":"27036:6:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27035:19:27"},"scope":7039,"src":"26981:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6695,"nodeType":"Block","src":"27602:150:27","statements":[{"expression":{"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6678,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"27612:10:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"27632:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27625:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6679,"name":"int104","nodeType":"ElementaryTypeName","src":"27625:6:27","typeDescriptions":{}}},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27625:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27612:26:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6684,"nodeType":"ExpressionStatement","src":"27612:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6685,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"27652:10:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"27666:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27652:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6694,"nodeType":"IfStatement","src":"27648:98:27","trueBody":{"id":6693,"nodeType":"Block","src":"27673:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27724:3:27","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"27729:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6688,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"27694:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27694:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6692,"nodeType":"RevertStatement","src":"27687:48:27"}]}}]},"documentation":{"id":6671,"nodeType":"StructuredDocumentation","src":"27211:312:27","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6696,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27537:8:27","nodeType":"FunctionDefinition","parameters":{"id":6674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6673,"mutability":"mutable","name":"value","nameLocation":"27553:5:27","nodeType":"VariableDeclaration","scope":6696,"src":"27546:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6672,"name":"int256","nodeType":"ElementaryTypeName","src":"27546:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27545:14:27"},"returnParameters":{"id":6677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6676,"mutability":"mutable","name":"downcasted","nameLocation":"27590:10:27","nodeType":"VariableDeclaration","scope":6696,"src":"27583:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6675,"name":"int104","nodeType":"ElementaryTypeName","src":"27583:6:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27582:19:27"},"scope":7039,"src":"27528:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6721,"nodeType":"Block","src":"28142:148:27","statements":[{"expression":{"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6704,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"28152:10:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"28171:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28165:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6705,"name":"int96","nodeType":"ElementaryTypeName","src":"28165:5:27","typeDescriptions":{}}},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28165:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28152:25:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6710,"nodeType":"ExpressionStatement","src":"28152:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6711,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"28191:10:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"28205:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28191:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6720,"nodeType":"IfStatement","src":"28187:97:27","trueBody":{"id":6719,"nodeType":"Block","src":"28212:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28263:2:27","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"28267:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6714,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"28233:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28233:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6718,"nodeType":"RevertStatement","src":"28226:47:27"}]}}]},"documentation":{"id":6697,"nodeType":"StructuredDocumentation","src":"27758:307:27","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6722,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28079:7:27","nodeType":"FunctionDefinition","parameters":{"id":6700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6699,"mutability":"mutable","name":"value","nameLocation":"28094:5:27","nodeType":"VariableDeclaration","scope":6722,"src":"28087:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6698,"name":"int256","nodeType":"ElementaryTypeName","src":"28087:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28086:14:27"},"returnParameters":{"id":6703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6702,"mutability":"mutable","name":"downcasted","nameLocation":"28130:10:27","nodeType":"VariableDeclaration","scope":6722,"src":"28124:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6701,"name":"int96","nodeType":"ElementaryTypeName","src":"28124:5:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28123:18:27"},"scope":7039,"src":"28070:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6747,"nodeType":"Block","src":"28680:148:27","statements":[{"expression":{"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6730,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"28690:10:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"28709:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28703:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6731,"name":"int88","nodeType":"ElementaryTypeName","src":"28703:5:27","typeDescriptions":{}}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28703:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28690:25:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6736,"nodeType":"ExpressionStatement","src":"28690:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6737,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"28729:10:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"28743:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28729:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6746,"nodeType":"IfStatement","src":"28725:97:27","trueBody":{"id":6745,"nodeType":"Block","src":"28750:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28801:2:27","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"28805:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6740,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"28771:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28771:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6744,"nodeType":"RevertStatement","src":"28764:47:27"}]}}]},"documentation":{"id":6723,"nodeType":"StructuredDocumentation","src":"28296:307:27","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6748,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28617:7:27","nodeType":"FunctionDefinition","parameters":{"id":6726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6725,"mutability":"mutable","name":"value","nameLocation":"28632:5:27","nodeType":"VariableDeclaration","scope":6748,"src":"28625:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6724,"name":"int256","nodeType":"ElementaryTypeName","src":"28625:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28624:14:27"},"returnParameters":{"id":6729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6728,"mutability":"mutable","name":"downcasted","nameLocation":"28668:10:27","nodeType":"VariableDeclaration","scope":6748,"src":"28662:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6727,"name":"int88","nodeType":"ElementaryTypeName","src":"28662:5:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28661:18:27"},"scope":7039,"src":"28608:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6773,"nodeType":"Block","src":"29218:148:27","statements":[{"expression":{"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6756,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"29228:10:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"29247:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29241:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6757,"name":"int80","nodeType":"ElementaryTypeName","src":"29241:5:27","typeDescriptions":{}}},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29241:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29228:25:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6762,"nodeType":"ExpressionStatement","src":"29228:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6763,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"29267:10:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"29281:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29267:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6772,"nodeType":"IfStatement","src":"29263:97:27","trueBody":{"id":6771,"nodeType":"Block","src":"29288:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29339:2:27","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"29343:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6766,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"29309:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29309:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6770,"nodeType":"RevertStatement","src":"29302:47:27"}]}}]},"documentation":{"id":6749,"nodeType":"StructuredDocumentation","src":"28834:307:27","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6774,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29155:7:27","nodeType":"FunctionDefinition","parameters":{"id":6752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6751,"mutability":"mutable","name":"value","nameLocation":"29170:5:27","nodeType":"VariableDeclaration","scope":6774,"src":"29163:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6750,"name":"int256","nodeType":"ElementaryTypeName","src":"29163:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29162:14:27"},"returnParameters":{"id":6755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6754,"mutability":"mutable","name":"downcasted","nameLocation":"29206:10:27","nodeType":"VariableDeclaration","scope":6774,"src":"29200:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6753,"name":"int80","nodeType":"ElementaryTypeName","src":"29200:5:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29199:18:27"},"scope":7039,"src":"29146:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6799,"nodeType":"Block","src":"29756:148:27","statements":[{"expression":{"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6782,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"29766:10:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"29785:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29779:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6783,"name":"int72","nodeType":"ElementaryTypeName","src":"29779:5:27","typeDescriptions":{}}},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29779:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29766:25:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6788,"nodeType":"ExpressionStatement","src":"29766:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6789,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"29805:10:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"29819:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29805:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6798,"nodeType":"IfStatement","src":"29801:97:27","trueBody":{"id":6797,"nodeType":"Block","src":"29826:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29877:2:27","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"29881:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6792,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"29847:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29847:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6796,"nodeType":"RevertStatement","src":"29840:47:27"}]}}]},"documentation":{"id":6775,"nodeType":"StructuredDocumentation","src":"29372:307:27","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6800,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29693:7:27","nodeType":"FunctionDefinition","parameters":{"id":6778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6777,"mutability":"mutable","name":"value","nameLocation":"29708:5:27","nodeType":"VariableDeclaration","scope":6800,"src":"29701:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6776,"name":"int256","nodeType":"ElementaryTypeName","src":"29701:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29700:14:27"},"returnParameters":{"id":6781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6780,"mutability":"mutable","name":"downcasted","nameLocation":"29744:10:27","nodeType":"VariableDeclaration","scope":6800,"src":"29738:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6779,"name":"int72","nodeType":"ElementaryTypeName","src":"29738:5:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29737:18:27"},"scope":7039,"src":"29684:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6825,"nodeType":"Block","src":"30294:148:27","statements":[{"expression":{"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6808,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"30304:10:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"30323:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30317:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6809,"name":"int64","nodeType":"ElementaryTypeName","src":"30317:5:27","typeDescriptions":{}}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30317:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30304:25:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6814,"nodeType":"ExpressionStatement","src":"30304:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6815,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"30343:10:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"30357:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30343:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6824,"nodeType":"IfStatement","src":"30339:97:27","trueBody":{"id":6823,"nodeType":"Block","src":"30364:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30415:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"30419:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6818,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"30385:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30385:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6822,"nodeType":"RevertStatement","src":"30378:47:27"}]}}]},"documentation":{"id":6801,"nodeType":"StructuredDocumentation","src":"29910:307:27","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6826,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30231:7:27","nodeType":"FunctionDefinition","parameters":{"id":6804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6803,"mutability":"mutable","name":"value","nameLocation":"30246:5:27","nodeType":"VariableDeclaration","scope":6826,"src":"30239:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6802,"name":"int256","nodeType":"ElementaryTypeName","src":"30239:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30238:14:27"},"returnParameters":{"id":6807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6806,"mutability":"mutable","name":"downcasted","nameLocation":"30282:10:27","nodeType":"VariableDeclaration","scope":6826,"src":"30276:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6805,"name":"int64","nodeType":"ElementaryTypeName","src":"30276:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30275:18:27"},"scope":7039,"src":"30222:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6851,"nodeType":"Block","src":"30832:148:27","statements":[{"expression":{"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6834,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"30842:10:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"30861:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30855:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6835,"name":"int56","nodeType":"ElementaryTypeName","src":"30855:5:27","typeDescriptions":{}}},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30855:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30842:25:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6840,"nodeType":"ExpressionStatement","src":"30842:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6841,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"30881:10:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"30895:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30881:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6850,"nodeType":"IfStatement","src":"30877:97:27","trueBody":{"id":6849,"nodeType":"Block","src":"30902:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30953:2:27","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"30957:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6844,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"30923:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30923:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6848,"nodeType":"RevertStatement","src":"30916:47:27"}]}}]},"documentation":{"id":6827,"nodeType":"StructuredDocumentation","src":"30448:307:27","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6852,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30769:7:27","nodeType":"FunctionDefinition","parameters":{"id":6830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6829,"mutability":"mutable","name":"value","nameLocation":"30784:5:27","nodeType":"VariableDeclaration","scope":6852,"src":"30777:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6828,"name":"int256","nodeType":"ElementaryTypeName","src":"30777:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30776:14:27"},"returnParameters":{"id":6833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6832,"mutability":"mutable","name":"downcasted","nameLocation":"30820:10:27","nodeType":"VariableDeclaration","scope":6852,"src":"30814:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6831,"name":"int56","nodeType":"ElementaryTypeName","src":"30814:5:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30813:18:27"},"scope":7039,"src":"30760:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6877,"nodeType":"Block","src":"31370:148:27","statements":[{"expression":{"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6860,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"31380:10:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"31399:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31393:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6861,"name":"int48","nodeType":"ElementaryTypeName","src":"31393:5:27","typeDescriptions":{}}},"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31393:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31380:25:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6866,"nodeType":"ExpressionStatement","src":"31380:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6867,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"31419:10:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"31433:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31419:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6876,"nodeType":"IfStatement","src":"31415:97:27","trueBody":{"id":6875,"nodeType":"Block","src":"31440:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31491:2:27","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"31495:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6870,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"31461:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31461:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6874,"nodeType":"RevertStatement","src":"31454:47:27"}]}}]},"documentation":{"id":6853,"nodeType":"StructuredDocumentation","src":"30986:307:27","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6878,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31307:7:27","nodeType":"FunctionDefinition","parameters":{"id":6856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6855,"mutability":"mutable","name":"value","nameLocation":"31322:5:27","nodeType":"VariableDeclaration","scope":6878,"src":"31315:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6854,"name":"int256","nodeType":"ElementaryTypeName","src":"31315:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31314:14:27"},"returnParameters":{"id":6859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6858,"mutability":"mutable","name":"downcasted","nameLocation":"31358:10:27","nodeType":"VariableDeclaration","scope":6878,"src":"31352:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6857,"name":"int48","nodeType":"ElementaryTypeName","src":"31352:5:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31351:18:27"},"scope":7039,"src":"31298:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6903,"nodeType":"Block","src":"31908:148:27","statements":[{"expression":{"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6886,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"31918:10:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"31937:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31931:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6887,"name":"int40","nodeType":"ElementaryTypeName","src":"31931:5:27","typeDescriptions":{}}},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31931:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31918:25:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6892,"nodeType":"ExpressionStatement","src":"31918:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6893,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"31957:10:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"31971:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31957:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6902,"nodeType":"IfStatement","src":"31953:97:27","trueBody":{"id":6901,"nodeType":"Block","src":"31978:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32029:2:27","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"32033:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6896,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"31999:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31999:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6900,"nodeType":"RevertStatement","src":"31992:47:27"}]}}]},"documentation":{"id":6879,"nodeType":"StructuredDocumentation","src":"31524:307:27","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6904,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31845:7:27","nodeType":"FunctionDefinition","parameters":{"id":6882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6881,"mutability":"mutable","name":"value","nameLocation":"31860:5:27","nodeType":"VariableDeclaration","scope":6904,"src":"31853:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6880,"name":"int256","nodeType":"ElementaryTypeName","src":"31853:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31852:14:27"},"returnParameters":{"id":6885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6884,"mutability":"mutable","name":"downcasted","nameLocation":"31896:10:27","nodeType":"VariableDeclaration","scope":6904,"src":"31890:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6883,"name":"int40","nodeType":"ElementaryTypeName","src":"31890:5:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31889:18:27"},"scope":7039,"src":"31836:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6929,"nodeType":"Block","src":"32446:148:27","statements":[{"expression":{"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6912,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"32456:10:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"32475:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32469:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6913,"name":"int32","nodeType":"ElementaryTypeName","src":"32469:5:27","typeDescriptions":{}}},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32469:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32456:25:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6918,"nodeType":"ExpressionStatement","src":"32456:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6919,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"32495:10:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"32509:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32495:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6928,"nodeType":"IfStatement","src":"32491:97:27","trueBody":{"id":6927,"nodeType":"Block","src":"32516:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32567:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"32571:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6922,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"32537:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32537:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6926,"nodeType":"RevertStatement","src":"32530:47:27"}]}}]},"documentation":{"id":6905,"nodeType":"StructuredDocumentation","src":"32062:307:27","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6930,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32383:7:27","nodeType":"FunctionDefinition","parameters":{"id":6908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6907,"mutability":"mutable","name":"value","nameLocation":"32398:5:27","nodeType":"VariableDeclaration","scope":6930,"src":"32391:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6906,"name":"int256","nodeType":"ElementaryTypeName","src":"32391:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32390:14:27"},"returnParameters":{"id":6911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6910,"mutability":"mutable","name":"downcasted","nameLocation":"32434:10:27","nodeType":"VariableDeclaration","scope":6930,"src":"32428:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6909,"name":"int32","nodeType":"ElementaryTypeName","src":"32428:5:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32427:18:27"},"scope":7039,"src":"32374:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6955,"nodeType":"Block","src":"32984:148:27","statements":[{"expression":{"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6938,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"32994:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"33013:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33007:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6939,"name":"int24","nodeType":"ElementaryTypeName","src":"33007:5:27","typeDescriptions":{}}},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33007:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32994:25:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6944,"nodeType":"ExpressionStatement","src":"32994:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6945,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"33033:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"33047:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33033:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6954,"nodeType":"IfStatement","src":"33029:97:27","trueBody":{"id":6953,"nodeType":"Block","src":"33054:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33105:2:27","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"33109:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6948,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"33075:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33075:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6952,"nodeType":"RevertStatement","src":"33068:47:27"}]}}]},"documentation":{"id":6931,"nodeType":"StructuredDocumentation","src":"32600:307:27","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6956,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32921:7:27","nodeType":"FunctionDefinition","parameters":{"id":6934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6933,"mutability":"mutable","name":"value","nameLocation":"32936:5:27","nodeType":"VariableDeclaration","scope":6956,"src":"32929:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6932,"name":"int256","nodeType":"ElementaryTypeName","src":"32929:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32928:14:27"},"returnParameters":{"id":6937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6936,"mutability":"mutable","name":"downcasted","nameLocation":"32972:10:27","nodeType":"VariableDeclaration","scope":6956,"src":"32966:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6935,"name":"int24","nodeType":"ElementaryTypeName","src":"32966:5:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32965:18:27"},"scope":7039,"src":"32912:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6981,"nodeType":"Block","src":"33522:148:27","statements":[{"expression":{"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6964,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"33532:10:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"33551:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33545:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6965,"name":"int16","nodeType":"ElementaryTypeName","src":"33545:5:27","typeDescriptions":{}}},"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33545:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33532:25:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6970,"nodeType":"ExpressionStatement","src":"33532:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6971,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"33571:10:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"33585:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33571:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6980,"nodeType":"IfStatement","src":"33567:97:27","trueBody":{"id":6979,"nodeType":"Block","src":"33592:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33643:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"33647:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6974,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"33613:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33613:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6978,"nodeType":"RevertStatement","src":"33606:47:27"}]}}]},"documentation":{"id":6957,"nodeType":"StructuredDocumentation","src":"33138:307:27","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6982,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33459:7:27","nodeType":"FunctionDefinition","parameters":{"id":6960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6959,"mutability":"mutable","name":"value","nameLocation":"33474:5:27","nodeType":"VariableDeclaration","scope":6982,"src":"33467:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6958,"name":"int256","nodeType":"ElementaryTypeName","src":"33467:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33466:14:27"},"returnParameters":{"id":6963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6962,"mutability":"mutable","name":"downcasted","nameLocation":"33510:10:27","nodeType":"VariableDeclaration","scope":6982,"src":"33504:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6961,"name":"int16","nodeType":"ElementaryTypeName","src":"33504:5:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33503:18:27"},"scope":7039,"src":"33450:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7007,"nodeType":"Block","src":"34053:146:27","statements":[{"expression":{"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6990,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"34063:10:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"34081:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34076:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6991,"name":"int8","nodeType":"ElementaryTypeName","src":"34076:4:27","typeDescriptions":{}}},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34076:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34063:24:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6996,"nodeType":"ExpressionStatement","src":"34063:24:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6997,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"34101:10:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"34115:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34101:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7006,"nodeType":"IfStatement","src":"34097:96:27","trueBody":{"id":7005,"nodeType":"Block","src":"34122:71:27","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34173:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"34176:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7000,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"34143:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34143:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7004,"nodeType":"RevertStatement","src":"34136:46:27"}]}}]},"documentation":{"id":6983,"nodeType":"StructuredDocumentation","src":"33676:302:27","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7008,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33992:6:27","nodeType":"FunctionDefinition","parameters":{"id":6986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6985,"mutability":"mutable","name":"value","nameLocation":"34006:5:27","nodeType":"VariableDeclaration","scope":7008,"src":"33999:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6984,"name":"int256","nodeType":"ElementaryTypeName","src":"33999:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33998:14:27"},"returnParameters":{"id":6989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6988,"mutability":"mutable","name":"downcasted","nameLocation":"34041:10:27","nodeType":"VariableDeclaration","scope":7008,"src":"34036:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6987,"name":"int8","nodeType":"ElementaryTypeName","src":"34036:4:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34035:17:27"},"scope":7039,"src":"33983:216:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7037,"nodeType":"Block","src":"34439:250:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"34552:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34573:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7020,"name":"int256","nodeType":"ElementaryTypeName","src":"34573:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7019,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34568:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34568:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34581:3:27","memberName":"max","nodeType":"MemberAccess","src":"34568:16:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34560:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7017,"name":"uint256","nodeType":"ElementaryTypeName","src":"34560:7:27","typeDescriptions":{}}},"id":7024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34560:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34552:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7031,"nodeType":"IfStatement","src":"34548:105:27","trueBody":{"id":7030,"nodeType":"Block","src":"34587:66:27","statements":[{"errorCall":{"arguments":[{"id":7027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"34636:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7026,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"34608:27:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34608:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7029,"nodeType":"RevertStatement","src":"34601:41:27"}]}},{"expression":{"arguments":[{"id":7034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"34676:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34669:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7032,"name":"int256","nodeType":"ElementaryTypeName","src":"34669:6:27","typeDescriptions":{}}},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34669:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7015,"id":7036,"nodeType":"Return","src":"34662:20:27"}]},"documentation":{"id":7009,"nodeType":"StructuredDocumentation","src":"34205:165:27","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7038,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34384:8:27","nodeType":"FunctionDefinition","parameters":{"id":7012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7011,"mutability":"mutable","name":"value","nameLocation":"34401:5:27","nodeType":"VariableDeclaration","scope":7038,"src":"34393:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7010,"name":"uint256","nodeType":"ElementaryTypeName","src":"34393:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34392:15:27"},"returnParameters":{"id":7015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7038,"src":"34431:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7013,"name":"int256","nodeType":"ElementaryTypeName","src":"34431:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34430:8:27"},"scope":7039,"src":"34375:314:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7040,"src":"764:33927:27","usedErrors":[5294,5299,5306,5311],"usedEvents":[]}],"src":"192:34500:27"},"id":27},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[7144]},"id":7145,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7041,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:28"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7042,"nodeType":"StructuredDocumentation","src":"135:80:28","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7144,"linearizedBaseContracts":[7144],"name":"SignedMath","nameLocation":"224:10:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":7059,"nodeType":"Block","src":"376:37:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7052,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"393:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7053,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"397:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7056,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"405:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:28","trueExpression":{"id":7055,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"401:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7051,"id":7058,"nodeType":"Return","src":"386:20:28"}]},"documentation":{"id":7043,"nodeType":"StructuredDocumentation","src":"241:66:28","text":" @dev Returns the largest of two signed numbers."},"id":7060,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:28","nodeType":"FunctionDefinition","parameters":{"id":7048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7045,"mutability":"mutable","name":"a","nameLocation":"332:1:28","nodeType":"VariableDeclaration","scope":7060,"src":"325:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7044,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7047,"mutability":"mutable","name":"b","nameLocation":"342:1:28","nodeType":"VariableDeclaration","scope":7060,"src":"335:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7046,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:28"},"returnParameters":{"id":7051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7060,"src":"368:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7049,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:28"},"scope":7144,"src":"312:101:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7077,"nodeType":"Block","src":"555:37:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7070,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"572:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7071,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"576:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7074,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"584:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:28","trueExpression":{"id":7073,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"580:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7069,"id":7076,"nodeType":"Return","src":"565:20:28"}]},"documentation":{"id":7061,"nodeType":"StructuredDocumentation","src":"419:67:28","text":" @dev Returns the smallest of two signed numbers."},"id":7078,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:28","nodeType":"FunctionDefinition","parameters":{"id":7066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7063,"mutability":"mutable","name":"a","nameLocation":"511:1:28","nodeType":"VariableDeclaration","scope":7078,"src":"504:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7062,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7065,"mutability":"mutable","name":"b","nameLocation":"521:1:28","nodeType":"VariableDeclaration","scope":7078,"src":"514:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7064,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:28"},"returnParameters":{"id":7069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7078,"src":"547:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7067,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:28"},"scope":7144,"src":"491:101:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7121,"nodeType":"Block","src":"797:162:28","statements":[{"assignments":[7089],"declarations":[{"constant":false,"id":7089,"mutability":"mutable","name":"x","nameLocation":"866:1:28","nodeType":"VariableDeclaration","scope":7121,"src":"859:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7088,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7102,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7090,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7081,"src":"871:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7091,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"875:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7094,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7081,"src":"882:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7095,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"886:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7097,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:28"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7103,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"911:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7108,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"931:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7106,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:28","typeDescriptions":{}}},"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7104,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:28","typeDescriptions":{}}},"id":7112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7113,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7081,"src":"945:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7114,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"949:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7116,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7118,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7087,"id":7120,"nodeType":"Return","src":"904:48:28"}]},"documentation":{"id":7079,"nodeType":"StructuredDocumentation","src":"598:126:28","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7122,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:28","nodeType":"FunctionDefinition","parameters":{"id":7084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7081,"mutability":"mutable","name":"a","nameLocation":"753:1:28","nodeType":"VariableDeclaration","scope":7122,"src":"746:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7080,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7083,"mutability":"mutable","name":"b","nameLocation":"763:1:28","nodeType":"VariableDeclaration","scope":7122,"src":"756:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7082,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:28"},"returnParameters":{"id":7087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7122,"src":"789:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7085,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:28"},"scope":7144,"src":"729:230:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7142,"nodeType":"Block","src":"1103:158:28","statements":[{"id":7141,"nodeType":"UncheckedBlock","src":"1113:142:28","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7132,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"1228:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":7133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:28","subExpression":{"id":7136,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"1242:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:28","trueExpression":{"id":7135,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"1237:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7130,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:28","typeDescriptions":{}}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7129,"id":7140,"nodeType":"Return","src":"1213:31:28"}]}]},"documentation":{"id":7123,"nodeType":"StructuredDocumentation","src":"965:78:28","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7143,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:28","nodeType":"FunctionDefinition","parameters":{"id":7126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7125,"mutability":"mutable","name":"n","nameLocation":"1068:1:28","nodeType":"VariableDeclaration","scope":7143,"src":"1061:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7124,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:28"},"returnParameters":{"id":7129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7143,"src":"1094:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7127,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:28"},"scope":7144,"src":"1048:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7145,"src":"216:1047:28","usedErrors":[],"usedEvents":[]}],"src":"109:1155:28"},"id":28},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","exportedSymbols":{"Checkpoints":[8716],"Math":[5284]},"id":8717,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7146,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"201:24:29"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":7148,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8717,"sourceUnit":5285,"src":"227:38:29","symbolAliases":[{"foreign":{"id":7147,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"235:4:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Checkpoints","contractDependencies":[],"contractKind":"library","documentation":{"id":7149,"nodeType":"StructuredDocumentation","src":"267:400:29","text":" @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n time, and later looking up past values by block number. See {Votes} as an example.\n To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n checkpoint for the current transaction block using the {push} function."},"fullyImplemented":true,"id":8716,"linearizedBaseContracts":[8716],"name":"Checkpoints","nameLocation":"676:11:29","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7150,"nodeType":"StructuredDocumentation","src":"694:82:29","text":" @dev A value was attempted to be inserted on a past checkpoint."},"errorSelector":"2520601d","id":7152,"name":"CheckpointUnorderedInsertion","nameLocation":"787:28:29","nodeType":"ErrorDefinition","parameters":{"id":7151,"nodeType":"ParameterList","parameters":[],"src":"815:2:29"},"src":"781:37:29"},{"canonicalName":"Checkpoints.Trace224","id":7157,"members":[{"constant":false,"id":7156,"mutability":"mutable","name":"_checkpoints","nameLocation":"866:12:29","nodeType":"VariableDeclaration","scope":7157,"src":"850:28:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7154,"nodeType":"UserDefinedTypeName","pathNode":{"id":7153,"name":"Checkpoint224","nameLocations":["850:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7162,"src":"850:13:29"},"referencedDeclaration":7162,"src":"850:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7155,"nodeType":"ArrayTypeName","src":"850:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"}],"name":"Trace224","nameLocation":"831:8:29","nodeType":"StructDefinition","scope":8716,"src":"824:61:29","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint224","id":7162,"members":[{"constant":false,"id":7159,"mutability":"mutable","name":"_key","nameLocation":"929:4:29","nodeType":"VariableDeclaration","scope":7162,"src":"922:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7158,"name":"uint32","nodeType":"ElementaryTypeName","src":"922:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7161,"mutability":"mutable","name":"_value","nameLocation":"951:6:29","nodeType":"VariableDeclaration","scope":7162,"src":"943:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7160,"name":"uint224","nodeType":"ElementaryTypeName","src":"943:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint224","nameLocation":"898:13:29","nodeType":"StructDefinition","scope":8716,"src":"891:73:29","visibility":"public"},{"body":{"id":7184,"nodeType":"Block","src":"1377:62:29","statements":[{"expression":{"arguments":[{"expression":{"id":7178,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"1402:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1407:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"1402:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7180,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"1421:3:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"1426:5:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":7177,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[7554,8075,8596],"referencedDeclaration":7554,"src":"1394:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1394:38:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":7176,"id":7183,"nodeType":"Return","src":"1387:45:29"}]},"documentation":{"id":7163,"nodeType":"StructuredDocumentation","src":"970:302:29","text":" @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n library."},"id":7185,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"1286:4:29","nodeType":"FunctionDefinition","parameters":{"id":7171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7166,"mutability":"mutable","name":"self","nameLocation":"1308:4:29","nodeType":"VariableDeclaration","scope":7185,"src":"1291:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7165,"nodeType":"UserDefinedTypeName","pathNode":{"id":7164,"name":"Trace224","nameLocations":["1291:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":7157,"src":"1291:8:29"},"referencedDeclaration":7157,"src":"1291:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7168,"mutability":"mutable","name":"key","nameLocation":"1321:3:29","nodeType":"VariableDeclaration","scope":7185,"src":"1314:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7167,"name":"uint32","nodeType":"ElementaryTypeName","src":"1314:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7170,"mutability":"mutable","name":"value","nameLocation":"1334:5:29","nodeType":"VariableDeclaration","scope":7185,"src":"1326:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7169,"name":"uint224","nodeType":"ElementaryTypeName","src":"1326:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1290:50:29"},"returnParameters":{"id":7176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7185,"src":"1359:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7172,"name":"uint224","nodeType":"ElementaryTypeName","src":"1359:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":7175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7185,"src":"1368:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7174,"name":"uint224","nodeType":"ElementaryTypeName","src":"1368:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1358:18:29"},"scope":8716,"src":"1277:162:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7224,"nodeType":"Block","src":"1692:207:29","statements":[{"assignments":[7197],"declarations":[{"constant":false,"id":7197,"mutability":"mutable","name":"len","nameLocation":"1710:3:29","nodeType":"VariableDeclaration","scope":7224,"src":"1702:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1702:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7201,"initialValue":{"expression":{"expression":{"id":7198,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"1716:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7199,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1721:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"1716:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1734:6:29","memberName":"length","nodeType":"MemberAccess","src":"1716:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1702:38:29"},{"assignments":[7203],"declarations":[{"constant":false,"id":7203,"mutability":"mutable","name":"pos","nameLocation":"1758:3:29","nodeType":"VariableDeclaration","scope":7224,"src":"1750:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7202,"name":"uint256","nodeType":"ElementaryTypeName","src":"1750:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7211,"initialValue":{"arguments":[{"expression":{"id":7205,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"1783:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1788:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"1783:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7207,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"1802:3:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":7208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1807:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7209,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"1810:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7204,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7658,8179,8700],"referencedDeclaration":7658,"src":"1764:18:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":7210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1764:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1750:64:29"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7212,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"1831:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7213,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"1838:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1831:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7217,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"1862:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1867:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"1862:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7219,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"1881:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7216,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":7673,"src":"1848:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7162_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1886:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7161,"src":"1848:44:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1831:61:29","trueExpression":{"hexValue":"30","id":7215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1844:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7195,"id":7223,"nodeType":"Return","src":"1824:68:29"}]},"documentation":{"id":7186,"nodeType":"StructuredDocumentation","src":"1445:154:29","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":7225,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"1613:11:29","nodeType":"FunctionDefinition","parameters":{"id":7192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7189,"mutability":"mutable","name":"self","nameLocation":"1642:4:29","nodeType":"VariableDeclaration","scope":7225,"src":"1625:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7188,"nodeType":"UserDefinedTypeName","pathNode":{"id":7187,"name":"Trace224","nameLocations":["1625:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":7157,"src":"1625:8:29"},"referencedDeclaration":7157,"src":"1625:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7191,"mutability":"mutable","name":"key","nameLocation":"1655:3:29","nodeType":"VariableDeclaration","scope":7225,"src":"1648:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7190,"name":"uint32","nodeType":"ElementaryTypeName","src":"1648:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1624:35:29"},"returnParameters":{"id":7195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7225,"src":"1683:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7193,"name":"uint224","nodeType":"ElementaryTypeName","src":"1683:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1682:9:29"},"scope":8716,"src":"1604:295:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7266,"nodeType":"Block","src":"2154:209:29","statements":[{"assignments":[7237],"declarations":[{"constant":false,"id":7237,"mutability":"mutable","name":"len","nameLocation":"2172:3:29","nodeType":"VariableDeclaration","scope":7266,"src":"2164:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7241,"initialValue":{"expression":{"expression":{"id":7238,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"2178:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2183:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"2178:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2196:6:29","memberName":"length","nodeType":"MemberAccess","src":"2178:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2164:38:29"},{"assignments":[7243],"declarations":[{"constant":false,"id":7243,"mutability":"mutable","name":"pos","nameLocation":"2220:3:29","nodeType":"VariableDeclaration","scope":7266,"src":"2212:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7242,"name":"uint256","nodeType":"ElementaryTypeName","src":"2212:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7251,"initialValue":{"arguments":[{"expression":{"id":7245,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"2245:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2250:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"2245:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7247,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"2264:3:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":7248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2269:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7249,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"2272:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7244,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7606,8127,8648],"referencedDeclaration":7606,"src":"2226:18:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":7250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2212:64:29"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7252,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"2293:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2300:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2293:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7257,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"2322:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2327:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"2322:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7259,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"2341:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2347:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2341:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7256,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":7673,"src":"2308:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7162_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2350:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7161,"src":"2308:48:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2293:63:29","trueExpression":{"hexValue":"30","id":7255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2304:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7235,"id":7265,"nodeType":"Return","src":"2286:70:29"}]},"documentation":{"id":7226,"nodeType":"StructuredDocumentation","src":"1905:156:29","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":7267,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"2075:11:29","nodeType":"FunctionDefinition","parameters":{"id":7232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7229,"mutability":"mutable","name":"self","nameLocation":"2104:4:29","nodeType":"VariableDeclaration","scope":7267,"src":"2087:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7228,"nodeType":"UserDefinedTypeName","pathNode":{"id":7227,"name":"Trace224","nameLocations":["2087:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":7157,"src":"2087:8:29"},"referencedDeclaration":7157,"src":"2087:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7231,"mutability":"mutable","name":"key","nameLocation":"2117:3:29","nodeType":"VariableDeclaration","scope":7267,"src":"2110:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7230,"name":"uint32","nodeType":"ElementaryTypeName","src":"2110:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2086:35:29"},"returnParameters":{"id":7235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7267,"src":"2145:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7233,"name":"uint224","nodeType":"ElementaryTypeName","src":"2145:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2144:9:29"},"scope":8716,"src":"2066:297:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7351,"nodeType":"Block","src":"2762:512:29","statements":[{"assignments":[7279],"declarations":[{"constant":false,"id":7279,"mutability":"mutable","name":"len","nameLocation":"2780:3:29","nodeType":"VariableDeclaration","scope":7351,"src":"2772:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7278,"name":"uint256","nodeType":"ElementaryTypeName","src":"2772:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7283,"initialValue":{"expression":{"expression":{"id":7280,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"2786:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2791:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"2786:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2804:6:29","memberName":"length","nodeType":"MemberAccess","src":"2786:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2772:38:29"},{"assignments":[7285],"declarations":[{"constant":false,"id":7285,"mutability":"mutable","name":"low","nameLocation":"2829:3:29","nodeType":"VariableDeclaration","scope":7351,"src":"2821:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7284,"name":"uint256","nodeType":"ElementaryTypeName","src":"2821:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7287,"initialValue":{"hexValue":"30","id":7286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2821:15:29"},{"assignments":[7289],"declarations":[{"constant":false,"id":7289,"mutability":"mutable","name":"high","nameLocation":"2854:4:29","nodeType":"VariableDeclaration","scope":7351,"src":"2846:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7288,"name":"uint256","nodeType":"ElementaryTypeName","src":"2846:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7291,"initialValue":{"id":7290,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"2861:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2846:18:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7292,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"2879:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":7293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:29","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2879:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7326,"nodeType":"IfStatement","src":"2875:234:29","trueBody":{"id":7325,"nodeType":"Block","src":"2888:221:29","statements":[{"assignments":[7296],"declarations":[{"constant":false,"id":7296,"mutability":"mutable","name":"mid","nameLocation":"2910:3:29","nodeType":"VariableDeclaration","scope":7325,"src":"2902:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7295,"name":"uint256","nodeType":"ElementaryTypeName","src":"2902:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7303,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7297,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"2916:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":7300,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"2932:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7298,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"2922:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5284_$","typeString":"type(library Math)"}},"id":7299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2927:4:29","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4773,"src":"2922:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2916:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2902:34:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7304,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"2954:3:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":7306,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"2974:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2979:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"2974:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7308,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"2993:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7305,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":7673,"src":"2960:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7162_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2960:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2998:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7159,"src":"2960:42:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2954:48:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7323,"nodeType":"Block","src":"3053:46:29","statements":[{"expression":{"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7317,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"3071:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7318,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"3077:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3083:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3077:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3071:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7322,"nodeType":"ExpressionStatement","src":"3071:13:29"}]},"id":7324,"nodeType":"IfStatement","src":"2950:149:29","trueBody":{"id":7316,"nodeType":"Block","src":"3004:43:29","statements":[{"expression":{"id":7314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7312,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"3022:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7313,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"3029:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3022:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7315,"nodeType":"ExpressionStatement","src":"3022:10:29"}]}}]}},{"assignments":[7328],"declarations":[{"constant":false,"id":7328,"mutability":"mutable","name":"pos","nameLocation":"3127:3:29","nodeType":"VariableDeclaration","scope":7351,"src":"3119:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7327,"name":"uint256","nodeType":"ElementaryTypeName","src":"3119:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7336,"initialValue":{"arguments":[{"expression":{"id":7330,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"3152:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3157:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"3152:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7332,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"3171:3:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7333,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"3176:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7334,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"3181:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7329,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7606,8127,8648],"referencedDeclaration":7606,"src":"3133:18:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":7335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3133:53:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3119:67:29"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7337,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7328,"src":"3204:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3211:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3204:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7342,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"3233:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3238:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"3233:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7344,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7328,"src":"3252:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3258:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3252:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7341,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":7673,"src":"3219:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7162_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3261:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7161,"src":"3219:48:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3204:63:29","trueExpression":{"hexValue":"30","id":7340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3215:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7277,"id":7350,"nodeType":"Return","src":"3197:70:29"}]},"documentation":{"id":7268,"nodeType":"StructuredDocumentation","src":"2369:294:29","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":7352,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"2677:17:29","nodeType":"FunctionDefinition","parameters":{"id":7274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7271,"mutability":"mutable","name":"self","nameLocation":"2712:4:29","nodeType":"VariableDeclaration","scope":7352,"src":"2695:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7270,"nodeType":"UserDefinedTypeName","pathNode":{"id":7269,"name":"Trace224","nameLocations":["2695:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":7157,"src":"2695:8:29"},"referencedDeclaration":7157,"src":"2695:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7273,"mutability":"mutable","name":"key","nameLocation":"2725:3:29","nodeType":"VariableDeclaration","scope":7352,"src":"2718:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7272,"name":"uint32","nodeType":"ElementaryTypeName","src":"2718:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2694:35:29"},"returnParameters":{"id":7277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7352,"src":"2753:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7275,"name":"uint224","nodeType":"ElementaryTypeName","src":"2753:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2752:9:29"},"scope":8716,"src":"2668:606:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7381,"nodeType":"Block","src":"3465:135:29","statements":[{"assignments":[7362],"declarations":[{"constant":false,"id":7362,"mutability":"mutable","name":"pos","nameLocation":"3483:3:29","nodeType":"VariableDeclaration","scope":7381,"src":"3475:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7361,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7366,"initialValue":{"expression":{"expression":{"id":7363,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"3489:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3494:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"3489:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3507:6:29","memberName":"length","nodeType":"MemberAccess","src":"3489:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3475:38:29"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7367,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7362,"src":"3530:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3537:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3530:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7372,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"3559:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3564:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"3559:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7374,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7362,"src":"3578:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3584:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3578:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7371,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":7673,"src":"3545:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7162_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3545:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3587:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7161,"src":"3545:48:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3530:63:29","trueExpression":{"hexValue":"30","id":7370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3541:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7360,"id":7380,"nodeType":"Return","src":"3523:70:29"}]},"documentation":{"id":7353,"nodeType":"StructuredDocumentation","src":"3280:109:29","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":7382,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"3403:6:29","nodeType":"FunctionDefinition","parameters":{"id":7357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7356,"mutability":"mutable","name":"self","nameLocation":"3427:4:29","nodeType":"VariableDeclaration","scope":7382,"src":"3410:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7355,"nodeType":"UserDefinedTypeName","pathNode":{"id":7354,"name":"Trace224","nameLocations":["3410:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":7157,"src":"3410:8:29"},"referencedDeclaration":7157,"src":"3410:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3409:23:29"},"returnParameters":{"id":7360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7382,"src":"3456:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7358,"name":"uint224","nodeType":"ElementaryTypeName","src":"3456:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3455:9:29"},"scope":8716,"src":"3394:206:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7430,"nodeType":"Block","src":"3893:274:29","statements":[{"assignments":[7396],"declarations":[{"constant":false,"id":7396,"mutability":"mutable","name":"pos","nameLocation":"3911:3:29","nodeType":"VariableDeclaration","scope":7430,"src":"3903:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7395,"name":"uint256","nodeType":"ElementaryTypeName","src":"3903:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7400,"initialValue":{"expression":{"expression":{"id":7397,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"3917:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3922:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"3917:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3935:6:29","memberName":"length","nodeType":"MemberAccess","src":"3917:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3903:38:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7401,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"3955:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3962:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3955:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7428,"nodeType":"Block","src":"4016:145:29","statements":[{"assignments":[7412],"declarations":[{"constant":false,"id":7412,"mutability":"mutable","name":"ckpt","nameLocation":"4051:4:29","nodeType":"VariableDeclaration","scope":7428,"src":"4030:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":7411,"nodeType":"UserDefinedTypeName","pathNode":{"id":7410,"name":"Checkpoint224","nameLocations":["4030:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7162,"src":"4030:13:29"},"referencedDeclaration":7162,"src":"4030:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":7420,"initialValue":{"arguments":[{"expression":{"id":7414,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"4072:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4077:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"4072:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7416,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"4091:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4097:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4091:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7413,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":7673,"src":"4058:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7162_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4058:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4030:69:29"},{"expression":{"components":[{"hexValue":"74727565","id":7421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4121:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":7422,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7412,"src":"4127:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":7423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4132:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7159,"src":"4127:9:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":7424,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7412,"src":"4138:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":7425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4143:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7161,"src":"4138:11:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":7426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4120:30:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":7394,"id":7427,"nodeType":"Return","src":"4113:37:29"}]},"id":7429,"nodeType":"IfStatement","src":"3951:210:29","trueBody":{"id":7409,"nodeType":"Block","src":"3965:45:29","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":7404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3987:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3994:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3986:13:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":7394,"id":7408,"nodeType":"Return","src":"3979:20:29"}]}}]},"documentation":{"id":7383,"nodeType":"StructuredDocumentation","src":"3606:168:29","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":7431,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"3788:16:29","nodeType":"FunctionDefinition","parameters":{"id":7387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7386,"mutability":"mutable","name":"self","nameLocation":"3822:4:29","nodeType":"VariableDeclaration","scope":7431,"src":"3805:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7385,"nodeType":"UserDefinedTypeName","pathNode":{"id":7384,"name":"Trace224","nameLocations":["3805:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":7157,"src":"3805:8:29"},"referencedDeclaration":7157,"src":"3805:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3804:23:29"},"returnParameters":{"id":7394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7389,"mutability":"mutable","name":"exists","nameLocation":"3856:6:29","nodeType":"VariableDeclaration","scope":7431,"src":"3851:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7388,"name":"bool","nodeType":"ElementaryTypeName","src":"3851:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7391,"mutability":"mutable","name":"_key","nameLocation":"3871:4:29","nodeType":"VariableDeclaration","scope":7431,"src":"3864:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7390,"name":"uint32","nodeType":"ElementaryTypeName","src":"3864:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7393,"mutability":"mutable","name":"_value","nameLocation":"3885:6:29","nodeType":"VariableDeclaration","scope":7431,"src":"3877:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7392,"name":"uint224","nodeType":"ElementaryTypeName","src":"3877:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3850:42:29"},"scope":8716,"src":"3779:388:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7444,"nodeType":"Block","src":"4306:48:29","statements":[{"expression":{"expression":{"expression":{"id":7440,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"4323:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4328:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"4323:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4341:6:29","memberName":"length","nodeType":"MemberAccess","src":"4323:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7439,"id":7443,"nodeType":"Return","src":"4316:31:29"}]},"documentation":{"id":7432,"nodeType":"StructuredDocumentation","src":"4173:57:29","text":" @dev Returns the number of checkpoint."},"id":7445,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"4244:6:29","nodeType":"FunctionDefinition","parameters":{"id":7436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7435,"mutability":"mutable","name":"self","nameLocation":"4268:4:29","nodeType":"VariableDeclaration","scope":7445,"src":"4251:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7434,"nodeType":"UserDefinedTypeName","pathNode":{"id":7433,"name":"Trace224","nameLocations":["4251:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":7157,"src":"4251:8:29"},"referencedDeclaration":7157,"src":"4251:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"4250:23:29"},"returnParameters":{"id":7439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7445,"src":"4297:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7437,"name":"uint256","nodeType":"ElementaryTypeName","src":"4297:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4296:9:29"},"scope":8716,"src":"4235:119:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7462,"nodeType":"Block","src":"4518:46:29","statements":[{"expression":{"baseExpression":{"expression":{"id":7457,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"4535:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4540:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"4535:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7460,"indexExpression":{"id":7459,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7451,"src":"4553:3:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4535:22:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref"}},"functionReturnParameters":7456,"id":7461,"nodeType":"Return","src":"4528:29:29"}]},"documentation":{"id":7446,"nodeType":"StructuredDocumentation","src":"4360:61:29","text":" @dev Returns checkpoint at given position."},"id":7463,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"4435:2:29","nodeType":"FunctionDefinition","parameters":{"id":7452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7449,"mutability":"mutable","name":"self","nameLocation":"4455:4:29","nodeType":"VariableDeclaration","scope":7463,"src":"4438:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7448,"nodeType":"UserDefinedTypeName","pathNode":{"id":7447,"name":"Trace224","nameLocations":["4438:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":7157,"src":"4438:8:29"},"referencedDeclaration":7157,"src":"4438:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7157_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7451,"mutability":"mutable","name":"pos","nameLocation":"4468:3:29","nodeType":"VariableDeclaration","scope":7463,"src":"4461:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7450,"name":"uint32","nodeType":"ElementaryTypeName","src":"4461:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4437:35:29"},"returnParameters":{"id":7456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7463,"src":"4496:20:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":7454,"nodeType":"UserDefinedTypeName","pathNode":{"id":7453,"name":"Checkpoint224","nameLocations":["4496:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7162,"src":"4496:13:29"},"referencedDeclaration":7162,"src":"4496:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"4495:22:29"},"scope":8716,"src":"4426:138:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7553,"nodeType":"Block","src":"4849:761:29","statements":[{"assignments":[7480],"declarations":[{"constant":false,"id":7480,"mutability":"mutable","name":"pos","nameLocation":"4867:3:29","nodeType":"VariableDeclaration","scope":7553,"src":"4859:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7479,"name":"uint256","nodeType":"ElementaryTypeName","src":"4859:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7483,"initialValue":{"expression":{"id":7481,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"4873:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":7482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4878:6:29","memberName":"length","nodeType":"MemberAccess","src":"4873:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4859:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7484,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"4899:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4899:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7551,"nodeType":"Block","src":"5496:108:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":7542,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"5541:3:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"5554:5:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":7541,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"5520:13:29","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$7162_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5535:4:29","5546:6:29"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5520:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$7162_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":7538,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"5510:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":7540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5515:4:29","memberName":"push","nodeType":"MemberAccess","src":"5510:9:29","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$7162_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":7545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5510:52:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7546,"nodeType":"ExpressionStatement","src":"5510:52:29"},{"expression":{"components":[{"hexValue":"30","id":7547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5584:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"5587:5:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":7549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5583:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":7478,"id":7550,"nodeType":"Return","src":"5576:17:29"}]},"id":7552,"nodeType":"IfStatement","src":"4895:709:29","trueBody":{"id":7537,"nodeType":"Block","src":"4908:582:29","statements":[{"assignments":[7489],"declarations":[{"constant":false,"id":7489,"mutability":"mutable","name":"last","nameLocation":"4995:4:29","nodeType":"VariableDeclaration","scope":7537,"src":"4974:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":7488,"nodeType":"UserDefinedTypeName","pathNode":{"id":7487,"name":"Checkpoint224","nameLocations":["4974:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7162,"src":"4974:13:29"},"referencedDeclaration":7162,"src":"4974:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":7496,"initialValue":{"arguments":[{"id":7491,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"5016:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7492,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"5022:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5028:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5022:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7490,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":7673,"src":"5002:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7162_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5002:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4974:56:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7497,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"5104:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":7498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5109:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7159,"src":"5104:9:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7499,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"5116:3:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5104:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7505,"nodeType":"IfStatement","src":"5100:91:29","trueBody":{"id":7504,"nodeType":"Block","src":"5121:70:29","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7501,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7152,"src":"5146:28:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5146:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7503,"nodeType":"RevertStatement","src":"5139:37:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7506,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"5254:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":7507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5259:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7159,"src":"5254:9:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7508,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"5267:3:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5254:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7530,"nodeType":"Block","src":"5354:85:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":7525,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"5403:3:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"5416:5:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":7524,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"5382:13:29","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$7162_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5397:4:29","5408:6:29"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5382:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$7162_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":7521,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"5372:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":7523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5377:4:29","memberName":"push","nodeType":"MemberAccess","src":"5372:9:29","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$7162_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":7528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5372:52:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7529,"nodeType":"ExpressionStatement","src":"5372:52:29"}]},"id":7531,"nodeType":"IfStatement","src":"5250:189:29","trueBody":{"id":7520,"nodeType":"Block","src":"5272:76:29","statements":[{"expression":{"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":7511,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"5304:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7512,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"5310:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5316:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5310:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7510,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":7673,"src":"5290:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7162_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5290:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5319:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7161,"src":"5290:35:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"5328:5:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"5290:43:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7519,"nodeType":"ExpressionStatement","src":"5290:43:29"}]}},{"expression":{"components":[{"expression":{"id":7532,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"5460:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":7533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5465:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7161,"src":"5460:11:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":7534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"5473:5:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":7535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5459:20:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":7478,"id":7536,"nodeType":"Return","src":"5452:27:29"}]}}]},"documentation":{"id":7464,"nodeType":"StructuredDocumentation","src":"4570:165:29","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":7554,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"4749:7:29","nodeType":"FunctionDefinition","parameters":{"id":7473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7468,"mutability":"mutable","name":"self","nameLocation":"4781:4:29","nodeType":"VariableDeclaration","scope":7554,"src":"4757:28:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7466,"nodeType":"UserDefinedTypeName","pathNode":{"id":7465,"name":"Checkpoint224","nameLocations":["4757:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7162,"src":"4757:13:29"},"referencedDeclaration":7162,"src":"4757:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7467,"nodeType":"ArrayTypeName","src":"4757:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":7470,"mutability":"mutable","name":"key","nameLocation":"4794:3:29","nodeType":"VariableDeclaration","scope":7554,"src":"4787:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7469,"name":"uint32","nodeType":"ElementaryTypeName","src":"4787:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7472,"mutability":"mutable","name":"value","nameLocation":"4807:5:29","nodeType":"VariableDeclaration","scope":7554,"src":"4799:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7471,"name":"uint224","nodeType":"ElementaryTypeName","src":"4799:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4756:57:29"},"returnParameters":{"id":7478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7554,"src":"4831:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7474,"name":"uint224","nodeType":"ElementaryTypeName","src":"4831:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":7477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7554,"src":"4840:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7476,"name":"uint224","nodeType":"ElementaryTypeName","src":"4840:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4830:18:29"},"scope":8716,"src":"4740:870:29","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7605,"nodeType":"Block","src":"6129:267:29","statements":[{"body":{"id":7601,"nodeType":"Block","src":"6158:211:29","statements":[{"assignments":[7574],"declarations":[{"constant":false,"id":7574,"mutability":"mutable","name":"mid","nameLocation":"6180:3:29","nodeType":"VariableDeclaration","scope":7601,"src":"6172:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7573,"name":"uint256","nodeType":"ElementaryTypeName","src":"6172:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7580,"initialValue":{"arguments":[{"id":7577,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"6199:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7578,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"6204:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7575,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"6186:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5284_$","typeString":"type(library Math)"}},"id":7576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6191:7:29","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4458,"src":"6186:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6172:37:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7582,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"6241:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":7583,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7574,"src":"6247:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7581,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":7673,"src":"6227:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7162_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6227:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6252:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7159,"src":"6227:29:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7586,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"6259:3:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6227:35:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7599,"nodeType":"Block","src":"6313:46:29","statements":[{"expression":{"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7593,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"6331:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7594,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7574,"src":"6337:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6343:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6337:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6331:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7598,"nodeType":"ExpressionStatement","src":"6331:13:29"}]},"id":7600,"nodeType":"IfStatement","src":"6223:136:29","trueBody":{"id":7592,"nodeType":"Block","src":"6264:43:29","statements":[{"expression":{"id":7590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7588,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"6282:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7589,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7574,"src":"6289:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6282:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7591,"nodeType":"ExpressionStatement","src":"6282:10:29"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7570,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"6146:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7571,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"6152:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6146:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7602,"nodeType":"WhileStatement","src":"6139:230:29"},{"expression":{"id":7603,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"6385:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7569,"id":7604,"nodeType":"Return","src":"6378:11:29"}]},"documentation":{"id":7555,"nodeType":"StructuredDocumentation","src":"5616:342:29","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7606,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"5972:18:29","nodeType":"FunctionDefinition","parameters":{"id":7566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7559,"mutability":"mutable","name":"self","nameLocation":"6024:4:29","nodeType":"VariableDeclaration","scope":7606,"src":"6000:28:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7557,"nodeType":"UserDefinedTypeName","pathNode":{"id":7556,"name":"Checkpoint224","nameLocations":["6000:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7162,"src":"6000:13:29"},"referencedDeclaration":7162,"src":"6000:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7558,"nodeType":"ArrayTypeName","src":"6000:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":7561,"mutability":"mutable","name":"key","nameLocation":"6045:3:29","nodeType":"VariableDeclaration","scope":7606,"src":"6038:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7560,"name":"uint32","nodeType":"ElementaryTypeName","src":"6038:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7563,"mutability":"mutable","name":"low","nameLocation":"6066:3:29","nodeType":"VariableDeclaration","scope":7606,"src":"6058:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7562,"name":"uint256","nodeType":"ElementaryTypeName","src":"6058:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7565,"mutability":"mutable","name":"high","nameLocation":"6087:4:29","nodeType":"VariableDeclaration","scope":7606,"src":"6079:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7564,"name":"uint256","nodeType":"ElementaryTypeName","src":"6079:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5990:107:29"},"returnParameters":{"id":7569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7606,"src":"6120:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7567,"name":"uint256","nodeType":"ElementaryTypeName","src":"6120:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6119:9:29"},"scope":8716,"src":"5963:433:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7657,"nodeType":"Block","src":"6916:267:29","statements":[{"body":{"id":7653,"nodeType":"Block","src":"6945:211:29","statements":[{"assignments":[7626],"declarations":[{"constant":false,"id":7626,"mutability":"mutable","name":"mid","nameLocation":"6967:3:29","nodeType":"VariableDeclaration","scope":7653,"src":"6959:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7625,"name":"uint256","nodeType":"ElementaryTypeName","src":"6959:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7632,"initialValue":{"arguments":[{"id":7629,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"6986:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7630,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"6991:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7627,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"6973:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5284_$","typeString":"type(library Math)"}},"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6978:7:29","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4458,"src":"6973:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6973:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6959:37:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7634,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7611,"src":"7028:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":7635,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"7034:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7633,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":7673,"src":"7014:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7162_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7014:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7637,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7039:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7159,"src":"7014:29:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7638,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"7046:3:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7014:35:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7651,"nodeType":"Block","src":"7103:43:29","statements":[{"expression":{"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7647,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"7121:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7648,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"7128:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7121:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7650,"nodeType":"ExpressionStatement","src":"7121:10:29"}]},"id":7652,"nodeType":"IfStatement","src":"7010:136:29","trueBody":{"id":7646,"nodeType":"Block","src":"7051:46:29","statements":[{"expression":{"id":7644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7640,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"7069:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7641,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"7075:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7081:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7075:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7069:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7645,"nodeType":"ExpressionStatement","src":"7069:13:29"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7622,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"6933:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7623,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"6939:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7654,"nodeType":"WhileStatement","src":"6926:230:29"},{"expression":{"id":7655,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"7172:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7621,"id":7656,"nodeType":"Return","src":"7165:11:29"}]},"documentation":{"id":7607,"nodeType":"StructuredDocumentation","src":"6402:343:29","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7658,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"6759:18:29","nodeType":"FunctionDefinition","parameters":{"id":7618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7611,"mutability":"mutable","name":"self","nameLocation":"6811:4:29","nodeType":"VariableDeclaration","scope":7658,"src":"6787:28:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7609,"nodeType":"UserDefinedTypeName","pathNode":{"id":7608,"name":"Checkpoint224","nameLocations":["6787:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7162,"src":"6787:13:29"},"referencedDeclaration":7162,"src":"6787:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7610,"nodeType":"ArrayTypeName","src":"6787:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":7613,"mutability":"mutable","name":"key","nameLocation":"6832:3:29","nodeType":"VariableDeclaration","scope":7658,"src":"6825:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7612,"name":"uint32","nodeType":"ElementaryTypeName","src":"6825:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7615,"mutability":"mutable","name":"low","nameLocation":"6853:3:29","nodeType":"VariableDeclaration","scope":7658,"src":"6845:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7614,"name":"uint256","nodeType":"ElementaryTypeName","src":"6845:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7617,"mutability":"mutable","name":"high","nameLocation":"6874:4:29","nodeType":"VariableDeclaration","scope":7658,"src":"6866:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7616,"name":"uint256","nodeType":"ElementaryTypeName","src":"6866:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6777:107:29"},"returnParameters":{"id":7621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7658,"src":"6907:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7619,"name":"uint256","nodeType":"ElementaryTypeName","src":"6907:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6906:9:29"},"scope":8716,"src":"6750:433:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7672,"nodeType":"Block","src":"7466:125:29","statements":[{"AST":{"nodeType":"YulBlock","src":"7485:100:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7506:1:29","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"7509:9:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7499:6:29"},"nodeType":"YulFunctionCall","src":"7499:20:29"},"nodeType":"YulExpressionStatement","src":"7499:20:29"},{"nodeType":"YulAssignment","src":"7532:43:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7561:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7564:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7551:9:29"},"nodeType":"YulFunctionCall","src":"7551:18:29"},{"name":"pos","nodeType":"YulIdentifier","src":"7571:3:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7547:3:29"},"nodeType":"YulFunctionCall","src":"7547:28:29"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"7532:11:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7665,"isOffset":false,"isSlot":false,"src":"7571:3:29","valueSize":1},{"declaration":7669,"isOffset":false,"isSlot":true,"src":"7532:11:29","suffix":"slot","valueSize":1},{"declaration":7663,"isOffset":false,"isSlot":true,"src":"7509:9:29","suffix":"slot","valueSize":1}],"id":7671,"nodeType":"InlineAssembly","src":"7476:109:29"}]},"documentation":{"id":7659,"nodeType":"StructuredDocumentation","src":"7189:132:29","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":7673,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"7335:13:29","nodeType":"FunctionDefinition","parameters":{"id":7666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7663,"mutability":"mutable","name":"self","nameLocation":"7382:4:29","nodeType":"VariableDeclaration","scope":7673,"src":"7358:28:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7661,"nodeType":"UserDefinedTypeName","pathNode":{"id":7660,"name":"Checkpoint224","nameLocations":["7358:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7162,"src":"7358:13:29"},"referencedDeclaration":7162,"src":"7358:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7662,"nodeType":"ArrayTypeName","src":"7358:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7162_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":7665,"mutability":"mutable","name":"pos","nameLocation":"7404:3:29","nodeType":"VariableDeclaration","scope":7673,"src":"7396:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7664,"name":"uint256","nodeType":"ElementaryTypeName","src":"7396:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7348:65:29"},"returnParameters":{"id":7670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7669,"mutability":"mutable","name":"result","nameLocation":"7458:6:29","nodeType":"VariableDeclaration","scope":7673,"src":"7436:28:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":7668,"nodeType":"UserDefinedTypeName","pathNode":{"id":7667,"name":"Checkpoint224","nameLocations":["7436:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7162,"src":"7436:13:29"},"referencedDeclaration":7162,"src":"7436:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7162_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"7435:30:29"},"scope":8716,"src":"7326:265:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace208","id":7678,"members":[{"constant":false,"id":7677,"mutability":"mutable","name":"_checkpoints","nameLocation":"7639:12:29","nodeType":"VariableDeclaration","scope":7678,"src":"7623:28:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":7675,"nodeType":"UserDefinedTypeName","pathNode":{"id":7674,"name":"Checkpoint208","nameLocations":["7623:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7683,"src":"7623:13:29"},"referencedDeclaration":7683,"src":"7623:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":7676,"nodeType":"ArrayTypeName","src":"7623:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"}],"name":"Trace208","nameLocation":"7604:8:29","nodeType":"StructDefinition","scope":8716,"src":"7597:61:29","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint208","id":7683,"members":[{"constant":false,"id":7680,"mutability":"mutable","name":"_key","nameLocation":"7702:4:29","nodeType":"VariableDeclaration","scope":7683,"src":"7695:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7679,"name":"uint48","nodeType":"ElementaryTypeName","src":"7695:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7682,"mutability":"mutable","name":"_value","nameLocation":"7724:6:29","nodeType":"VariableDeclaration","scope":7683,"src":"7716:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7681,"name":"uint208","nodeType":"ElementaryTypeName","src":"7716:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"name":"Checkpoint208","nameLocation":"7671:13:29","nodeType":"StructDefinition","scope":8716,"src":"7664:73:29","visibility":"public"},{"body":{"id":7705,"nodeType":"Block","src":"8150:62:29","statements":[{"expression":{"arguments":[{"expression":{"id":7699,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"8175:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8180:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7677,"src":"8175:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7701,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7689,"src":"8194:3:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":7702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"8199:5:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":7698,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[7554,8075,8596],"referencedDeclaration":8075,"src":"8167:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":7703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8167:38:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":7697,"id":7704,"nodeType":"Return","src":"8160:45:29"}]},"documentation":{"id":7684,"nodeType":"StructuredDocumentation","src":"7743:302:29","text":" @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n library."},"id":7706,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"8059:4:29","nodeType":"FunctionDefinition","parameters":{"id":7692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7687,"mutability":"mutable","name":"self","nameLocation":"8081:4:29","nodeType":"VariableDeclaration","scope":7706,"src":"8064:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7686,"nodeType":"UserDefinedTypeName","pathNode":{"id":7685,"name":"Trace208","nameLocations":["8064:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":7678,"src":"8064:8:29"},"referencedDeclaration":7678,"src":"8064:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7689,"mutability":"mutable","name":"key","nameLocation":"8094:3:29","nodeType":"VariableDeclaration","scope":7706,"src":"8087:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7688,"name":"uint48","nodeType":"ElementaryTypeName","src":"8087:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7691,"mutability":"mutable","name":"value","nameLocation":"8107:5:29","nodeType":"VariableDeclaration","scope":7706,"src":"8099:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7690,"name":"uint208","nodeType":"ElementaryTypeName","src":"8099:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8063:50:29"},"returnParameters":{"id":7697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7706,"src":"8132:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7693,"name":"uint208","nodeType":"ElementaryTypeName","src":"8132:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":7696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7706,"src":"8141:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7695,"name":"uint208","nodeType":"ElementaryTypeName","src":"8141:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8131:18:29"},"scope":8716,"src":"8050:162:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7745,"nodeType":"Block","src":"8465:207:29","statements":[{"assignments":[7718],"declarations":[{"constant":false,"id":7718,"mutability":"mutable","name":"len","nameLocation":"8483:3:29","nodeType":"VariableDeclaration","scope":7745,"src":"8475:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7717,"name":"uint256","nodeType":"ElementaryTypeName","src":"8475:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7722,"initialValue":{"expression":{"expression":{"id":7719,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7710,"src":"8489:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8494:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7677,"src":"8489:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8507:6:29","memberName":"length","nodeType":"MemberAccess","src":"8489:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8475:38:29"},{"assignments":[7724],"declarations":[{"constant":false,"id":7724,"mutability":"mutable","name":"pos","nameLocation":"8531:3:29","nodeType":"VariableDeclaration","scope":7745,"src":"8523:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7723,"name":"uint256","nodeType":"ElementaryTypeName","src":"8523:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7732,"initialValue":{"arguments":[{"expression":{"id":7726,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7710,"src":"8556:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8561:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7677,"src":"8556:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7728,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"8575:3:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":7729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7730,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7718,"src":"8583:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7725,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7658,8179,8700],"referencedDeclaration":8179,"src":"8537:18:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":7731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8537:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8523:64:29"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7733,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"8604:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7734,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7718,"src":"8611:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8604:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7738,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7710,"src":"8635:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8640:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7677,"src":"8635:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7740,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"8654:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7737,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8194,"src":"8621:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8621:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8659:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7682,"src":"8621:44:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8604:61:29","trueExpression":{"hexValue":"30","id":7736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8617:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7716,"id":7744,"nodeType":"Return","src":"8597:68:29"}]},"documentation":{"id":7707,"nodeType":"StructuredDocumentation","src":"8218:154:29","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":7746,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"8386:11:29","nodeType":"FunctionDefinition","parameters":{"id":7713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7710,"mutability":"mutable","name":"self","nameLocation":"8415:4:29","nodeType":"VariableDeclaration","scope":7746,"src":"8398:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7709,"nodeType":"UserDefinedTypeName","pathNode":{"id":7708,"name":"Trace208","nameLocations":["8398:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":7678,"src":"8398:8:29"},"referencedDeclaration":7678,"src":"8398:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7712,"mutability":"mutable","name":"key","nameLocation":"8428:3:29","nodeType":"VariableDeclaration","scope":7746,"src":"8421:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7711,"name":"uint48","nodeType":"ElementaryTypeName","src":"8421:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"8397:35:29"},"returnParameters":{"id":7716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7746,"src":"8456:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7714,"name":"uint208","nodeType":"ElementaryTypeName","src":"8456:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8455:9:29"},"scope":8716,"src":"8377:295:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7787,"nodeType":"Block","src":"8927:209:29","statements":[{"assignments":[7758],"declarations":[{"constant":false,"id":7758,"mutability":"mutable","name":"len","nameLocation":"8945:3:29","nodeType":"VariableDeclaration","scope":7787,"src":"8937:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7757,"name":"uint256","nodeType":"ElementaryTypeName","src":"8937:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7762,"initialValue":{"expression":{"expression":{"id":7759,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"8951:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8956:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7677,"src":"8951:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8969:6:29","memberName":"length","nodeType":"MemberAccess","src":"8951:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8937:38:29"},{"assignments":[7764],"declarations":[{"constant":false,"id":7764,"mutability":"mutable","name":"pos","nameLocation":"8993:3:29","nodeType":"VariableDeclaration","scope":7787,"src":"8985:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7763,"name":"uint256","nodeType":"ElementaryTypeName","src":"8985:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7772,"initialValue":{"arguments":[{"expression":{"id":7766,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"9018:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9023:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7677,"src":"9018:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7768,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"9037:3:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":7769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9042:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7770,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7758,"src":"9045:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7765,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7606,8127,8648],"referencedDeclaration":8127,"src":"8999:18:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8985:64:29"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7773,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7764,"src":"9066:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9073:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9066:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7778,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"9095:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9100:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7677,"src":"9095:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7780,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7764,"src":"9114:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9120:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9114:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7777,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8194,"src":"9081:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9081:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9123:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7682,"src":"9081:48:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9066:63:29","trueExpression":{"hexValue":"30","id":7776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9077:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7756,"id":7786,"nodeType":"Return","src":"9059:70:29"}]},"documentation":{"id":7747,"nodeType":"StructuredDocumentation","src":"8678:156:29","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":7788,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"8848:11:29","nodeType":"FunctionDefinition","parameters":{"id":7753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7750,"mutability":"mutable","name":"self","nameLocation":"8877:4:29","nodeType":"VariableDeclaration","scope":7788,"src":"8860:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7749,"nodeType":"UserDefinedTypeName","pathNode":{"id":7748,"name":"Trace208","nameLocations":["8860:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":7678,"src":"8860:8:29"},"referencedDeclaration":7678,"src":"8860:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7752,"mutability":"mutable","name":"key","nameLocation":"8890:3:29","nodeType":"VariableDeclaration","scope":7788,"src":"8883:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7751,"name":"uint48","nodeType":"ElementaryTypeName","src":"8883:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"8859:35:29"},"returnParameters":{"id":7756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7788,"src":"8918:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7754,"name":"uint208","nodeType":"ElementaryTypeName","src":"8918:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8917:9:29"},"scope":8716,"src":"8839:297:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7872,"nodeType":"Block","src":"9535:512:29","statements":[{"assignments":[7800],"declarations":[{"constant":false,"id":7800,"mutability":"mutable","name":"len","nameLocation":"9553:3:29","nodeType":"VariableDeclaration","scope":7872,"src":"9545:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7799,"name":"uint256","nodeType":"ElementaryTypeName","src":"9545:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7804,"initialValue":{"expression":{"expression":{"id":7801,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"9559:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9564:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7677,"src":"9559:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9577:6:29","memberName":"length","nodeType":"MemberAccess","src":"9559:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9545:38:29"},{"assignments":[7806],"declarations":[{"constant":false,"id":7806,"mutability":"mutable","name":"low","nameLocation":"9602:3:29","nodeType":"VariableDeclaration","scope":7872,"src":"9594:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7805,"name":"uint256","nodeType":"ElementaryTypeName","src":"9594:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7808,"initialValue":{"hexValue":"30","id":7807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9608:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9594:15:29"},{"assignments":[7810],"declarations":[{"constant":false,"id":7810,"mutability":"mutable","name":"high","nameLocation":"9627:4:29","nodeType":"VariableDeclaration","scope":7872,"src":"9619:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7809,"name":"uint256","nodeType":"ElementaryTypeName","src":"9619:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7812,"initialValue":{"id":7811,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7800,"src":"9634:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9619:18:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7813,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7800,"src":"9652:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":7814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9658:1:29","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"9652:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7847,"nodeType":"IfStatement","src":"9648:234:29","trueBody":{"id":7846,"nodeType":"Block","src":"9661:221:29","statements":[{"assignments":[7817],"declarations":[{"constant":false,"id":7817,"mutability":"mutable","name":"mid","nameLocation":"9683:3:29","nodeType":"VariableDeclaration","scope":7846,"src":"9675:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7816,"name":"uint256","nodeType":"ElementaryTypeName","src":"9675:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7824,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7818,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7800,"src":"9689:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":7821,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7800,"src":"9705:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7819,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"9695:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5284_$","typeString":"type(library Math)"}},"id":7820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9700:4:29","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4773,"src":"9695:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9695:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9689:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9675:34:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7825,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"9727:3:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":7827,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"9747:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9752:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7677,"src":"9747:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7829,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7817,"src":"9766:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7826,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8194,"src":"9733:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9733:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7831,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9771:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7680,"src":"9733:42:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"9727:48:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7844,"nodeType":"Block","src":"9826:46:29","statements":[{"expression":{"id":7842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7838,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7806,"src":"9844:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7839,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7817,"src":"9850:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9856:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9850:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9844:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7843,"nodeType":"ExpressionStatement","src":"9844:13:29"}]},"id":7845,"nodeType":"IfStatement","src":"9723:149:29","trueBody":{"id":7837,"nodeType":"Block","src":"9777:43:29","statements":[{"expression":{"id":7835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7833,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"9795:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7834,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7817,"src":"9802:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9795:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7836,"nodeType":"ExpressionStatement","src":"9795:10:29"}]}}]}},{"assignments":[7849],"declarations":[{"constant":false,"id":7849,"mutability":"mutable","name":"pos","nameLocation":"9900:3:29","nodeType":"VariableDeclaration","scope":7872,"src":"9892:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7848,"name":"uint256","nodeType":"ElementaryTypeName","src":"9892:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7857,"initialValue":{"arguments":[{"expression":{"id":7851,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"9925:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9930:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7677,"src":"9925:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7853,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"9944:3:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":7854,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7806,"src":"9949:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7855,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"9954:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7850,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7606,8127,8648],"referencedDeclaration":8127,"src":"9906:18:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":7856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9906:53:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9892:67:29"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7858,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"9977:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9984:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9977:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7863,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"10006:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10011:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7677,"src":"10006:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7865,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"10025:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10031:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10025:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7862,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8194,"src":"9992:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9992:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10034:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7682,"src":"9992:48:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9977:63:29","trueExpression":{"hexValue":"30","id":7861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9988:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7798,"id":7871,"nodeType":"Return","src":"9970:70:29"}]},"documentation":{"id":7789,"nodeType":"StructuredDocumentation","src":"9142:294:29","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":7873,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"9450:17:29","nodeType":"FunctionDefinition","parameters":{"id":7795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7792,"mutability":"mutable","name":"self","nameLocation":"9485:4:29","nodeType":"VariableDeclaration","scope":7873,"src":"9468:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7791,"nodeType":"UserDefinedTypeName","pathNode":{"id":7790,"name":"Trace208","nameLocations":["9468:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":7678,"src":"9468:8:29"},"referencedDeclaration":7678,"src":"9468:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7794,"mutability":"mutable","name":"key","nameLocation":"9498:3:29","nodeType":"VariableDeclaration","scope":7873,"src":"9491:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7793,"name":"uint48","nodeType":"ElementaryTypeName","src":"9491:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"9467:35:29"},"returnParameters":{"id":7798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7873,"src":"9526:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7796,"name":"uint208","nodeType":"ElementaryTypeName","src":"9526:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9525:9:29"},"scope":8716,"src":"9441:606:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7902,"nodeType":"Block","src":"10238:135:29","statements":[{"assignments":[7883],"declarations":[{"constant":false,"id":7883,"mutability":"mutable","name":"pos","nameLocation":"10256:3:29","nodeType":"VariableDeclaration","scope":7902,"src":"10248:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7882,"name":"uint256","nodeType":"ElementaryTypeName","src":"10248:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7887,"initialValue":{"expression":{"expression":{"id":7884,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"10262:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10267:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7677,"src":"10262:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10280:6:29","memberName":"length","nodeType":"MemberAccess","src":"10262:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10248:38:29"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7888,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"10303:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10310:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10303:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7893,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"10332:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7894,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10337:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7677,"src":"10332:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7895,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"10351:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10357:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10351:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7892,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8194,"src":"10318:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10318:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10360:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7682,"src":"10318:48:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10303:63:29","trueExpression":{"hexValue":"30","id":7891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10314:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7881,"id":7901,"nodeType":"Return","src":"10296:70:29"}]},"documentation":{"id":7874,"nodeType":"StructuredDocumentation","src":"10053:109:29","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":7903,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"10176:6:29","nodeType":"FunctionDefinition","parameters":{"id":7878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7877,"mutability":"mutable","name":"self","nameLocation":"10200:4:29","nodeType":"VariableDeclaration","scope":7903,"src":"10183:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7876,"nodeType":"UserDefinedTypeName","pathNode":{"id":7875,"name":"Trace208","nameLocations":["10183:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":7678,"src":"10183:8:29"},"referencedDeclaration":7678,"src":"10183:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10182:23:29"},"returnParameters":{"id":7881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7903,"src":"10229:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7879,"name":"uint208","nodeType":"ElementaryTypeName","src":"10229:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10228:9:29"},"scope":8716,"src":"10167:206:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7951,"nodeType":"Block","src":"10666:274:29","statements":[{"assignments":[7917],"declarations":[{"constant":false,"id":7917,"mutability":"mutable","name":"pos","nameLocation":"10684:3:29","nodeType":"VariableDeclaration","scope":7951,"src":"10676:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7916,"name":"uint256","nodeType":"ElementaryTypeName","src":"10676:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7921,"initialValue":{"expression":{"expression":{"id":7918,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7907,"src":"10690:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10695:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7677,"src":"10690:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10708:6:29","memberName":"length","nodeType":"MemberAccess","src":"10690:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10676:38:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7922,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"10728:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10735:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10728:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7949,"nodeType":"Block","src":"10789:145:29","statements":[{"assignments":[7933],"declarations":[{"constant":false,"id":7933,"mutability":"mutable","name":"ckpt","nameLocation":"10824:4:29","nodeType":"VariableDeclaration","scope":7949,"src":"10803:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":7932,"nodeType":"UserDefinedTypeName","pathNode":{"id":7931,"name":"Checkpoint208","nameLocations":["10803:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7683,"src":"10803:13:29"},"referencedDeclaration":7683,"src":"10803:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":7941,"initialValue":{"arguments":[{"expression":{"id":7935,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7907,"src":"10845:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10850:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7677,"src":"10845:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7937,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"10864:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10870:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10864:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7934,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8194,"src":"10831:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10831:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10803:69:29"},{"expression":{"components":[{"hexValue":"74727565","id":7942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10894:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":7943,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7933,"src":"10900:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":7944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10905:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7680,"src":"10900:9:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"expression":{"id":7945,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7933,"src":"10911:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":7946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10916:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7682,"src":"10911:11:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":7947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10893:30:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint48_$_t_uint208_$","typeString":"tuple(bool,uint48,uint208)"}},"functionReturnParameters":7915,"id":7948,"nodeType":"Return","src":"10886:37:29"}]},"id":7950,"nodeType":"IfStatement","src":"10724:210:29","trueBody":{"id":7930,"nodeType":"Block","src":"10738:45:29","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":7925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10760:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10767:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10770:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7928,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10759:13:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":7915,"id":7929,"nodeType":"Return","src":"10752:20:29"}]}}]},"documentation":{"id":7904,"nodeType":"StructuredDocumentation","src":"10379:168:29","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":7952,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"10561:16:29","nodeType":"FunctionDefinition","parameters":{"id":7908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7907,"mutability":"mutable","name":"self","nameLocation":"10595:4:29","nodeType":"VariableDeclaration","scope":7952,"src":"10578:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7906,"nodeType":"UserDefinedTypeName","pathNode":{"id":7905,"name":"Trace208","nameLocations":["10578:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":7678,"src":"10578:8:29"},"referencedDeclaration":7678,"src":"10578:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10577:23:29"},"returnParameters":{"id":7915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7910,"mutability":"mutable","name":"exists","nameLocation":"10629:6:29","nodeType":"VariableDeclaration","scope":7952,"src":"10624:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7909,"name":"bool","nodeType":"ElementaryTypeName","src":"10624:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7912,"mutability":"mutable","name":"_key","nameLocation":"10644:4:29","nodeType":"VariableDeclaration","scope":7952,"src":"10637:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7911,"name":"uint48","nodeType":"ElementaryTypeName","src":"10637:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7914,"mutability":"mutable","name":"_value","nameLocation":"10658:6:29","nodeType":"VariableDeclaration","scope":7952,"src":"10650:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7913,"name":"uint208","nodeType":"ElementaryTypeName","src":"10650:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10623:42:29"},"scope":8716,"src":"10552:388:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7965,"nodeType":"Block","src":"11079:48:29","statements":[{"expression":{"expression":{"expression":{"id":7961,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7956,"src":"11096:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11101:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7677,"src":"11096:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11114:6:29","memberName":"length","nodeType":"MemberAccess","src":"11096:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7960,"id":7964,"nodeType":"Return","src":"11089:31:29"}]},"documentation":{"id":7953,"nodeType":"StructuredDocumentation","src":"10946:57:29","text":" @dev Returns the number of checkpoint."},"id":7966,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11017:6:29","nodeType":"FunctionDefinition","parameters":{"id":7957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7956,"mutability":"mutable","name":"self","nameLocation":"11041:4:29","nodeType":"VariableDeclaration","scope":7966,"src":"11024:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7955,"nodeType":"UserDefinedTypeName","pathNode":{"id":7954,"name":"Trace208","nameLocations":["11024:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":7678,"src":"11024:8:29"},"referencedDeclaration":7678,"src":"11024:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"11023:23:29"},"returnParameters":{"id":7960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7966,"src":"11070:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7958,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11069:9:29"},"scope":8716,"src":"11008:119:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7983,"nodeType":"Block","src":"11291:46:29","statements":[{"expression":{"baseExpression":{"expression":{"id":7978,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7970,"src":"11308:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11313:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7677,"src":"11308:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7981,"indexExpression":{"id":7980,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"11326:3:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11308:22:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref"}},"functionReturnParameters":7977,"id":7982,"nodeType":"Return","src":"11301:29:29"}]},"documentation":{"id":7967,"nodeType":"StructuredDocumentation","src":"11133:61:29","text":" @dev Returns checkpoint at given position."},"id":7984,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11208:2:29","nodeType":"FunctionDefinition","parameters":{"id":7973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7970,"mutability":"mutable","name":"self","nameLocation":"11228:4:29","nodeType":"VariableDeclaration","scope":7984,"src":"11211:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7969,"nodeType":"UserDefinedTypeName","pathNode":{"id":7968,"name":"Trace208","nameLocations":["11211:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":7678,"src":"11211:8:29"},"referencedDeclaration":7678,"src":"11211:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7678_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7972,"mutability":"mutable","name":"pos","nameLocation":"11241:3:29","nodeType":"VariableDeclaration","scope":7984,"src":"11234:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7971,"name":"uint32","nodeType":"ElementaryTypeName","src":"11234:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"11210:35:29"},"returnParameters":{"id":7977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7984,"src":"11269:20:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":7975,"nodeType":"UserDefinedTypeName","pathNode":{"id":7974,"name":"Checkpoint208","nameLocations":["11269:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7683,"src":"11269:13:29"},"referencedDeclaration":7683,"src":"11269:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"11268:22:29"},"scope":8716,"src":"11199:138:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8074,"nodeType":"Block","src":"11622:761:29","statements":[{"assignments":[8001],"declarations":[{"constant":false,"id":8001,"mutability":"mutable","name":"pos","nameLocation":"11640:3:29","nodeType":"VariableDeclaration","scope":8074,"src":"11632:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8000,"name":"uint256","nodeType":"ElementaryTypeName","src":"11632:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8004,"initialValue":{"expression":{"id":8002,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"11646:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11651:6:29","memberName":"length","nodeType":"MemberAccess","src":"11646:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11632:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8005,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8001,"src":"11672:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11678:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11672:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8072,"nodeType":"Block","src":"12269:108:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":8063,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"12314:3:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"12327:5:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":8062,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7683,"src":"12293:13:29","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$7683_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12308:4:29","12319:6:29"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12293:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$7683_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":8059,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"12283:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12288:4:29","memberName":"push","nodeType":"MemberAccess","src":"12283:9:29","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$7683_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":8066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:52:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8067,"nodeType":"ExpressionStatement","src":"12283:52:29"},{"expression":{"components":[{"hexValue":"30","id":8068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"12360:5:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":8070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12356:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint208_$","typeString":"tuple(int_const 0,uint208)"}},"functionReturnParameters":7999,"id":8071,"nodeType":"Return","src":"12349:17:29"}]},"id":8073,"nodeType":"IfStatement","src":"11668:709:29","trueBody":{"id":8058,"nodeType":"Block","src":"11681:582:29","statements":[{"assignments":[8010],"declarations":[{"constant":false,"id":8010,"mutability":"mutable","name":"last","nameLocation":"11768:4:29","nodeType":"VariableDeclaration","scope":8058,"src":"11747:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8009,"nodeType":"UserDefinedTypeName","pathNode":{"id":8008,"name":"Checkpoint208","nameLocations":["11747:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7683,"src":"11747:13:29"},"referencedDeclaration":7683,"src":"11747:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":8017,"initialValue":{"arguments":[{"id":8012,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"11789:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8013,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8001,"src":"11795:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11801:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11795:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8011,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8194,"src":"11775:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11775:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11747:56:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8018,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"11877:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":8019,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11882:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7680,"src":"11877:9:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8020,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"11889:3:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"11877:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8026,"nodeType":"IfStatement","src":"11873:91:29","trueBody":{"id":8025,"nodeType":"Block","src":"11894:70:29","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8022,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7152,"src":"11919:28:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11919:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8024,"nodeType":"RevertStatement","src":"11912:37:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8027,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"12027:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":8028,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12032:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7680,"src":"12027:9:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8029,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"12040:3:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"12027:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8051,"nodeType":"Block","src":"12127:85:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":8046,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"12176:3:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"12189:5:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":8045,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7683,"src":"12155:13:29","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$7683_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12170:4:29","12181:6:29"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12155:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$7683_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":8042,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"12145:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12150:4:29","memberName":"push","nodeType":"MemberAccess","src":"12145:9:29","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$7683_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12145:52:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8050,"nodeType":"ExpressionStatement","src":"12145:52:29"}]},"id":8052,"nodeType":"IfStatement","src":"12023:189:29","trueBody":{"id":8041,"nodeType":"Block","src":"12045:76:29","statements":[{"expression":{"id":8039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":8032,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"12077:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8033,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8001,"src":"12083:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12089:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12083:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8031,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8194,"src":"12063:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12063:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12092:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7682,"src":"12063:35:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"12101:5:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"12063:43:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8040,"nodeType":"ExpressionStatement","src":"12063:43:29"}]}},{"expression":{"components":[{"expression":{"id":8053,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"12233:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":8054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12238:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7682,"src":"12233:11:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":8055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"12246:5:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":8056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12232:20:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":7999,"id":8057,"nodeType":"Return","src":"12225:27:29"}]}}]},"documentation":{"id":7985,"nodeType":"StructuredDocumentation","src":"11343:165:29","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":8075,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"11522:7:29","nodeType":"FunctionDefinition","parameters":{"id":7994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7989,"mutability":"mutable","name":"self","nameLocation":"11554:4:29","nodeType":"VariableDeclaration","scope":8075,"src":"11530:28:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":7987,"nodeType":"UserDefinedTypeName","pathNode":{"id":7986,"name":"Checkpoint208","nameLocations":["11530:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7683,"src":"11530:13:29"},"referencedDeclaration":7683,"src":"11530:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":7988,"nodeType":"ArrayTypeName","src":"11530:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":7991,"mutability":"mutable","name":"key","nameLocation":"11567:3:29","nodeType":"VariableDeclaration","scope":8075,"src":"11560:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7990,"name":"uint48","nodeType":"ElementaryTypeName","src":"11560:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7993,"mutability":"mutable","name":"value","nameLocation":"11580:5:29","nodeType":"VariableDeclaration","scope":8075,"src":"11572:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7992,"name":"uint208","nodeType":"ElementaryTypeName","src":"11572:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11529:57:29"},"returnParameters":{"id":7999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8075,"src":"11604:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7995,"name":"uint208","nodeType":"ElementaryTypeName","src":"11604:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":7998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8075,"src":"11613:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7997,"name":"uint208","nodeType":"ElementaryTypeName","src":"11613:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11603:18:29"},"scope":8716,"src":"11513:870:29","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8126,"nodeType":"Block","src":"12902:267:29","statements":[{"body":{"id":8122,"nodeType":"Block","src":"12931:211:29","statements":[{"assignments":[8095],"declarations":[{"constant":false,"id":8095,"mutability":"mutable","name":"mid","nameLocation":"12953:3:29","nodeType":"VariableDeclaration","scope":8122,"src":"12945:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8094,"name":"uint256","nodeType":"ElementaryTypeName","src":"12945:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8101,"initialValue":{"arguments":[{"id":8098,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8084,"src":"12972:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8099,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8086,"src":"12977:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8096,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"12959:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5284_$","typeString":"type(library Math)"}},"id":8097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12964:7:29","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4458,"src":"12959:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12959:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12945:37:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8103,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"13014:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":8104,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"13020:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8102,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8194,"src":"13000:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13000:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13025:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7680,"src":"13000:29:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8107,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8082,"src":"13032:3:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13000:35:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8120,"nodeType":"Block","src":"13086:46:29","statements":[{"expression":{"id":8118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8114,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8084,"src":"13104:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8115,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"13110:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13116:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13110:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13104:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8119,"nodeType":"ExpressionStatement","src":"13104:13:29"}]},"id":8121,"nodeType":"IfStatement","src":"12996:136:29","trueBody":{"id":8113,"nodeType":"Block","src":"13037:43:29","statements":[{"expression":{"id":8111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8109,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8086,"src":"13055:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8110,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"13062:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13055:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8112,"nodeType":"ExpressionStatement","src":"13055:10:29"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8091,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8084,"src":"12919:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8092,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8086,"src":"12925:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12919:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8123,"nodeType":"WhileStatement","src":"12912:230:29"},{"expression":{"id":8124,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8086,"src":"13158:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8090,"id":8125,"nodeType":"Return","src":"13151:11:29"}]},"documentation":{"id":8076,"nodeType":"StructuredDocumentation","src":"12389:342:29","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8127,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"12745:18:29","nodeType":"FunctionDefinition","parameters":{"id":8087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8080,"mutability":"mutable","name":"self","nameLocation":"12797:4:29","nodeType":"VariableDeclaration","scope":8127,"src":"12773:28:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8078,"nodeType":"UserDefinedTypeName","pathNode":{"id":8077,"name":"Checkpoint208","nameLocations":["12773:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7683,"src":"12773:13:29"},"referencedDeclaration":7683,"src":"12773:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8079,"nodeType":"ArrayTypeName","src":"12773:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8082,"mutability":"mutable","name":"key","nameLocation":"12818:3:29","nodeType":"VariableDeclaration","scope":8127,"src":"12811:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8081,"name":"uint48","nodeType":"ElementaryTypeName","src":"12811:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8084,"mutability":"mutable","name":"low","nameLocation":"12839:3:29","nodeType":"VariableDeclaration","scope":8127,"src":"12831:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8083,"name":"uint256","nodeType":"ElementaryTypeName","src":"12831:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8086,"mutability":"mutable","name":"high","nameLocation":"12860:4:29","nodeType":"VariableDeclaration","scope":8127,"src":"12852:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8085,"name":"uint256","nodeType":"ElementaryTypeName","src":"12852:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12763:107:29"},"returnParameters":{"id":8090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8127,"src":"12893:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8088,"name":"uint256","nodeType":"ElementaryTypeName","src":"12893:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12892:9:29"},"scope":8716,"src":"12736:433:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8178,"nodeType":"Block","src":"13689:267:29","statements":[{"body":{"id":8174,"nodeType":"Block","src":"13718:211:29","statements":[{"assignments":[8147],"declarations":[{"constant":false,"id":8147,"mutability":"mutable","name":"mid","nameLocation":"13740:3:29","nodeType":"VariableDeclaration","scope":8174,"src":"13732:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8146,"name":"uint256","nodeType":"ElementaryTypeName","src":"13732:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8153,"initialValue":{"arguments":[{"id":8150,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8136,"src":"13759:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8151,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"13764:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8148,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"13746:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5284_$","typeString":"type(library Math)"}},"id":8149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13751:7:29","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4458,"src":"13746:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13746:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13732:37:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8155,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8132,"src":"13801:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":8156,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8147,"src":"13807:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8154,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8194,"src":"13787:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13787:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13812:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7680,"src":"13787:29:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8159,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8134,"src":"13819:3:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13787:35:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8172,"nodeType":"Block","src":"13876:43:29","statements":[{"expression":{"id":8170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8168,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"13894:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8169,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8147,"src":"13901:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13894:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8171,"nodeType":"ExpressionStatement","src":"13894:10:29"}]},"id":8173,"nodeType":"IfStatement","src":"13783:136:29","trueBody":{"id":8167,"nodeType":"Block","src":"13824:46:29","statements":[{"expression":{"id":8165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8161,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8136,"src":"13842:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8162,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8147,"src":"13848:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13854:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13848:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13842:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8166,"nodeType":"ExpressionStatement","src":"13842:13:29"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8143,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8136,"src":"13706:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8144,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"13712:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13706:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8175,"nodeType":"WhileStatement","src":"13699:230:29"},{"expression":{"id":8176,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"13945:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8142,"id":8177,"nodeType":"Return","src":"13938:11:29"}]},"documentation":{"id":8128,"nodeType":"StructuredDocumentation","src":"13175:343:29","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8179,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"13532:18:29","nodeType":"FunctionDefinition","parameters":{"id":8139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8132,"mutability":"mutable","name":"self","nameLocation":"13584:4:29","nodeType":"VariableDeclaration","scope":8179,"src":"13560:28:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8130,"nodeType":"UserDefinedTypeName","pathNode":{"id":8129,"name":"Checkpoint208","nameLocations":["13560:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7683,"src":"13560:13:29"},"referencedDeclaration":7683,"src":"13560:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8131,"nodeType":"ArrayTypeName","src":"13560:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8134,"mutability":"mutable","name":"key","nameLocation":"13605:3:29","nodeType":"VariableDeclaration","scope":8179,"src":"13598:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8133,"name":"uint48","nodeType":"ElementaryTypeName","src":"13598:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8136,"mutability":"mutable","name":"low","nameLocation":"13626:3:29","nodeType":"VariableDeclaration","scope":8179,"src":"13618:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8135,"name":"uint256","nodeType":"ElementaryTypeName","src":"13618:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8138,"mutability":"mutable","name":"high","nameLocation":"13647:4:29","nodeType":"VariableDeclaration","scope":8179,"src":"13639:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8137,"name":"uint256","nodeType":"ElementaryTypeName","src":"13639:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13550:107:29"},"returnParameters":{"id":8142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8179,"src":"13680:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8140,"name":"uint256","nodeType":"ElementaryTypeName","src":"13680:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13679:9:29"},"scope":8716,"src":"13523:433:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8193,"nodeType":"Block","src":"14239:125:29","statements":[{"AST":{"nodeType":"YulBlock","src":"14258:100:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14279:1:29","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"14282:9:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14272:6:29"},"nodeType":"YulFunctionCall","src":"14272:20:29"},"nodeType":"YulExpressionStatement","src":"14272:20:29"},{"nodeType":"YulAssignment","src":"14305:43:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14334:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14337:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"14324:9:29"},"nodeType":"YulFunctionCall","src":"14324:18:29"},{"name":"pos","nodeType":"YulIdentifier","src":"14344:3:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14320:3:29"},"nodeType":"YulFunctionCall","src":"14320:28:29"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"14305:11:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8186,"isOffset":false,"isSlot":false,"src":"14344:3:29","valueSize":1},{"declaration":8190,"isOffset":false,"isSlot":true,"src":"14305:11:29","suffix":"slot","valueSize":1},{"declaration":8184,"isOffset":false,"isSlot":true,"src":"14282:9:29","suffix":"slot","valueSize":1}],"id":8192,"nodeType":"InlineAssembly","src":"14249:109:29"}]},"documentation":{"id":8180,"nodeType":"StructuredDocumentation","src":"13962:132:29","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":8194,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"14108:13:29","nodeType":"FunctionDefinition","parameters":{"id":8187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8184,"mutability":"mutable","name":"self","nameLocation":"14155:4:29","nodeType":"VariableDeclaration","scope":8194,"src":"14131:28:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8182,"nodeType":"UserDefinedTypeName","pathNode":{"id":8181,"name":"Checkpoint208","nameLocations":["14131:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7683,"src":"14131:13:29"},"referencedDeclaration":7683,"src":"14131:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8183,"nodeType":"ArrayTypeName","src":"14131:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8186,"mutability":"mutable","name":"pos","nameLocation":"14177:3:29","nodeType":"VariableDeclaration","scope":8194,"src":"14169:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8185,"name":"uint256","nodeType":"ElementaryTypeName","src":"14169:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14121:65:29"},"returnParameters":{"id":8191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8190,"mutability":"mutable","name":"result","nameLocation":"14231:6:29","nodeType":"VariableDeclaration","scope":8194,"src":"14209:28:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8189,"nodeType":"UserDefinedTypeName","pathNode":{"id":8188,"name":"Checkpoint208","nameLocations":["14209:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":7683,"src":"14209:13:29"},"referencedDeclaration":7683,"src":"14209:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7683_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"14208:30:29"},"scope":8716,"src":"14099:265:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace160","id":8199,"members":[{"constant":false,"id":8198,"mutability":"mutable","name":"_checkpoints","nameLocation":"14412:12:29","nodeType":"VariableDeclaration","scope":8199,"src":"14396:28:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8196,"nodeType":"UserDefinedTypeName","pathNode":{"id":8195,"name":"Checkpoint160","nameLocations":["14396:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":8204,"src":"14396:13:29"},"referencedDeclaration":8204,"src":"14396:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8197,"nodeType":"ArrayTypeName","src":"14396:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"}],"name":"Trace160","nameLocation":"14377:8:29","nodeType":"StructDefinition","scope":8716,"src":"14370:61:29","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint160","id":8204,"members":[{"constant":false,"id":8201,"mutability":"mutable","name":"_key","nameLocation":"14475:4:29","nodeType":"VariableDeclaration","scope":8204,"src":"14468:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8200,"name":"uint96","nodeType":"ElementaryTypeName","src":"14468:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8203,"mutability":"mutable","name":"_value","nameLocation":"14497:6:29","nodeType":"VariableDeclaration","scope":8204,"src":"14489:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8202,"name":"uint160","nodeType":"ElementaryTypeName","src":"14489:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"Checkpoint160","nameLocation":"14444:13:29","nodeType":"StructDefinition","scope":8716,"src":"14437:73:29","visibility":"public"},{"body":{"id":8226,"nodeType":"Block","src":"14923:62:29","statements":[{"expression":{"arguments":[{"expression":{"id":8220,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"14948:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14953:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8198,"src":"14948:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8222,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8210,"src":"14967:3:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":8223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8212,"src":"14972:5:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":8219,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[7554,8075,8596],"referencedDeclaration":8596,"src":"14940:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint160_$returns$_t_uint160_$_t_uint160_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint160) returns (uint160,uint160)"}},"id":8224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14940:38:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":8218,"id":8225,"nodeType":"Return","src":"14933:45:29"}]},"documentation":{"id":8205,"nodeType":"StructuredDocumentation","src":"14516:302:29","text":" @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n library."},"id":8227,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"14832:4:29","nodeType":"FunctionDefinition","parameters":{"id":8213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8208,"mutability":"mutable","name":"self","nameLocation":"14854:4:29","nodeType":"VariableDeclaration","scope":8227,"src":"14837:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8207,"nodeType":"UserDefinedTypeName","pathNode":{"id":8206,"name":"Trace160","nameLocations":["14837:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":8199,"src":"14837:8:29"},"referencedDeclaration":8199,"src":"14837:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8210,"mutability":"mutable","name":"key","nameLocation":"14867:3:29","nodeType":"VariableDeclaration","scope":8227,"src":"14860:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8209,"name":"uint96","nodeType":"ElementaryTypeName","src":"14860:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8212,"mutability":"mutable","name":"value","nameLocation":"14880:5:29","nodeType":"VariableDeclaration","scope":8227,"src":"14872:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8211,"name":"uint160","nodeType":"ElementaryTypeName","src":"14872:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14836:50:29"},"returnParameters":{"id":8218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8227,"src":"14905:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8214,"name":"uint160","nodeType":"ElementaryTypeName","src":"14905:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":8217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8227,"src":"14914:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8216,"name":"uint160","nodeType":"ElementaryTypeName","src":"14914:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14904:18:29"},"scope":8716,"src":"14823:162:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8266,"nodeType":"Block","src":"15238:207:29","statements":[{"assignments":[8239],"declarations":[{"constant":false,"id":8239,"mutability":"mutable","name":"len","nameLocation":"15256:3:29","nodeType":"VariableDeclaration","scope":8266,"src":"15248:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8238,"name":"uint256","nodeType":"ElementaryTypeName","src":"15248:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8243,"initialValue":{"expression":{"expression":{"id":8240,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"15262:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15267:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8198,"src":"15262:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15280:6:29","memberName":"length","nodeType":"MemberAccess","src":"15262:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15248:38:29"},{"assignments":[8245],"declarations":[{"constant":false,"id":8245,"mutability":"mutable","name":"pos","nameLocation":"15304:3:29","nodeType":"VariableDeclaration","scope":8266,"src":"15296:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8244,"name":"uint256","nodeType":"ElementaryTypeName","src":"15296:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8253,"initialValue":{"arguments":[{"expression":{"id":8247,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"15329:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15334:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8198,"src":"15329:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8249,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"15348:3:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":8250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15353:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8251,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8239,"src":"15356:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8246,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7658,8179,8700],"referencedDeclaration":8700,"src":"15310:18:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":8252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15310:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15296:64:29"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8254,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8245,"src":"15377:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8255,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8239,"src":"15384:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15377:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8259,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"15408:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15413:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8198,"src":"15408:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8261,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8245,"src":"15427:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8258,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8715,"src":"15394:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8204_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15394:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15432:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"15394:44:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15377:61:29","trueExpression":{"hexValue":"30","id":8257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15390:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8237,"id":8265,"nodeType":"Return","src":"15370:68:29"}]},"documentation":{"id":8228,"nodeType":"StructuredDocumentation","src":"14991:154:29","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":8267,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"15159:11:29","nodeType":"FunctionDefinition","parameters":{"id":8234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8231,"mutability":"mutable","name":"self","nameLocation":"15188:4:29","nodeType":"VariableDeclaration","scope":8267,"src":"15171:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8230,"nodeType":"UserDefinedTypeName","pathNode":{"id":8229,"name":"Trace160","nameLocations":["15171:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":8199,"src":"15171:8:29"},"referencedDeclaration":8199,"src":"15171:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8233,"mutability":"mutable","name":"key","nameLocation":"15201:3:29","nodeType":"VariableDeclaration","scope":8267,"src":"15194:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8232,"name":"uint96","nodeType":"ElementaryTypeName","src":"15194:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15170:35:29"},"returnParameters":{"id":8237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8267,"src":"15229:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8235,"name":"uint160","nodeType":"ElementaryTypeName","src":"15229:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15228:9:29"},"scope":8716,"src":"15150:295:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8308,"nodeType":"Block","src":"15700:209:29","statements":[{"assignments":[8279],"declarations":[{"constant":false,"id":8279,"mutability":"mutable","name":"len","nameLocation":"15718:3:29","nodeType":"VariableDeclaration","scope":8308,"src":"15710:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8278,"name":"uint256","nodeType":"ElementaryTypeName","src":"15710:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8283,"initialValue":{"expression":{"expression":{"id":8280,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8271,"src":"15724:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15729:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8198,"src":"15724:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15742:6:29","memberName":"length","nodeType":"MemberAccess","src":"15724:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15710:38:29"},{"assignments":[8285],"declarations":[{"constant":false,"id":8285,"mutability":"mutable","name":"pos","nameLocation":"15766:3:29","nodeType":"VariableDeclaration","scope":8308,"src":"15758:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8284,"name":"uint256","nodeType":"ElementaryTypeName","src":"15758:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8293,"initialValue":{"arguments":[{"expression":{"id":8287,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8271,"src":"15791:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15796:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8198,"src":"15791:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8289,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"15810:3:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":8290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15815:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8291,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"15818:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8286,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7606,8127,8648],"referencedDeclaration":8648,"src":"15772:18:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":8292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15772:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15758:64:29"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8294,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"15839:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15846:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15839:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8299,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8271,"src":"15868:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15873:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8198,"src":"15868:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8301,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"15887:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15893:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15887:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8298,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8715,"src":"15854:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8204_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15854:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15896:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"15854:48:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15839:63:29","trueExpression":{"hexValue":"30","id":8297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15850:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8277,"id":8307,"nodeType":"Return","src":"15832:70:29"}]},"documentation":{"id":8268,"nodeType":"StructuredDocumentation","src":"15451:156:29","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":8309,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"15621:11:29","nodeType":"FunctionDefinition","parameters":{"id":8274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8271,"mutability":"mutable","name":"self","nameLocation":"15650:4:29","nodeType":"VariableDeclaration","scope":8309,"src":"15633:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8270,"nodeType":"UserDefinedTypeName","pathNode":{"id":8269,"name":"Trace160","nameLocations":["15633:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":8199,"src":"15633:8:29"},"referencedDeclaration":8199,"src":"15633:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8273,"mutability":"mutable","name":"key","nameLocation":"15663:3:29","nodeType":"VariableDeclaration","scope":8309,"src":"15656:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8272,"name":"uint96","nodeType":"ElementaryTypeName","src":"15656:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15632:35:29"},"returnParameters":{"id":8277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8309,"src":"15691:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8275,"name":"uint160","nodeType":"ElementaryTypeName","src":"15691:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15690:9:29"},"scope":8716,"src":"15612:297:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8393,"nodeType":"Block","src":"16308:512:29","statements":[{"assignments":[8321],"declarations":[{"constant":false,"id":8321,"mutability":"mutable","name":"len","nameLocation":"16326:3:29","nodeType":"VariableDeclaration","scope":8393,"src":"16318:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8320,"name":"uint256","nodeType":"ElementaryTypeName","src":"16318:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8325,"initialValue":{"expression":{"expression":{"id":8322,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8313,"src":"16332:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16337:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8198,"src":"16332:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16350:6:29","memberName":"length","nodeType":"MemberAccess","src":"16332:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16318:38:29"},{"assignments":[8327],"declarations":[{"constant":false,"id":8327,"mutability":"mutable","name":"low","nameLocation":"16375:3:29","nodeType":"VariableDeclaration","scope":8393,"src":"16367:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8326,"name":"uint256","nodeType":"ElementaryTypeName","src":"16367:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8329,"initialValue":{"hexValue":"30","id":8328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16381:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16367:15:29"},{"assignments":[8331],"declarations":[{"constant":false,"id":8331,"mutability":"mutable","name":"high","nameLocation":"16400:4:29","nodeType":"VariableDeclaration","scope":8393,"src":"16392:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8330,"name":"uint256","nodeType":"ElementaryTypeName","src":"16392:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8333,"initialValue":{"id":8332,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8321,"src":"16407:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16392:18:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8334,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8321,"src":"16425:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":8335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16431:1:29","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"16425:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8368,"nodeType":"IfStatement","src":"16421:234:29","trueBody":{"id":8367,"nodeType":"Block","src":"16434:221:29","statements":[{"assignments":[8338],"declarations":[{"constant":false,"id":8338,"mutability":"mutable","name":"mid","nameLocation":"16456:3:29","nodeType":"VariableDeclaration","scope":8367,"src":"16448:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8337,"name":"uint256","nodeType":"ElementaryTypeName","src":"16448:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8345,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8339,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8321,"src":"16462:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":8342,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8321,"src":"16478:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8340,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"16468:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5284_$","typeString":"type(library Math)"}},"id":8341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16473:4:29","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4773,"src":"16468:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16468:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16462:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16448:34:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8346,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8315,"src":"16500:3:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":8348,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8313,"src":"16520:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16525:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8198,"src":"16520:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8350,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"16539:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8347,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8715,"src":"16506:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8204_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16506:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16544:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8201,"src":"16506:42:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"16500:48:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8365,"nodeType":"Block","src":"16599:46:29","statements":[{"expression":{"id":8363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8359,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8327,"src":"16617:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8360,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"16623:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16629:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16623:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16617:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8364,"nodeType":"ExpressionStatement","src":"16617:13:29"}]},"id":8366,"nodeType":"IfStatement","src":"16496:149:29","trueBody":{"id":8358,"nodeType":"Block","src":"16550:43:29","statements":[{"expression":{"id":8356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8354,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"16568:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8355,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"16575:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16568:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8357,"nodeType":"ExpressionStatement","src":"16568:10:29"}]}}]}},{"assignments":[8370],"declarations":[{"constant":false,"id":8370,"mutability":"mutable","name":"pos","nameLocation":"16673:3:29","nodeType":"VariableDeclaration","scope":8393,"src":"16665:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8369,"name":"uint256","nodeType":"ElementaryTypeName","src":"16665:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8378,"initialValue":{"arguments":[{"expression":{"id":8372,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8313,"src":"16698:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16703:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8198,"src":"16698:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8374,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8315,"src":"16717:3:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":8375,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8327,"src":"16722:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8376,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"16727:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8371,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7606,8127,8648],"referencedDeclaration":8648,"src":"16679:18:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":8377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16679:53:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16665:67:29"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8379,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8370,"src":"16750:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16757:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16750:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8384,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8313,"src":"16779:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16784:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8198,"src":"16779:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8386,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8370,"src":"16798:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16804:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16798:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8383,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8715,"src":"16765:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8204_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16765:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16807:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"16765:48:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16750:63:29","trueExpression":{"hexValue":"30","id":8382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16761:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8319,"id":8392,"nodeType":"Return","src":"16743:70:29"}]},"documentation":{"id":8310,"nodeType":"StructuredDocumentation","src":"15915:294:29","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":8394,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"16223:17:29","nodeType":"FunctionDefinition","parameters":{"id":8316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8313,"mutability":"mutable","name":"self","nameLocation":"16258:4:29","nodeType":"VariableDeclaration","scope":8394,"src":"16241:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8312,"nodeType":"UserDefinedTypeName","pathNode":{"id":8311,"name":"Trace160","nameLocations":["16241:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":8199,"src":"16241:8:29"},"referencedDeclaration":8199,"src":"16241:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8315,"mutability":"mutable","name":"key","nameLocation":"16271:3:29","nodeType":"VariableDeclaration","scope":8394,"src":"16264:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8314,"name":"uint96","nodeType":"ElementaryTypeName","src":"16264:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"16240:35:29"},"returnParameters":{"id":8319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8394,"src":"16299:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8317,"name":"uint160","nodeType":"ElementaryTypeName","src":"16299:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16298:9:29"},"scope":8716,"src":"16214:606:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8423,"nodeType":"Block","src":"17011:135:29","statements":[{"assignments":[8404],"declarations":[{"constant":false,"id":8404,"mutability":"mutable","name":"pos","nameLocation":"17029:3:29","nodeType":"VariableDeclaration","scope":8423,"src":"17021:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8403,"name":"uint256","nodeType":"ElementaryTypeName","src":"17021:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8408,"initialValue":{"expression":{"expression":{"id":8405,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8398,"src":"17035:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17040:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8198,"src":"17035:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17053:6:29","memberName":"length","nodeType":"MemberAccess","src":"17035:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17021:38:29"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8409,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"17076:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17083:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17076:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8414,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8398,"src":"17105:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17110:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8198,"src":"17105:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8416,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"17124:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17130:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17124:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8413,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8715,"src":"17091:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8204_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17091:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17133:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"17091:48:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"17076:63:29","trueExpression":{"hexValue":"30","id":8412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17087:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8402,"id":8422,"nodeType":"Return","src":"17069:70:29"}]},"documentation":{"id":8395,"nodeType":"StructuredDocumentation","src":"16826:109:29","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":8424,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"16949:6:29","nodeType":"FunctionDefinition","parameters":{"id":8399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8398,"mutability":"mutable","name":"self","nameLocation":"16973:4:29","nodeType":"VariableDeclaration","scope":8424,"src":"16956:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8397,"nodeType":"UserDefinedTypeName","pathNode":{"id":8396,"name":"Trace160","nameLocations":["16956:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":8199,"src":"16956:8:29"},"referencedDeclaration":8199,"src":"16956:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"16955:23:29"},"returnParameters":{"id":8402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8424,"src":"17002:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8400,"name":"uint160","nodeType":"ElementaryTypeName","src":"17002:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17001:9:29"},"scope":8716,"src":"16940:206:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8472,"nodeType":"Block","src":"17439:274:29","statements":[{"assignments":[8438],"declarations":[{"constant":false,"id":8438,"mutability":"mutable","name":"pos","nameLocation":"17457:3:29","nodeType":"VariableDeclaration","scope":8472,"src":"17449:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8437,"name":"uint256","nodeType":"ElementaryTypeName","src":"17449:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8442,"initialValue":{"expression":{"expression":{"id":8439,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8428,"src":"17463:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17468:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8198,"src":"17463:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17481:6:29","memberName":"length","nodeType":"MemberAccess","src":"17463:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17449:38:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8443,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"17501:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17508:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17501:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8470,"nodeType":"Block","src":"17562:145:29","statements":[{"assignments":[8454],"declarations":[{"constant":false,"id":8454,"mutability":"mutable","name":"ckpt","nameLocation":"17597:4:29","nodeType":"VariableDeclaration","scope":8470,"src":"17576:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":8453,"nodeType":"UserDefinedTypeName","pathNode":{"id":8452,"name":"Checkpoint160","nameLocations":["17576:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":8204,"src":"17576:13:29"},"referencedDeclaration":8204,"src":"17576:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":8462,"initialValue":{"arguments":[{"expression":{"id":8456,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8428,"src":"17618:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17623:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8198,"src":"17618:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8458,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"17637:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17643:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17637:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8455,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8715,"src":"17604:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8204_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17604:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17576:69:29"},{"expression":{"components":[{"hexValue":"74727565","id":8463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17667:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":8464,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"17673:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":8465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17678:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8201,"src":"17673:9:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"id":8466,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"17684:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":8467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17689:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"17684:11:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":8468,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17666:30:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint96_$_t_uint160_$","typeString":"tuple(bool,uint96,uint160)"}},"functionReturnParameters":8436,"id":8469,"nodeType":"Return","src":"17659:37:29"}]},"id":8471,"nodeType":"IfStatement","src":"17497:210:29","trueBody":{"id":8451,"nodeType":"Block","src":"17511:45:29","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":8446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17533:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":8447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17540:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17543:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17532:13:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":8436,"id":8450,"nodeType":"Return","src":"17525:20:29"}]}}]},"documentation":{"id":8425,"nodeType":"StructuredDocumentation","src":"17152:168:29","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":8473,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"17334:16:29","nodeType":"FunctionDefinition","parameters":{"id":8429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8428,"mutability":"mutable","name":"self","nameLocation":"17368:4:29","nodeType":"VariableDeclaration","scope":8473,"src":"17351:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8427,"nodeType":"UserDefinedTypeName","pathNode":{"id":8426,"name":"Trace160","nameLocations":["17351:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":8199,"src":"17351:8:29"},"referencedDeclaration":8199,"src":"17351:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17350:23:29"},"returnParameters":{"id":8436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8431,"mutability":"mutable","name":"exists","nameLocation":"17402:6:29","nodeType":"VariableDeclaration","scope":8473,"src":"17397:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8430,"name":"bool","nodeType":"ElementaryTypeName","src":"17397:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8433,"mutability":"mutable","name":"_key","nameLocation":"17417:4:29","nodeType":"VariableDeclaration","scope":8473,"src":"17410:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8432,"name":"uint96","nodeType":"ElementaryTypeName","src":"17410:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8435,"mutability":"mutable","name":"_value","nameLocation":"17431:6:29","nodeType":"VariableDeclaration","scope":8473,"src":"17423:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8434,"name":"uint160","nodeType":"ElementaryTypeName","src":"17423:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17396:42:29"},"scope":8716,"src":"17325:388:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8486,"nodeType":"Block","src":"17852:48:29","statements":[{"expression":{"expression":{"expression":{"id":8482,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8477,"src":"17869:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17874:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8198,"src":"17869:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17887:6:29","memberName":"length","nodeType":"MemberAccess","src":"17869:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8481,"id":8485,"nodeType":"Return","src":"17862:31:29"}]},"documentation":{"id":8474,"nodeType":"StructuredDocumentation","src":"17719:57:29","text":" @dev Returns the number of checkpoint."},"id":8487,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"17790:6:29","nodeType":"FunctionDefinition","parameters":{"id":8478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8477,"mutability":"mutable","name":"self","nameLocation":"17814:4:29","nodeType":"VariableDeclaration","scope":8487,"src":"17797:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8476,"nodeType":"UserDefinedTypeName","pathNode":{"id":8475,"name":"Trace160","nameLocations":["17797:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":8199,"src":"17797:8:29"},"referencedDeclaration":8199,"src":"17797:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17796:23:29"},"returnParameters":{"id":8481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8487,"src":"17843:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8479,"name":"uint256","nodeType":"ElementaryTypeName","src":"17843:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17842:9:29"},"scope":8716,"src":"17781:119:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8504,"nodeType":"Block","src":"18064:46:29","statements":[{"expression":{"baseExpression":{"expression":{"id":8499,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8491,"src":"18081:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18086:12:29","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8198,"src":"18081:17:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8502,"indexExpression":{"id":8501,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8493,"src":"18099:3:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18081:22:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref"}},"functionReturnParameters":8498,"id":8503,"nodeType":"Return","src":"18074:29:29"}]},"documentation":{"id":8488,"nodeType":"StructuredDocumentation","src":"17906:61:29","text":" @dev Returns checkpoint at given position."},"id":8505,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"17981:2:29","nodeType":"FunctionDefinition","parameters":{"id":8494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8491,"mutability":"mutable","name":"self","nameLocation":"18001:4:29","nodeType":"VariableDeclaration","scope":8505,"src":"17984:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8490,"nodeType":"UserDefinedTypeName","pathNode":{"id":8489,"name":"Trace160","nameLocations":["17984:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":8199,"src":"17984:8:29"},"referencedDeclaration":8199,"src":"17984:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8199_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8493,"mutability":"mutable","name":"pos","nameLocation":"18014:3:29","nodeType":"VariableDeclaration","scope":8505,"src":"18007:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8492,"name":"uint32","nodeType":"ElementaryTypeName","src":"18007:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"17983:35:29"},"returnParameters":{"id":8498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8505,"src":"18042:20:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":8496,"nodeType":"UserDefinedTypeName","pathNode":{"id":8495,"name":"Checkpoint160","nameLocations":["18042:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":8204,"src":"18042:13:29"},"referencedDeclaration":8204,"src":"18042:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"18041:22:29"},"scope":8716,"src":"17972:138:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8595,"nodeType":"Block","src":"18395:761:29","statements":[{"assignments":[8522],"declarations":[{"constant":false,"id":8522,"mutability":"mutable","name":"pos","nameLocation":"18413:3:29","nodeType":"VariableDeclaration","scope":8595,"src":"18405:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8521,"name":"uint256","nodeType":"ElementaryTypeName","src":"18405:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8525,"initialValue":{"expression":{"id":8523,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8510,"src":"18419:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":8524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18424:6:29","memberName":"length","nodeType":"MemberAccess","src":"18419:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18405:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8526,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8522,"src":"18445:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18451:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18445:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8593,"nodeType":"Block","src":"19042:108:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":8584,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8512,"src":"19087:3:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":8585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8514,"src":"19100:5:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":8583,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"19066:13:29","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$8204_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["19081:4:29","19092:6:29"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"19066:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$8204_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":8580,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8510,"src":"19056:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":8582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19061:4:29","memberName":"push","nodeType":"MemberAccess","src":"19056:9:29","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$8204_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":8587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19056:52:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8588,"nodeType":"ExpressionStatement","src":"19056:52:29"},{"expression":{"components":[{"hexValue":"30","id":8589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19130:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8514,"src":"19133:5:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":8591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19129:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint160_$","typeString":"tuple(int_const 0,uint160)"}},"functionReturnParameters":8520,"id":8592,"nodeType":"Return","src":"19122:17:29"}]},"id":8594,"nodeType":"IfStatement","src":"18441:709:29","trueBody":{"id":8579,"nodeType":"Block","src":"18454:582:29","statements":[{"assignments":[8531],"declarations":[{"constant":false,"id":8531,"mutability":"mutable","name":"last","nameLocation":"18541:4:29","nodeType":"VariableDeclaration","scope":8579,"src":"18520:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":8530,"nodeType":"UserDefinedTypeName","pathNode":{"id":8529,"name":"Checkpoint160","nameLocations":["18520:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":8204,"src":"18520:13:29"},"referencedDeclaration":8204,"src":"18520:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":8538,"initialValue":{"arguments":[{"id":8533,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8510,"src":"18562:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8534,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8522,"src":"18568:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18574:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18568:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8532,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8715,"src":"18548:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8204_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18548:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"18520:56:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8539,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"18650:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":8540,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18655:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8201,"src":"18650:9:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8541,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8512,"src":"18662:3:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18650:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8547,"nodeType":"IfStatement","src":"18646:91:29","trueBody":{"id":8546,"nodeType":"Block","src":"18667:70:29","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8543,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7152,"src":"18692:28:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18692:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8545,"nodeType":"RevertStatement","src":"18685:37:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8548,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"18800:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":8549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18805:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8201,"src":"18800:9:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8550,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8512,"src":"18813:3:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18800:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8572,"nodeType":"Block","src":"18900:85:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":8567,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8512,"src":"18949:3:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":8568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8514,"src":"18962:5:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":8566,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"18928:13:29","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$8204_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["18943:4:29","18954:6:29"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"18928:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$8204_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":8563,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8510,"src":"18918:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":8565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18923:4:29","memberName":"push","nodeType":"MemberAccess","src":"18918:9:29","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$8204_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":8570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18918:52:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8571,"nodeType":"ExpressionStatement","src":"18918:52:29"}]},"id":8573,"nodeType":"IfStatement","src":"18796:189:29","trueBody":{"id":8562,"nodeType":"Block","src":"18818:76:29","statements":[{"expression":{"id":8560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":8553,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8510,"src":"18850:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8554,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8522,"src":"18856:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18862:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18856:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8552,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8715,"src":"18836:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8204_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18836:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18865:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"18836:35:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8514,"src":"18874:5:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"18836:43:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8561,"nodeType":"ExpressionStatement","src":"18836:43:29"}]}},{"expression":{"components":[{"expression":{"id":8574,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"19006:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":8575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19011:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"19006:11:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":8576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8514,"src":"19019:5:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":8577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19005:20:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":8520,"id":8578,"nodeType":"Return","src":"18998:27:29"}]}}]},"documentation":{"id":8506,"nodeType":"StructuredDocumentation","src":"18116:165:29","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":8596,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"18295:7:29","nodeType":"FunctionDefinition","parameters":{"id":8515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8510,"mutability":"mutable","name":"self","nameLocation":"18327:4:29","nodeType":"VariableDeclaration","scope":8596,"src":"18303:28:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8508,"nodeType":"UserDefinedTypeName","pathNode":{"id":8507,"name":"Checkpoint160","nameLocations":["18303:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":8204,"src":"18303:13:29"},"referencedDeclaration":8204,"src":"18303:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8509,"nodeType":"ArrayTypeName","src":"18303:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":8512,"mutability":"mutable","name":"key","nameLocation":"18340:3:29","nodeType":"VariableDeclaration","scope":8596,"src":"18333:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8511,"name":"uint96","nodeType":"ElementaryTypeName","src":"18333:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8514,"mutability":"mutable","name":"value","nameLocation":"18353:5:29","nodeType":"VariableDeclaration","scope":8596,"src":"18345:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8513,"name":"uint160","nodeType":"ElementaryTypeName","src":"18345:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18302:57:29"},"returnParameters":{"id":8520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8596,"src":"18377:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8516,"name":"uint160","nodeType":"ElementaryTypeName","src":"18377:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":8519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8596,"src":"18386:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8518,"name":"uint160","nodeType":"ElementaryTypeName","src":"18386:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18376:18:29"},"scope":8716,"src":"18286:870:29","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8647,"nodeType":"Block","src":"19675:267:29","statements":[{"body":{"id":8643,"nodeType":"Block","src":"19704:211:29","statements":[{"assignments":[8616],"declarations":[{"constant":false,"id":8616,"mutability":"mutable","name":"mid","nameLocation":"19726:3:29","nodeType":"VariableDeclaration","scope":8643,"src":"19718:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8615,"name":"uint256","nodeType":"ElementaryTypeName","src":"19718:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8622,"initialValue":{"arguments":[{"id":8619,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"19745:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8620,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"19750:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8617,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"19732:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5284_$","typeString":"type(library Math)"}},"id":8618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19737:7:29","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4458,"src":"19732:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19732:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19718:37:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8624,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"19787:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":8625,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8616,"src":"19793:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8623,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8715,"src":"19773:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8204_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19773:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19798:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8201,"src":"19773:29:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8628,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8603,"src":"19805:3:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"19773:35:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8641,"nodeType":"Block","src":"19859:46:29","statements":[{"expression":{"id":8639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8635,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"19877:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8636,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8616,"src":"19883:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19889:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19883:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19877:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8640,"nodeType":"ExpressionStatement","src":"19877:13:29"}]},"id":8642,"nodeType":"IfStatement","src":"19769:136:29","trueBody":{"id":8634,"nodeType":"Block","src":"19810:43:29","statements":[{"expression":{"id":8632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8630,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"19828:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8631,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8616,"src":"19835:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19828:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8633,"nodeType":"ExpressionStatement","src":"19828:10:29"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8612,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"19692:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8613,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"19698:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19692:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8644,"nodeType":"WhileStatement","src":"19685:230:29"},{"expression":{"id":8645,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"19931:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8611,"id":8646,"nodeType":"Return","src":"19924:11:29"}]},"documentation":{"id":8597,"nodeType":"StructuredDocumentation","src":"19162:342:29","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8648,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"19518:18:29","nodeType":"FunctionDefinition","parameters":{"id":8608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8601,"mutability":"mutable","name":"self","nameLocation":"19570:4:29","nodeType":"VariableDeclaration","scope":8648,"src":"19546:28:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8599,"nodeType":"UserDefinedTypeName","pathNode":{"id":8598,"name":"Checkpoint160","nameLocations":["19546:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":8204,"src":"19546:13:29"},"referencedDeclaration":8204,"src":"19546:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8600,"nodeType":"ArrayTypeName","src":"19546:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":8603,"mutability":"mutable","name":"key","nameLocation":"19591:3:29","nodeType":"VariableDeclaration","scope":8648,"src":"19584:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8602,"name":"uint96","nodeType":"ElementaryTypeName","src":"19584:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8605,"mutability":"mutable","name":"low","nameLocation":"19612:3:29","nodeType":"VariableDeclaration","scope":8648,"src":"19604:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8604,"name":"uint256","nodeType":"ElementaryTypeName","src":"19604:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8607,"mutability":"mutable","name":"high","nameLocation":"19633:4:29","nodeType":"VariableDeclaration","scope":8648,"src":"19625:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8606,"name":"uint256","nodeType":"ElementaryTypeName","src":"19625:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19536:107:29"},"returnParameters":{"id":8611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8648,"src":"19666:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8609,"name":"uint256","nodeType":"ElementaryTypeName","src":"19666:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19665:9:29"},"scope":8716,"src":"19509:433:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8699,"nodeType":"Block","src":"20462:267:29","statements":[{"body":{"id":8695,"nodeType":"Block","src":"20491:211:29","statements":[{"assignments":[8668],"declarations":[{"constant":false,"id":8668,"mutability":"mutable","name":"mid","nameLocation":"20513:3:29","nodeType":"VariableDeclaration","scope":8695,"src":"20505:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8667,"name":"uint256","nodeType":"ElementaryTypeName","src":"20505:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8674,"initialValue":{"arguments":[{"id":8671,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8657,"src":"20532:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8672,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"20537:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8669,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"20519:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5284_$","typeString":"type(library Math)"}},"id":8670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20524:7:29","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4458,"src":"20519:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20505:37:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8676,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8653,"src":"20574:4:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":8677,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8668,"src":"20580:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8675,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7673,8194,8715],"referencedDeclaration":8715,"src":"20560:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8204_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20560:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20585:4:29","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8201,"src":"20560:29:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8680,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8655,"src":"20592:3:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"20560:35:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8693,"nodeType":"Block","src":"20649:43:29","statements":[{"expression":{"id":8691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8689,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"20667:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8690,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8668,"src":"20674:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20667:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8692,"nodeType":"ExpressionStatement","src":"20667:10:29"}]},"id":8694,"nodeType":"IfStatement","src":"20556:136:29","trueBody":{"id":8688,"nodeType":"Block","src":"20597:46:29","statements":[{"expression":{"id":8686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8682,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8657,"src":"20615:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8683,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8668,"src":"20621:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20627:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20621:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20615:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8687,"nodeType":"ExpressionStatement","src":"20615:13:29"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8664,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8657,"src":"20479:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8665,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"20485:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20479:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8696,"nodeType":"WhileStatement","src":"20472:230:29"},{"expression":{"id":8697,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"20718:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8663,"id":8698,"nodeType":"Return","src":"20711:11:29"}]},"documentation":{"id":8649,"nodeType":"StructuredDocumentation","src":"19948:343:29","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8700,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"20305:18:29","nodeType":"FunctionDefinition","parameters":{"id":8660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8653,"mutability":"mutable","name":"self","nameLocation":"20357:4:29","nodeType":"VariableDeclaration","scope":8700,"src":"20333:28:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8651,"nodeType":"UserDefinedTypeName","pathNode":{"id":8650,"name":"Checkpoint160","nameLocations":["20333:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":8204,"src":"20333:13:29"},"referencedDeclaration":8204,"src":"20333:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8652,"nodeType":"ArrayTypeName","src":"20333:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":8655,"mutability":"mutable","name":"key","nameLocation":"20378:3:29","nodeType":"VariableDeclaration","scope":8700,"src":"20371:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8654,"name":"uint96","nodeType":"ElementaryTypeName","src":"20371:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8657,"mutability":"mutable","name":"low","nameLocation":"20399:3:29","nodeType":"VariableDeclaration","scope":8700,"src":"20391:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8656,"name":"uint256","nodeType":"ElementaryTypeName","src":"20391:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8659,"mutability":"mutable","name":"high","nameLocation":"20420:4:29","nodeType":"VariableDeclaration","scope":8700,"src":"20412:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8658,"name":"uint256","nodeType":"ElementaryTypeName","src":"20412:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20323:107:29"},"returnParameters":{"id":8663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8700,"src":"20453:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8661,"name":"uint256","nodeType":"ElementaryTypeName","src":"20453:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20452:9:29"},"scope":8716,"src":"20296:433:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8714,"nodeType":"Block","src":"21012:125:29","statements":[{"AST":{"nodeType":"YulBlock","src":"21031:100:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21052:1:29","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"21055:9:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21045:6:29"},"nodeType":"YulFunctionCall","src":"21045:20:29"},"nodeType":"YulExpressionStatement","src":"21045:20:29"},{"nodeType":"YulAssignment","src":"21078:43:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21107:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21110:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"21097:9:29"},"nodeType":"YulFunctionCall","src":"21097:18:29"},{"name":"pos","nodeType":"YulIdentifier","src":"21117:3:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21093:3:29"},"nodeType":"YulFunctionCall","src":"21093:28:29"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"21078:11:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8707,"isOffset":false,"isSlot":false,"src":"21117:3:29","valueSize":1},{"declaration":8711,"isOffset":false,"isSlot":true,"src":"21078:11:29","suffix":"slot","valueSize":1},{"declaration":8705,"isOffset":false,"isSlot":true,"src":"21055:9:29","suffix":"slot","valueSize":1}],"id":8713,"nodeType":"InlineAssembly","src":"21022:109:29"}]},"documentation":{"id":8701,"nodeType":"StructuredDocumentation","src":"20735:132:29","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":8715,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"20881:13:29","nodeType":"FunctionDefinition","parameters":{"id":8708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8705,"mutability":"mutable","name":"self","nameLocation":"20928:4:29","nodeType":"VariableDeclaration","scope":8715,"src":"20904:28:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8703,"nodeType":"UserDefinedTypeName","pathNode":{"id":8702,"name":"Checkpoint160","nameLocations":["20904:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":8204,"src":"20904:13:29"},"referencedDeclaration":8204,"src":"20904:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8704,"nodeType":"ArrayTypeName","src":"20904:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8204_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":8707,"mutability":"mutable","name":"pos","nameLocation":"20950:3:29","nodeType":"VariableDeclaration","scope":8715,"src":"20942:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8706,"name":"uint256","nodeType":"ElementaryTypeName","src":"20942:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20894:65:29"},"returnParameters":{"id":8712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8711,"mutability":"mutable","name":"result","nameLocation":"21004:6:29","nodeType":"VariableDeclaration","scope":8715,"src":"20982:28:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":8710,"nodeType":"UserDefinedTypeName","pathNode":{"id":8709,"name":"Checkpoint160","nameLocations":["20982:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":8204,"src":"20982:13:29"},"referencedDeclaration":8204,"src":"20982:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8204_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"20981:30:29"},"scope":8716,"src":"20872:265:29","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":8717,"src":"668:20471:29","usedErrors":[7152],"usedEvents":[]}],"src":"201:20939:29"},"id":29},"@openzeppelin/contracts/utils/types/Time.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","exportedSymbols":{"Math":[5284],"SafeCast":[7039],"Time":[8991]},"id":8992,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8718,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":8720,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8992,"sourceUnit":5285,"src":"130:38:30","symbolAliases":[{"foreign":{"id":8719,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"138:4:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../math/SafeCast.sol","id":8722,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8992,"sourceUnit":7040,"src":"169:46:30","symbolAliases":[{"foreign":{"id":8721,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"177:8:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Time","contractDependencies":[],"contractKind":"library","documentation":{"id":8723,"nodeType":"StructuredDocumentation","src":"217:422:30","text":" @dev This library provides helpers for manipulating time-related objects.\n It uses the following types:\n - `uint48` for timepoints\n - `uint32` for durations\n While the library doesn't provide specific types for timepoints and duration, it does provide:\n - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n - additional helper functions"},"fullyImplemented":true,"id":8991,"linearizedBaseContracts":[8991],"name":"Time","nameLocation":"648:4:30","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8725,"libraryName":{"id":8724,"name":"Time","nameLocations":["665:4:30"],"nodeType":"IdentifierPath","referencedDeclaration":8991,"src":"665:4:30"},"nodeType":"UsingForDirective","src":"659:17:30"},{"body":{"id":8737,"nodeType":"Block","src":"802:58:30","statements":[{"expression":{"arguments":[{"expression":{"id":8733,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"837:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"843:9:30","memberName":"timestamp","nodeType":"MemberAccess","src":"837:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8731,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"819:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7039_$","typeString":"type(library SafeCast)"}},"id":8732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"828:8:30","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6039,"src":"819:17:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":8735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"819:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8730,"id":8736,"nodeType":"Return","src":"812:41:30"}]},"documentation":{"id":8726,"nodeType":"StructuredDocumentation","src":"682:63:30","text":" @dev Get the block timestamp as a Timepoint."},"id":8738,"implemented":true,"kind":"function","modifiers":[],"name":"timestamp","nameLocation":"759:9:30","nodeType":"FunctionDefinition","parameters":{"id":8727,"nodeType":"ParameterList","parameters":[],"src":"768:2:30"},"returnParameters":{"id":8730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8738,"src":"794:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8728,"name":"uint48","nodeType":"ElementaryTypeName","src":"794:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"793:8:30"},"scope":8991,"src":"750:110:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8750,"nodeType":"Block","src":"985:55:30","statements":[{"expression":{"arguments":[{"expression":{"id":8746,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1020:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:6:30","memberName":"number","nodeType":"MemberAccess","src":"1020:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8744,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"1002:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7039_$","typeString":"type(library SafeCast)"}},"id":8745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1011:8:30","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6039,"src":"1002:17:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":8748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1002:31:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8743,"id":8749,"nodeType":"Return","src":"995:38:30"}]},"documentation":{"id":8739,"nodeType":"StructuredDocumentation","src":"866:60:30","text":" @dev Get the block number as a Timepoint."},"id":8751,"implemented":true,"kind":"function","modifiers":[],"name":"blockNumber","nameLocation":"940:11:30","nodeType":"FunctionDefinition","parameters":{"id":8740,"nodeType":"ParameterList","parameters":[],"src":"951:2:30"},"returnParameters":{"id":8743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8751,"src":"977:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8741,"name":"uint48","nodeType":"ElementaryTypeName","src":"977:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"976:8:30"},"scope":8991,"src":"931:109:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"Time.Delay","id":8753,"name":"Delay","nameLocation":"2377:5:30","nodeType":"UserDefinedValueTypeDefinition","src":"2372:22:30","underlyingType":{"id":8752,"name":"uint112","nodeType":"ElementaryTypeName","src":"2386:7:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}},{"body":{"id":8767,"nodeType":"Block","src":"2572:44:30","statements":[{"expression":{"arguments":[{"id":8764,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8756,"src":"2600:8:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":8762,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"2589:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$8753_$","typeString":"type(Time.Delay)"}},"id":8763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2595:4:30","memberName":"wrap","nodeType":"MemberAccess","src":"2589:10:30","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$8753_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":8765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"}},"functionReturnParameters":8761,"id":8766,"nodeType":"Return","src":"2582:27:30"}]},"documentation":{"id":8754,"nodeType":"StructuredDocumentation","src":"2400:103:30","text":" @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature"},"id":8768,"implemented":true,"kind":"function","modifiers":[],"name":"toDelay","nameLocation":"2517:7:30","nodeType":"FunctionDefinition","parameters":{"id":8757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8756,"mutability":"mutable","name":"duration","nameLocation":"2532:8:30","nodeType":"VariableDeclaration","scope":8768,"src":"2525:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8755,"name":"uint32","nodeType":"ElementaryTypeName","src":"2525:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2524:17:30"},"returnParameters":{"id":8761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8768,"src":"2565:5:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"},"typeName":{"id":8759,"nodeType":"UserDefinedTypeName","pathNode":{"id":8758,"name":"Delay","nameLocations":["2565:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":8753,"src":"2565:5:30"},"referencedDeclaration":8753,"src":"2565:5:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"2564:7:30"},"scope":8991,"src":"2508:108:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8806,"nodeType":"Block","src":"2964:180:30","statements":[{"assignments":[8784,8786,8788],"declarations":[{"constant":false,"id":8784,"mutability":"mutable","name":"valueBefore","nameLocation":"2982:11:30","nodeType":"VariableDeclaration","scope":8806,"src":"2975:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8783,"name":"uint32","nodeType":"ElementaryTypeName","src":"2975:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8786,"mutability":"mutable","name":"valueAfter","nameLocation":"3002:10:30","nodeType":"VariableDeclaration","scope":8806,"src":"2995:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8785,"name":"uint32","nodeType":"ElementaryTypeName","src":"2995:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8788,"mutability":"mutable","name":"effect","nameLocation":"3021:6:30","nodeType":"VariableDeclaration","scope":8806,"src":"3014:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8787,"name":"uint48","nodeType":"ElementaryTypeName","src":"3014:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":8792,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8789,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8772,"src":"3031:4:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"}},"id":8790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3036:6:30","memberName":"unpack","nodeType":"MemberAccess","referencedDeclaration":8952,"src":"3031:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$8753_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$8753_$","typeString":"function (Time.Delay) pure returns (uint32,uint32,uint48)"}},"id":8791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3031:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"2974:70:30"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8793,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8788,"src":"3061:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8794,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8774,"src":"3071:9:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3061:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":8800,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8784,"src":"3105:11:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8801,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8786,"src":"3118:10:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8802,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8788,"src":"3130:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":8803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3104:33:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"id":8804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3061:76:30","trueExpression":{"components":[{"id":8796,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8786,"src":"3084:10:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":8797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3096:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3099:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3083:18:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(uint32,int_const 0,int_const 0)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":8782,"id":8805,"nodeType":"Return","src":"3054:83:30"}]},"documentation":{"id":8769,"nodeType":"StructuredDocumentation","src":"2622:241:30","text":" @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered."},"id":8807,"implemented":true,"kind":"function","modifiers":[],"name":"_getFullAt","nameLocation":"2877:10:30","nodeType":"FunctionDefinition","parameters":{"id":8775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8772,"mutability":"mutable","name":"self","nameLocation":"2894:4:30","nodeType":"VariableDeclaration","scope":8807,"src":"2888:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"},"typeName":{"id":8771,"nodeType":"UserDefinedTypeName","pathNode":{"id":8770,"name":"Delay","nameLocations":["2888:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":8753,"src":"2888:5:30"},"referencedDeclaration":8753,"src":"2888:5:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":8774,"mutability":"mutable","name":"timepoint","nameLocation":"2907:9:30","nodeType":"VariableDeclaration","scope":8807,"src":"2900:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8773,"name":"uint48","nodeType":"ElementaryTypeName","src":"2900:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2887:30:30"},"returnParameters":{"id":8782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8807,"src":"2940:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8776,"name":"uint32","nodeType":"ElementaryTypeName","src":"2940:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8807,"src":"2948:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8778,"name":"uint32","nodeType":"ElementaryTypeName","src":"2948:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8807,"src":"2956:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8780,"name":"uint48","nodeType":"ElementaryTypeName","src":"2956:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2939:24:30"},"scope":8991,"src":"2868:276:30","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":8826,"nodeType":"Block","src":"3438:53:30","statements":[{"expression":{"arguments":[{"id":8821,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8811,"src":"3466:4:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8822,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8738,"src":"3472:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":8823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3472:11:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":8820,"name":"_getFullAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8807,"src":"3455:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$8753_$_t_uint48_$returns$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"function (Time.Delay,uint48) pure returns (uint32,uint32,uint48)"}},"id":8824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:29:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":8819,"id":8825,"nodeType":"Return","src":"3448:36:30"}]},"documentation":{"id":8808,"nodeType":"StructuredDocumentation","src":"3150:207:30","text":" @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n effect timepoint is 0, then the pending value should not be considered."},"id":8827,"implemented":true,"kind":"function","modifiers":[],"name":"getFull","nameLocation":"3371:7:30","nodeType":"FunctionDefinition","parameters":{"id":8812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8811,"mutability":"mutable","name":"self","nameLocation":"3385:4:30","nodeType":"VariableDeclaration","scope":8827,"src":"3379:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"},"typeName":{"id":8810,"nodeType":"UserDefinedTypeName","pathNode":{"id":8809,"name":"Delay","nameLocations":["3379:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":8753,"src":"3379:5:30"},"referencedDeclaration":8753,"src":"3379:5:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3378:12:30"},"returnParameters":{"id":8819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8827,"src":"3414:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8813,"name":"uint32","nodeType":"ElementaryTypeName","src":"3414:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8827,"src":"3422:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8815,"name":"uint32","nodeType":"ElementaryTypeName","src":"3422:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8827,"src":"3430:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8817,"name":"uint48","nodeType":"ElementaryTypeName","src":"3430:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3413:24:30"},"scope":8991,"src":"3362:129:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8844,"nodeType":"Block","src":"3604:74:30","statements":[{"assignments":[8837,null,null],"declarations":[{"constant":false,"id":8837,"mutability":"mutable","name":"delay","nameLocation":"3622:5:30","nodeType":"VariableDeclaration","scope":8844,"src":"3615:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8836,"name":"uint32","nodeType":"ElementaryTypeName","src":"3615:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},null,null],"id":8841,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8838,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8831,"src":"3635:4:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"}},"id":8839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3640:7:30","memberName":"getFull","nodeType":"MemberAccess","referencedDeclaration":8827,"src":"3635:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$8753_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$8753_$","typeString":"function (Time.Delay) view returns (uint32,uint32,uint48)"}},"id":8840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3635:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"3614:35:30"},{"expression":{"id":8842,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8837,"src":"3666:5:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":8835,"id":8843,"nodeType":"Return","src":"3659:12:30"}]},"documentation":{"id":8828,"nodeType":"StructuredDocumentation","src":"3497:46:30","text":" @dev Get the current value."},"id":8845,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"3557:3:30","nodeType":"FunctionDefinition","parameters":{"id":8832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8831,"mutability":"mutable","name":"self","nameLocation":"3567:4:30","nodeType":"VariableDeclaration","scope":8845,"src":"3561:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"},"typeName":{"id":8830,"nodeType":"UserDefinedTypeName","pathNode":{"id":8829,"name":"Delay","nameLocations":["3561:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":8753,"src":"3561:5:30"},"referencedDeclaration":8753,"src":"3561:5:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3560:12:30"},"returnParameters":{"id":8835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8845,"src":"3596:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8833,"name":"uint32","nodeType":"ElementaryTypeName","src":"3596:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3595:8:30"},"scope":8991,"src":"3548:130:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8900,"nodeType":"Block","src":"4128:234:30","statements":[{"assignments":[8862],"declarations":[{"constant":false,"id":8862,"mutability":"mutable","name":"value","nameLocation":"4145:5:30","nodeType":"VariableDeclaration","scope":8900,"src":"4138:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8861,"name":"uint32","nodeType":"ElementaryTypeName","src":"4138:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":8866,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8863,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8849,"src":"4153:4:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"}},"id":8864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4158:3:30","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":8845,"src":"4153:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$8753_$returns$_t_uint32_$attached_to$_t_userDefinedValueType$_Delay_$8753_$","typeString":"function (Time.Delay) view returns (uint32)"}},"id":8865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4153:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4138:25:30"},{"assignments":[8868],"declarations":[{"constant":false,"id":8868,"mutability":"mutable","name":"setback","nameLocation":"4180:7:30","nodeType":"VariableDeclaration","scope":8900,"src":"4173:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8867,"name":"uint32","nodeType":"ElementaryTypeName","src":"4173:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":8884,"initialValue":{"arguments":[{"arguments":[{"id":8873,"name":"minSetback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8853,"src":"4206:10:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8862,"src":"4218:5:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8875,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8851,"src":"4226:8:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4218:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":8880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4256:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":8881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4218:39:30","trueExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8862,"src":"4237:5:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8878,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8851,"src":"4245:8:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4237:16:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":8871,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"4197:4:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5284_$","typeString":"type(library Math)"}},"id":8872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4202:3:30","memberName":"max","nodeType":"MemberAccess","referencedDeclaration":4417,"src":"4197:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4197:61:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4190:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8869,"name":"uint32","nodeType":"ElementaryTypeName","src":"4190:6:30","typeDescriptions":{}}},"id":8883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4190:69:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4173:86:30"},{"expression":{"id":8890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8885,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8859,"src":"4269:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8886,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8738,"src":"4278:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":8887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4278:11:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8888,"name":"setback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8868,"src":"4292:7:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4278:21:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4269:30:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":8891,"nodeType":"ExpressionStatement","src":"4269:30:30"},{"expression":{"components":[{"arguments":[{"id":8893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8862,"src":"4322:5:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8894,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8851,"src":"4329:8:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8895,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8859,"src":"4339:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":8892,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8990,"src":"4317:4:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint48_$returns$_t_userDefinedValueType$_Delay_$8753_$","typeString":"function (uint32,uint32,uint48) pure returns (Time.Delay)"}},"id":8896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4317:29:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"}},{"id":8897,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8859,"src":"4348:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":8898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4316:39:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_userDefinedValueType$_Delay_$8753_$_t_uint48_$","typeString":"tuple(Time.Delay,uint48)"}},"functionReturnParameters":8860,"id":8899,"nodeType":"Return","src":"4309:46:30"}]},"documentation":{"id":8846,"nodeType":"StructuredDocumentation","src":"3684:283:30","text":" @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n new delay becomes effective."},"id":8901,"implemented":true,"kind":"function","modifiers":[],"name":"withUpdate","nameLocation":"3981:10:30","nodeType":"FunctionDefinition","parameters":{"id":8854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8849,"mutability":"mutable","name":"self","nameLocation":"4007:4:30","nodeType":"VariableDeclaration","scope":8901,"src":"4001:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"},"typeName":{"id":8848,"nodeType":"UserDefinedTypeName","pathNode":{"id":8847,"name":"Delay","nameLocations":["4001:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":8753,"src":"4001:5:30"},"referencedDeclaration":8753,"src":"4001:5:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":8851,"mutability":"mutable","name":"newValue","nameLocation":"4028:8:30","nodeType":"VariableDeclaration","scope":8901,"src":"4021:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8850,"name":"uint32","nodeType":"ElementaryTypeName","src":"4021:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8853,"mutability":"mutable","name":"minSetback","nameLocation":"4053:10:30","nodeType":"VariableDeclaration","scope":8901,"src":"4046:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8852,"name":"uint32","nodeType":"ElementaryTypeName","src":"4046:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3991:78:30"},"returnParameters":{"id":8860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8857,"mutability":"mutable","name":"updatedDelay","nameLocation":"4099:12:30","nodeType":"VariableDeclaration","scope":8901,"src":"4093:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"},"typeName":{"id":8856,"nodeType":"UserDefinedTypeName","pathNode":{"id":8855,"name":"Delay","nameLocations":["4093:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":8753,"src":"4093:5:30"},"referencedDeclaration":8753,"src":"4093:5:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":8859,"mutability":"mutable","name":"effect","nameLocation":"4120:6:30","nodeType":"VariableDeclaration","scope":8901,"src":"4113:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8858,"name":"uint48","nodeType":"ElementaryTypeName","src":"4113:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4092:35:30"},"scope":8991,"src":"3972:390:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8951,"nodeType":"Block","src":"4595:212:30","statements":[{"assignments":[8915],"declarations":[{"constant":false,"id":8915,"mutability":"mutable","name":"raw","nameLocation":"4613:3:30","nodeType":"VariableDeclaration","scope":8951,"src":"4605:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8914,"name":"uint112","nodeType":"ElementaryTypeName","src":"4605:7:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"id":8920,"initialValue":{"arguments":[{"id":8918,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"4632:4:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"}],"expression":{"id":8916,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"4619:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$8753_$","typeString":"type(Time.Delay)"}},"id":8917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4625:6:30","memberName":"unwrap","nodeType":"MemberAccess","src":"4619:12:30","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Delay_$8753_$returns$_t_uint112_$","typeString":"function (Time.Delay) pure returns (uint112)"}},"id":8919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4619:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"4605:32:30"},{"expression":{"id":8926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8921,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"4648:10:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8924,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8915,"src":"4668:3:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":8923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4661:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8922,"name":"uint32","nodeType":"ElementaryTypeName","src":"4661:6:30","typeDescriptions":{}}},"id":8925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:11:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4648:24:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":8927,"nodeType":"ExpressionStatement","src":"4648:24:30"},{"expression":{"id":8935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8928,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8908,"src":"4682:11:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8931,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8915,"src":"4703:3:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":8932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4710:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4703:9:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":8930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4696:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8929,"name":"uint32","nodeType":"ElementaryTypeName","src":"4696:6:30","typeDescriptions":{}}},"id":8934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4696:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4682:31:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":8936,"nodeType":"ExpressionStatement","src":"4682:31:30"},{"expression":{"id":8944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8937,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8912,"src":"4723:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8940,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8915,"src":"4739:3:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":8941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4746:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4739:9:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":8939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4732:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8938,"name":"uint48","nodeType":"ElementaryTypeName","src":"4732:6:30","typeDescriptions":{}}},"id":8943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4732:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4723:26:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":8945,"nodeType":"ExpressionStatement","src":"4723:26:30"},{"expression":{"components":[{"id":8946,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8908,"src":"4768:11:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8947,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"4781:10:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8948,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8912,"src":"4793:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":8949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4767:33:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":8913,"id":8950,"nodeType":"Return","src":"4760:40:30"}]},"documentation":{"id":8902,"nodeType":"StructuredDocumentation","src":"4368:117:30","text":" @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint)."},"id":8952,"implemented":true,"kind":"function","modifiers":[],"name":"unpack","nameLocation":"4499:6:30","nodeType":"FunctionDefinition","parameters":{"id":8906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8905,"mutability":"mutable","name":"self","nameLocation":"4512:4:30","nodeType":"VariableDeclaration","scope":8952,"src":"4506:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"},"typeName":{"id":8904,"nodeType":"UserDefinedTypeName","pathNode":{"id":8903,"name":"Delay","nameLocations":["4506:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":8753,"src":"4506:5:30"},"referencedDeclaration":8753,"src":"4506:5:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4505:12:30"},"returnParameters":{"id":8913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8908,"mutability":"mutable","name":"valueBefore","nameLocation":"4548:11:30","nodeType":"VariableDeclaration","scope":8952,"src":"4541:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8907,"name":"uint32","nodeType":"ElementaryTypeName","src":"4541:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8910,"mutability":"mutable","name":"valueAfter","nameLocation":"4568:10:30","nodeType":"VariableDeclaration","scope":8952,"src":"4561:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8909,"name":"uint32","nodeType":"ElementaryTypeName","src":"4561:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8912,"mutability":"mutable","name":"effect","nameLocation":"4587:6:30","nodeType":"VariableDeclaration","scope":8952,"src":"4580:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8911,"name":"uint48","nodeType":"ElementaryTypeName","src":"4580:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4540:54:30"},"scope":8991,"src":"4490:317:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8989,"nodeType":"Block","src":"4980:112:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8969,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8959,"src":"5017:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":8968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5009:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8967,"name":"uint112","nodeType":"ElementaryTypeName","src":"5009:7:30","typeDescriptions":{}}},"id":8970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5009:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":8971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5028:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5009:21:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":8973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5008:23:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8976,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"5043:11:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":8975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5035:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8974,"name":"uint112","nodeType":"ElementaryTypeName","src":"5035:7:30","typeDescriptions":{}}},"id":8977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5035:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":8978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5059:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5035:26:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":8980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5034:28:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5008:54:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":8984,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8957,"src":"5073:10:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":8983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5065:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8982,"name":"uint112","nodeType":"ElementaryTypeName","src":"5065:7:30","typeDescriptions":{}}},"id":8985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5065:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5008:76:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"id":8965,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"4997:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$8753_$","typeString":"type(Time.Delay)"}},"id":8966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5003:4:30","memberName":"wrap","nodeType":"MemberAccess","src":"4997:10:30","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$8753_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":8987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4997:88:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"}},"functionReturnParameters":8964,"id":8988,"nodeType":"Return","src":"4990:95:30"}]},"documentation":{"id":8953,"nodeType":"StructuredDocumentation","src":"4813:64:30","text":" @dev pack the components into a Delay object."},"id":8990,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"4891:4:30","nodeType":"FunctionDefinition","parameters":{"id":8960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8955,"mutability":"mutable","name":"valueBefore","nameLocation":"4903:11:30","nodeType":"VariableDeclaration","scope":8990,"src":"4896:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8954,"name":"uint32","nodeType":"ElementaryTypeName","src":"4896:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8957,"mutability":"mutable","name":"valueAfter","nameLocation":"4923:10:30","nodeType":"VariableDeclaration","scope":8990,"src":"4916:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8956,"name":"uint32","nodeType":"ElementaryTypeName","src":"4916:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8959,"mutability":"mutable","name":"effect","nameLocation":"4942:6:30","nodeType":"VariableDeclaration","scope":8990,"src":"4935:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8958,"name":"uint48","nodeType":"ElementaryTypeName","src":"4935:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4895:54:30"},"returnParameters":{"id":8964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8990,"src":"4973:5:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"},"typeName":{"id":8962,"nodeType":"UserDefinedTypeName","pathNode":{"id":8961,"name":"Delay","nameLocations":["4973:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":8753,"src":"4973:5:30"},"referencedDeclaration":8753,"src":"4973:5:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8753","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4972:7:30"},"scope":8991,"src":"4882:210:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8992,"src":"640:4454:30","usedErrors":[],"usedEvents":[]}],"src":"104:4991:30"},"id":30},"contracts/ERC20UpgradableV2.sol":{"ast":{"absolutePath":"contracts/ERC20UpgradableV2.sol","exportedSymbols":{"Checkpoints":[8716],"ContextUpgradeable":[2452],"ECDSA":[4156],"EIP712Upgradeable":[3083],"ERC20BurnableUpgradeable":[1776],"ERC20FlashMintUpgradeable":[2036],"ERC20PausableUpgradeable":[2089],"ERC20PermitUpgradeable":[2258],"ERC20Upgradeable":[1714],"ERC20VotesUpgradeable":[2406],"IERC20":[3491],"IERC20Errors":[3318],"IERC20Metadata":[3517],"IERC20Permit":[3553],"IERC3156FlashBorrower":[3186],"IERC3156FlashLender":[3225],"Initializable":[1097],"NoncesUpgradeable":[2563],"OwnableUpgradeable":[194],"PausableUpgradeable":[2739],"VotesUpgradeable":[843],"WAY":[9141]},"id":9142,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8993,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:31"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":8994,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9142,"sourceUnit":1715,"src":"58:78:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","id":8995,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9142,"sourceUnit":1777,"src":"137:97:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol","id":8996,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9142,"sourceUnit":2090,"src":"235:97:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":8997,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9142,"sourceUnit":195,"src":"333:75:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","id":8998,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9142,"sourceUnit":2259,"src":"409:95:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol","id":8999,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9142,"sourceUnit":2407,"src":"505:94:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol","id":9000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9142,"sourceUnit":2037,"src":"600:98:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":9001,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9142,"sourceUnit":1098,"src":"699:75:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9002,"name":"Initializable","nameLocations":["792:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":1097,"src":"792:13:31"},"id":9003,"nodeType":"InheritanceSpecifier","src":"792:13:31"},{"baseName":{"id":9004,"name":"ERC20Upgradeable","nameLocations":["807:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"807:16:31"},"id":9005,"nodeType":"InheritanceSpecifier","src":"807:16:31"},{"baseName":{"id":9006,"name":"ERC20BurnableUpgradeable","nameLocations":["825:24:31"],"nodeType":"IdentifierPath","referencedDeclaration":1776,"src":"825:24:31"},"id":9007,"nodeType":"InheritanceSpecifier","src":"825:24:31"},{"baseName":{"id":9008,"name":"ERC20PausableUpgradeable","nameLocations":["851:24:31"],"nodeType":"IdentifierPath","referencedDeclaration":2089,"src":"851:24:31"},"id":9009,"nodeType":"InheritanceSpecifier","src":"851:24:31"},{"baseName":{"id":9010,"name":"OwnableUpgradeable","nameLocations":["877:18:31"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"877:18:31"},"id":9011,"nodeType":"InheritanceSpecifier","src":"877:18:31"},{"baseName":{"id":9012,"name":"ERC20PermitUpgradeable","nameLocations":["897:22:31"],"nodeType":"IdentifierPath","referencedDeclaration":2258,"src":"897:22:31"},"id":9013,"nodeType":"InheritanceSpecifier","src":"897:22:31"},{"baseName":{"id":9014,"name":"ERC20VotesUpgradeable","nameLocations":["921:21:31"],"nodeType":"IdentifierPath","referencedDeclaration":2406,"src":"921:21:31"},"id":9015,"nodeType":"InheritanceSpecifier","src":"921:21:31"},{"baseName":{"id":9016,"name":"ERC20FlashMintUpgradeable","nameLocations":["944:25:31"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"944:25:31"},"id":9017,"nodeType":"InheritanceSpecifier","src":"944:25:31"}],"canonicalName":"WAY","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9141,"internalFunctionIDs":{"820":1,"834":2},"linearizedBaseContracts":[9141,2036,3225,2406,843,3261,3166,3276,2258,2563,3083,3250,3553,194,2089,2739,1776,1714,3318,3517,3491,2452,1097],"name":"WAY","nameLocation":"785:3:31","nodeType":"ContractDefinition","nodes":[{"body":{"id":9024,"nodeType":"Block","src":"1043:39:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9021,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"1053:20:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1053:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9023,"nodeType":"ExpressionStatement","src":"1053:22:31"}]},"documentation":{"id":9018,"nodeType":"StructuredDocumentation","src":"976:48:31","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":9025,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9019,"nodeType":"ParameterList","parameters":[],"src":"1040:2:31"},"returnParameters":{"id":9020,"nodeType":"ParameterList","parameters":[],"src":"1043:0:31"},"scope":9141,"src":"1029:53:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9068,"nodeType":"Block","src":"1149:300:31","statements":[{"expression":{"arguments":[{"hexValue":"574159","id":9033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1172:5:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_14e8d9d5dd9a9d91733bcdaaf0e20ab732dc994568deaba7ec5ce51ad3e0036e","typeString":"literal_string \"WAY\""},"value":"WAY"},{"hexValue":"574159","id":9034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1179:5:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_14e8d9d5dd9a9d91733bcdaaf0e20ab732dc994568deaba7ec5ce51ad3e0036e","typeString":"literal_string \"WAY\""},"value":"WAY"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_14e8d9d5dd9a9d91733bcdaaf0e20ab732dc994568deaba7ec5ce51ad3e0036e","typeString":"literal_string \"WAY\""},{"typeIdentifier":"t_stringliteral_14e8d9d5dd9a9d91733bcdaaf0e20ab732dc994568deaba7ec5ce51ad3e0036e","typeString":"literal_string \"WAY\""}],"id":9032,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"1159:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":9035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1159:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9036,"nodeType":"ExpressionStatement","src":"1159:26:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9037,"name":"__ERC20Burnable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"1195:20:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1195:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9039,"nodeType":"ExpressionStatement","src":"1195:22:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9040,"name":"__ERC20Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"1227:20:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1227:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9042,"nodeType":"ExpressionStatement","src":"1227:22:31"},{"expression":{"arguments":[{"id":9044,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9027,"src":"1274:12:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9043,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1259:14:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1259:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9046,"nodeType":"ExpressionStatement","src":"1259:28:31"},{"expression":{"arguments":[{"hexValue":"574159","id":9048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1316:5:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_14e8d9d5dd9a9d91733bcdaaf0e20ab732dc994568deaba7ec5ce51ad3e0036e","typeString":"literal_string \"WAY\""},"value":"WAY"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_14e8d9d5dd9a9d91733bcdaaf0e20ab732dc994568deaba7ec5ce51ad3e0036e","typeString":"literal_string \"WAY\""}],"id":9047,"name":"__ERC20Permit_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"1297:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":9049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1297:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9050,"nodeType":"ExpressionStatement","src":"1297:25:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9051,"name":"__ERC20Votes_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"1332:17:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1332:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9053,"nodeType":"ExpressionStatement","src":"1332:19:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9054,"name":"__ERC20FlashMint_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"1361:21:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1361:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9056,"nodeType":"ExpressionStatement","src":"1361:23:31"},{"expression":{"arguments":[{"expression":{"id":9058,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1401:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1405:6:31","memberName":"sender","nodeType":"MemberAccess","src":"1401:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"353430303030303030","id":9060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:9:31","typeDescriptions":{"typeIdentifier":"t_rational_540000000_by_1","typeString":"int_const 540000000"},"value":"540000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":9061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1425:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9062,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1431:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":9063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1431:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1425:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1413:28:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9057,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"1395:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1395:47:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9067,"nodeType":"ExpressionStatement","src":"1395:47:31"}]},"functionSelector":"c4d66de8","id":9069,"implemented":true,"kind":"function","modifiers":[{"id":9030,"kind":"modifierInvocation","modifierName":{"id":9029,"name":"initializer","nameLocations":["1130:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":951,"src":"1130:11:31"},"nodeType":"ModifierInvocation","src":"1130:11:31"}],"name":"initialize","nameLocation":"1097:10:31","nodeType":"FunctionDefinition","parameters":{"id":9028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9027,"mutability":"mutable","name":"initialOwner","nameLocation":"1116:12:31","nodeType":"VariableDeclaration","scope":9069,"src":"1108:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9026,"name":"address","nodeType":"ElementaryTypeName","src":"1108:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1107:22:31"},"returnParameters":{"id":9031,"nodeType":"ParameterList","parameters":[],"src":"1149:0:31"},"scope":9141,"src":"1088:361:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9077,"nodeType":"Block","src":"1489:25:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9074,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"1499:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1499:8:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9076,"nodeType":"ExpressionStatement","src":"1499:8:31"}]},"functionSelector":"8456cb59","id":9078,"implemented":true,"kind":"function","modifiers":[{"id":9072,"kind":"modifierInvocation","modifierName":{"id":9071,"name":"onlyOwner","nameLocations":["1479:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1479:9:31"},"nodeType":"ModifierInvocation","src":"1479:9:31"}],"name":"pause","nameLocation":"1464:5:31","nodeType":"FunctionDefinition","parameters":{"id":9070,"nodeType":"ParameterList","parameters":[],"src":"1469:2:31"},"returnParameters":{"id":9073,"nodeType":"ParameterList","parameters":[],"src":"1489:0:31"},"scope":9141,"src":"1455:59:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9086,"nodeType":"Block","src":"1556:27:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9083,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"1566:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1566:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9085,"nodeType":"ExpressionStatement","src":"1566:10:31"}]},"functionSelector":"3f4ba83a","id":9087,"implemented":true,"kind":"function","modifiers":[{"id":9081,"kind":"modifierInvocation","modifierName":{"id":9080,"name":"onlyOwner","nameLocations":["1546:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1546:9:31"},"nodeType":"ModifierInvocation","src":"1546:9:31"}],"name":"unpause","nameLocation":"1529:7:31","nodeType":"FunctionDefinition","parameters":{"id":9079,"nodeType":"ParameterList","parameters":[],"src":"1536:2:31"},"returnParameters":{"id":9082,"nodeType":"ParameterList","parameters":[],"src":"1556:0:31"},"scope":9141,"src":"1520:63:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9101,"nodeType":"Block","src":"1648:34:31","statements":[{"expression":{"arguments":[{"id":9097,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9089,"src":"1664:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9098,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9091,"src":"1668:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9096,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"1658:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1658:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9100,"nodeType":"ExpressionStatement","src":"1658:17:31"}]},"functionSelector":"40c10f19","id":9102,"implemented":true,"kind":"function","modifiers":[{"id":9094,"kind":"modifierInvocation","modifierName":{"id":9093,"name":"onlyOwner","nameLocations":["1638:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1638:9:31"},"nodeType":"ModifierInvocation","src":"1638:9:31"}],"name":"mint","nameLocation":"1598:4:31","nodeType":"FunctionDefinition","parameters":{"id":9092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9089,"mutability":"mutable","name":"to","nameLocation":"1611:2:31","nodeType":"VariableDeclaration","scope":9102,"src":"1603:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9088,"name":"address","nodeType":"ElementaryTypeName","src":"1603:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9091,"mutability":"mutable","name":"amount","nameLocation":"1623:6:31","nodeType":"VariableDeclaration","scope":9102,"src":"1615:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1615:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1602:28:31"},"returnParameters":{"id":9095,"nodeType":"ParameterList","parameters":[],"src":"1648:0:31"},"scope":9141,"src":"1589:93:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1513,2088,2361],"body":{"id":9123,"nodeType":"Block","src":"1911:47:31","statements":[{"expression":{"arguments":[{"id":9118,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9104,"src":"1935:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9119,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9106,"src":"1941:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9108,"src":"1945:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9115,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1921:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_WAY_$9141_$","typeString":"type(contract super WAY)"}},"id":9117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1927:7:31","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":2361,"src":"1921:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1921:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9122,"nodeType":"ExpressionStatement","src":"1921:30:31"}]},"id":9124,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"1765:7:31","nodeType":"FunctionDefinition","overrides":{"id":9113,"nodeType":"OverrideSpecifier","overrides":[{"id":9110,"name":"ERC20Upgradeable","nameLocations":["1840:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"1840:16:31"},{"id":9111,"name":"ERC20PausableUpgradeable","nameLocations":["1858:24:31"],"nodeType":"IdentifierPath","referencedDeclaration":2089,"src":"1858:24:31"},{"id":9112,"name":"ERC20VotesUpgradeable","nameLocations":["1884:21:31"],"nodeType":"IdentifierPath","referencedDeclaration":2406,"src":"1884:21:31"}],"src":"1831:75:31"},"parameters":{"id":9109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9104,"mutability":"mutable","name":"from","nameLocation":"1781:4:31","nodeType":"VariableDeclaration","scope":9124,"src":"1773:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9103,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9106,"mutability":"mutable","name":"to","nameLocation":"1795:2:31","nodeType":"VariableDeclaration","scope":9124,"src":"1787:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9105,"name":"address","nodeType":"ElementaryTypeName","src":"1787:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9108,"mutability":"mutable","name":"value","nameLocation":"1807:5:31","nodeType":"VariableDeclaration","scope":9124,"src":"1799:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1799:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1772:41:31"},"returnParameters":{"id":9114,"nodeType":"ParameterList","parameters":[],"src":"1911:0:31"},"scope":9141,"src":"1756:202:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2247,2515],"body":{"id":9139,"nodeType":"Block","src":"2097:43:31","statements":[{"expression":{"arguments":[{"id":9136,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9126,"src":"2127:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9134,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2114:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_WAY_$9141_$","typeString":"type(contract super WAY)"}},"id":9135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2120:6:31","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2247,"src":"2114:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":9137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2114:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9133,"id":9138,"nodeType":"Return","src":"2107:26:31"}]},"functionSelector":"7ecebe00","id":9140,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1973:6:31","nodeType":"FunctionDefinition","overrides":{"id":9130,"nodeType":"OverrideSpecifier","overrides":[{"id":9128,"name":"ERC20PermitUpgradeable","nameLocations":["2028:22:31"],"nodeType":"IdentifierPath","referencedDeclaration":2258,"src":"2028:22:31"},{"id":9129,"name":"NoncesUpgradeable","nameLocations":["2052:17:31"],"nodeType":"IdentifierPath","referencedDeclaration":2563,"src":"2052:17:31"}],"src":"2019:51:31"},"parameters":{"id":9127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9126,"mutability":"mutable","name":"owner","nameLocation":"1988:5:31","nodeType":"VariableDeclaration","scope":9140,"src":"1980:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9125,"name":"address","nodeType":"ElementaryTypeName","src":"1980:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1979:15:31"},"returnParameters":{"id":9133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9140,"src":"2084:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9131,"name":"uint256","nodeType":"ElementaryTypeName","src":"2084:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2083:9:31"},"scope":9141,"src":"1964:176:31","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":9142,"src":"776:1366:31","usedErrors":[30,35,262,269,860,863,1803,1808,1813,2124,2131,2282,2466,2602,2605,3091,3288,3293,3298,3307,3312,3317,3819,3824,3829,5294,7152],"usedEvents":[41,868,2594,2599,3100,3109,3230,3425,3434]}],"src":"32:2110:31"},"id":31}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol":{"VotesUpgradeable":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is a base abstract contract that tracks voting units, which are a measure of voting power that can be transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of \\\"representative\\\" that will pool delegated voting units from different accounts and can then use it to vote in decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative. This contract is often combined with a token contract such that voting units correspond to token units. For an example, see {ERC721Votes}. The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the cost of this history tracking optional. When using this module the derived contract must implement {_getVotingUnits} (for example, make it return {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the previous example, it would be included in {ERC721-_update}).\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol\":\"VotesUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol\":{\"keccak256\":\"0xa9db28430d1e949a78a2040f08ce0062b39f1ee436d2ca4f7bb3c99001ae0bc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c6368062fba93e56dcde4e2443a45275c1950cc889a57778d2407240c4f2ba7\",\"dweb:/ipfs/QmP6PDS6aYo1Q8U8etR2dKco7bf4WP35fazGzMUWubdETB\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ERC20BurnableUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":\"ERC20BurnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f\",\"dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol":{"ERC20FlashMintUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"maxLoan","type":"uint256"}],"name":"ERC3156ExceededMaxLoan","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC3156InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"ERC3156UnsupportedToken","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","maxFlashLoan(address)":"613255ab","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxLoan\",\"type\":\"uint256\"}],\"name\":\"ERC3156ExceededMaxLoan\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC3156InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ERC3156UnsupportedToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC3156 Flash loans extension, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]. Adds the {flashLoan} method, which provides flash loan support at the token level. By default there is no fee, but this can be changed by overriding {flashFee}. NOTE: When this extension is used along with the {ERC20Capped} or {ERC20Votes} extensions, {maxFlashLoan} will not correctly reflect the maximum that can be flash minted. We recommend overriding {maxFlashLoan} so that it correctly reflects the supply cap.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC3156ExceededMaxLoan(uint256)\":[{\"details\":\"The requested loan exceeds the max loan value for `token`.\"}],\"ERC3156InvalidReceiver(address)\":[{\"details\":\"The receiver of a flashloan is not a valid {onFlashLoan} implementer.\"}],\"ERC3156UnsupportedToken(address)\":[{\"details\":\"The loan token is not valid.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"flashFee(address,uint256)\":{\"details\":\"Returns the fee applied when doing flash loans. This function calls the {_flashFee} function which returns the fee applied when doing flash loans.\",\"params\":{\"token\":\"The token to be flash loaned.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"The fees applied to the corresponding flash loan.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Performs a flash loan. New tokens are minted and sent to the `receiver`, who is required to implement the {IERC3156FlashBorrower} interface. By the end of the flash loan, the receiver is expected to own value + fee tokens and have them approved back to the token contract itself so they can be burned.\",\"params\":{\"data\":\"An arbitrary datafield that is passed to the receiver.\",\"receiver\":\"The receiver of the flash loan. Should implement the {IERC3156FlashBorrower-onFlashLoan} interface.\",\"token\":\"The token to be flash loaned. Only `address(this)` is supported.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"`true` if the flash loan was successful.\"}},\"maxFlashLoan(address)\":{\"details\":\"Returns the maximum amount of tokens available for loan.\",\"params\":{\"token\":\"The address of the token that is requested.\"},\"returns\":{\"_0\":\"The amount of token that can be loaned. NOTE: This function does not consider any form of supply cap, so in case it's used in a token with a cap like {ERC20Capped}, make sure to override this function to integrate the cap instead of `type(uint256).max`.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol\":\"ERC20FlashMintUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol\":{\"keccak256\":\"0x5419ce583668d1ab6a0833923c0f4c3eed93e87edbeca4f833c35bd5b53163bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c9a241f708d229ac116533a18d8a49b38276a5c96ccda661fbda63e93d5ad23\",\"dweb:/ipfs/QmQBwhTKBfWSR5gxG8LJS4YbfJtUz9e9yQXsLsCkQD8vr9\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306\",\"dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol":{"ERC20PausableUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":\"ERC20PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":{\"keccak256\":\"0xf31761e4cd0b20c33a04e8cfa21d3b40f0a18dd26f66f97686f87668ab5ba8f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8be0ae676c129bb8ee94e32f075f5d017b257c09e02f3ed6c830ec5b9ca6e666\",\"dweb:/ipfs/QmeaPYo4t3XaAK8bbxkjTT3bTKQZHUXVadjysSfz5cuUbX\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"ERC20PermitUpgradeable":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":\"ERC20PermitUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x8a97653aeba40e9f0c2e8df1a1379b29b927b6dc3534040c668e71ad9ae89d88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e529c294c9d634eb68a1e4aeb66eb8381de5a08ccd2c0bfeebd48a6b28fcff7\",\"dweb:/ipfs/QmWCezuxfZb68nM3Hs6XzQNNiW7VJsymU4sajy2DW1CKbp\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":{"ERC20VotesUpgradeable":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1. NOTE: This contract does not provide interface compatibility with Compound's COMP token. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":\"ERC20VotesUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol\":{\"keccak256\":\"0xa9db28430d1e949a78a2040f08ce0062b39f1ee436d2ca4f7bb3c99001ae0bc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c6368062fba93e56dcde4e2443a45275c1950cc889a57778d2407240c4f2ba7\",\"dweb:/ipfs/QmP6PDS6aYo1Q8U8etR2dKco7bf4WP35fazGzMUWubdETB\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":{\"keccak256\":\"0x804fafbc589e3c29f075239c21a0f3ee8eff5bb5579cdd27992beb5126a050f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17bfc44b6c8cf90239ff347c6ff5f1962ed96d06300ce166484d565227989928\",\"dweb:/ipfs/QmRd9kUAkegsHzCxzeh6CD4sCpfwoc6BkWdBcvZUC73eY1\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol":{"NoncesUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":\"NoncesUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"EIP712Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":\"EIP712Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\",\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"IERC3156FlashBorrower":{"abi":[{"inputs":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onFlashLoan","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onFlashLoan(address,address,uint256,uint256,bytes)":"23e30c8b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC3156 FlashBorrower, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\",\"kind\":\"dev\",\"methods\":{\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"details\":\"Receive a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"fee\":\"The additional amount of tokens to repay.\",\"initiator\":\"The initiator of the loan.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The keccak256 hash of \\\"ERC3156FlashBorrower.onFlashLoan\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":\"IERC3156FlashBorrower\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"IERC3156FlashLender":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","maxFlashLoan(address)":"613255ab"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC3156 FlashLender, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\",\"kind\":\"dev\",\"methods\":{\"flashFee(address,uint256)\":{\"details\":\"The fee to be charged for a given loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` to be charged for the loan, on top of the returned principal.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Initiate a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"receiver\":\"The receiver of the tokens in the loan, and the receiver of the callback.\",\"token\":\"The loan currency.\"}},\"maxFlashLoan(address)\":{\"details\":\"The amount of currency available to be lended.\",\"params\":{\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` that can be borrowed.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":\"IERC3156FlashLender\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306\",\"dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f40e94b7c22cbc68c64cc150df74b15ad116d25c973171cb738157c0cf9fc8d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 BLOCKHASH 0xE9 0x4B PUSH29 0x22CBC68C64CC150DF74B15AD116D25C973171CB738157C0CF9FC8D6473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"251:2847:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f40e94b7c22cbc68c64cc150df74b15ad116d25c973171cb738157c0cf9fc8d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 BLOCKHASH 0xE9 0x4B PUSH29 0x22CBC68C64CC150DF74B15AD116D25C973171CB738157C0CF9FC8D6473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"251:2847:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206398da0ab376410b7492889b5672c8bd6a7ac8e3dcfdbb6ff5606668d83ae9e864736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x98DA0AB3 PUSH23 0x410B7492889B5672C8BD6A7AC8E3DCFDBB6FF5606668D8 GASPRICE 0xE9 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7386:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206398da0ab376410b7492889b5672c8bd6a7ac8e3dcfdbb6ff5606668d83ae9e864736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x98DA0AB3 PUSH23 0x410B7492889B5672C8BD6A7AC8E3DCFDBB6FF5606668D8 GASPRICE 0xE9 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a406b567e3259b8f82991ec51e4f9d315b6749f04ca7665577322f74c4c994164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A BLOCKHASH PUSH12 0x567E3259B8F82991EC51E4F9 0xD3 ISZERO 0xB6 PUSH21 0x9F04CA7665577322F74C4C994164736F6C63430008 EQ STOP CALLER ","sourceMap":"521:3235:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3235:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a406b567e3259b8f82991ec51e4f9d315b6749f04ca7665577322f74c4c994164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A BLOCKHASH PUSH12 0x567E3259B8F82991EC51E4F9 0xD3 ISZERO 0xB6 PUSH21 0x9F04CA7665577322F74C4C994164736F6C63430008 EQ STOP CALLER ","sourceMap":"521:3235:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af475f69c4b4dab4e9425db1a5103bc48375a605fd17f35f74626e80c5ac18c164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF SELFBALANCE PUSH0 PUSH10 0xC4B4DAB4E9425DB1A510 EXTCODESIZE 0xC4 DUP4 PUSH22 0xA605FD17F35F74626E80C5AC18C164736F6C63430008 EQ STOP CALLER ","sourceMap":"203:14914:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:26;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af475f69c4b4dab4e9425db1a5103bc48375a605fd17f35f74626e80c5ac18c164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF SELFBALANCE PUSH0 PUSH10 0xC4B4DAB4E9425DB1A510 EXTCODESIZE 0xC4 DUP4 PUSH22 0xA605FD17F35F74626E80C5AC18C164736F6C63430008 EQ STOP CALLER ","sourceMap":"203:14914:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f7c5a605d13310051625354df2510987ef90c38fab1efb14eba5c7f8c6006d0d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xC5 0xA6 SDIV 0xD1 CALLER LT SDIV AND 0x25 CALLDATALOAD 0x4D CALLCODE MLOAD MULMOD DUP8 0xEF SWAP1 0xC3 DUP16 0xAB 0x1E 0xFB EQ 0xEB 0xA5 0xC7 0xF8 0xC6 STOP PUSH14 0xD64736F6C634300081400330000 ","sourceMap":"764:33927:27:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;764:33927:27;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f7c5a605d13310051625354df2510987ef90c38fab1efb14eba5c7f8c6006d0d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xC5 0xA6 SDIV 0xD1 CALLER LT SDIV AND 0x25 CALLDATALOAD 0x4D CALLCODE MLOAD MULMOD DUP8 0xEF SWAP1 0xC3 DUP16 0xAB 0x1E 0xFB EQ 0xEB 0xA5 0xC7 0xF8 0xC6 STOP PUSH14 0xD64736F6C634300081400330000 ","sourceMap":"764:33927:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203cd4c1fbfd9ead2d9118560d3b1bd2545e7c12a65f161f9aaaf37e82e449812e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xD4 0xC1 0xFB REVERT SWAP15 0xAD 0x2D SWAP2 XOR JUMP 0xD EXTCODESIZE SHL 0xD2 SLOAD 0x5E PUSH29 0x12A65F161F9AAAF37E82E449812E64736F6C6343000814003300000000 ","sourceMap":"216:1047:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:28;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203cd4c1fbfd9ead2d9118560d3b1bd2545e7c12a65f161f9aaaf37e82e449812e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xD4 0xC1 0xFB REVERT SWAP15 0xAD 0x2D SWAP2 XOR JUMP 0xD EXTCODESIZE SHL 0xD2 SLOAD 0x5E PUSH29 0x12A65F161F9AAAF37E82E449812E64736F6C6343000814003300000000 ","sourceMap":"216:1047:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"Checkpoints":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208007fa968e8236fe46cb382a16642983f90980d3fc5c2cbdf99d682b58921da564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 SMOD STATICCALL SWAP7 DUP15 DUP3 CALLDATASIZE INVALID CHAINID 0xCB CODESIZE 0x2A AND PUSH5 0x2983F90980 0xD3 0xFC 0x5C 0x2C 0xBD 0xF9 SWAP14 PUSH9 0x2B58921DA564736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"668:20471:29:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;668:20471:29;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208007fa968e8236fe46cb382a16642983f90980d3fc5c2cbdf99d682b58921da564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 SMOD STATICCALL SWAP7 DUP15 DUP3 CALLDATASIZE INVALID CHAINID 0xCB CODESIZE 0x2A AND PUSH5 0x2983F90980 0xD3 0xFC 0x5C 0x2C 0xBD 0xF9 SWAP14 PUSH9 0x2B58921DA564736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"668:20471:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library defines the `Trace*` struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See {Votes} as an example. To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new checkpoint for the current transaction block using the {push} function.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":\"Checkpoints\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/types/Time.sol":{"Time":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e906910dac11bf8b7713e250d81a5adc6e112e5540d4837a524556318ad70b8764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 MOD SWAP2 0xD 0xAC GT 0xBF DUP12 PUSH24 0x13E250D81A5ADC6E112E5540D4837A524556318AD70B8764 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"640:4454:30:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;640:4454:30;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e906910dac11bf8b7713e250d81a5adc6e112e5540d4837a524556318ad70b8764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 MOD SWAP2 0xD 0xAC GT 0xBF DUP12 PUSH24 0x13E250D81A5ADC6E112E5540D4837A524556318AD70B8764 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"640:4454:30:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides helpers for manipulating time-related objects. It uses the following types: - `uint48` for timepoints - `uint32` for durations While the library doesn't provide specific types for timepoints and duration, it does provide: - a `Delay` type to represent duration that can be programmed to change value automatically at a given point - additional helper functions\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/types/Time.sol\":\"Time\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/ERC20UpgradableV2.sol":{"WAY":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"uint256","name":"maxLoan","type":"uint256"}],"name":"ERC3156ExceededMaxLoan","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC3156InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"ERC3156UnsupportedToken","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_9025":{"entryPoint":null,"id":9025,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_1065":{"entryPoint":34,"id":1065,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_1096":{"entryPoint":null,"id":1096,"parameterSlots":0,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:216:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"113:101:32","statements":[{"nodeType":"YulAssignment","src":"123:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"135:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"146:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"131:3:32"},"nodeType":"YulFunctionCall","src":"131:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"123:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"165:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"180:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"196:2:32","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"200:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"192:3:32"},"nodeType":"YulFunctionCall","src":"192:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"204:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"188:3:32"},"nodeType":"YulFunctionCall","src":"188:18:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"176:3:32"},"nodeType":"YulFunctionCall","src":"176:31:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"158:6:32"},"nodeType":"YulFunctionCall","src":"158:50:32"},"nodeType":"YulExpressionStatement","src":"158:50:32"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"82:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"93:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"104:4:32","type":""}],"src":"14:200:32"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506200001c62000022565b620000d6565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000735760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d35780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b613b0980620000e66000396000f3fe608060405234801561001057600080fd5b506004361061025c5760003560e01c8063715018a6116101455780639ab24eb0116100bd578063d505accf1161008c578063dd62ed3e11610071578063dd62ed3e1461059d578063f1127ed814610602578063f2fde38b1461065457600080fd5b8063d505accf14610577578063d9d98ce41461058a57600080fd5b80639ab24eb01461052b578063a9059cbb1461053e578063c3cda52014610551578063c4d66de81461056457600080fd5b806384b0196e116101145780638e539e8c116100f95780638e539e8c146104f157806391ddadf41461050457806395d89b411461052357600080fd5b806384b0196e146104995780638da5cb5b146104b457600080fd5b8063715018a61461046357806379cc67901461046b5780637ecebe001461047e5780638456cb591461049157600080fd5b806342966c68116101d85780635c975abb116101a7578063613255ab1161018c578063613255ab146104155780636fcfff451461042857806370a082311461045057600080fd5b80635c975abb146103d85780635cffe9de1461040257600080fd5b806342966c681461032d5780634bf5d7e914610340578063587cde1e146103485780635c19a95c146103c557600080fd5b8063313ce5671161022f5780633a46b1a8116102145780633a46b1a8146102fd5780633f4ba83a1461031057806340c10f191461031a57600080fd5b8063313ce567146102e65780633644e515146102f557600080fd5b806306fdde0314610261578063095ea7b31461027f57806318160ddd146102a257806323b872dd146102d3575b600080fd5b610269610667565b60405161027691906131fe565b60405180910390f35b61029261028d366004613233565b610722565b6040519015158152602001610276565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b604051908152602001610276565b6102926102e136600461325f565b61073c565b60405160128152602001610276565b6102c5610760565b6102c561030b366004613233565b61076f565b610318610852565b005b610318610328366004613233565b610864565b61031861033b3660046132a0565b61087a565b610269610887565b6103a06103563660046132b9565b73ffffffffffffffffffffffffffffffffffffffff90811660009081527fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0060205260409020541690565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610276565b6103186103d33660046132b9565b610918565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff16610292565b6102926104103660046132d6565b610923565b6102c56104233660046132b9565b610b0e565b61043b6104363660046132b9565b610b80565b60405163ffffffff9091168152602001610276565b6102c561045e3660046132b9565b610b8b565b610318610bdd565b610318610479366004613233565b610bef565b6102c561048c3660046132b9565b610c04565b610318610c0f565b6104a1610c1f565b6040516102769796959493929190613375565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005473ffffffffffffffffffffffffffffffffffffffff166103a0565b6102c56104ff3660046132a0565b610d1b565b61050c610dd5565b60405165ffffffffffff9091168152602001610276565b610269610ddf565b6102c56105393660046132b9565b610e30565b61029261054c366004613233565b610ec2565b61031861055f36600461344a565b610ed0565b6103186105723660046132b9565b610fb3565b6103186105853660046134a4565b611228565b6102c5610598366004613233565b6113f4565b6102c56105ab366004613512565b73ffffffffffffffffffffffffffffffffffffffff91821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b61061561061036600461354b565b611467565b60408051825165ffffffffffff16815260209283015179ffffffffffffffffffffffffffffffffffffffffffffffffffff169281019290925201610276565b6103186106623660046132b9565b611485565b606060007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace005b905080600301805461069e90613582565b80601f01602080910402602001604051908101604052809291908181526020018280546106ca90613582565b80156107175780601f106106ec57610100808354040283529160200191610717565b820191906000526020600020905b8154815290600101906020018083116106fa57829003601f168201915b505050505091505090565b6000336107308185856114e6565b60019150505b92915050565b60003361074a8582856114f8565b6107558585856115e6565b506001949350505050565b600061076a611691565b905090565b60007fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d008161079b610dd5565b90508065ffffffffffff1684106107f4576040517fecd3f81e0000000000000000000000000000000000000000000000000000000081526004810185905265ffffffffffff821660248201526044015b60405180910390fd5b61082d6108008561169b565b73ffffffffffffffffffffffffffffffffffffffff871660009081526001850160205260409020906116eb565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff1695945050505050565b61085a6117b7565b610862611845565b565b61086c6117b7565b61087682826118e2565b5050565b610884338261193e565b50565b606061089161199a565b65ffffffffffff166108a1610dd5565b65ffffffffffff16146108e0576040517f6ff0714000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b3361087681836119a5565b60008061092f86610b0e565b90508085111561096e576040517ffd9a7609000000000000000000000000000000000000000000000000000000008152600481018290526024016107eb565b600061097a87876113f4565b905061098688876118e2565b6040517f23e30c8b0000000000000000000000000000000000000000000000000000000081527f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99073ffffffffffffffffffffffffffffffffffffffff8a16906323e30c8b90610a049033908c908c9088908d908d906004016135d5565b6020604051808303816000875af1158015610a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a47919061365b565b14610a96576040517f678c5b0000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff891660048201526024016107eb565b6000610aac8930610aa7858b6136a3565b6114f8565b811580610acd575073ffffffffffffffffffffffffffffffffffffffff8116155b15610aea57610ae589610ae0848a6136a3565b61193e565b610aff565b610af4898861193e565b610aff8982846115e6565b50600198975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82163014610b34576000610736565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0254610736907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6136b6565b600061073682611aab565b6000807f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace005b73ffffffffffffffffffffffffffffffffffffffff90931660009081526020939093525050604090205490565b610be56117b7565b6108626000611b1b565b610bfa8233836114f8565b610876828261193e565b600061073682611bb1565b610c176117b7565b610862611bbc565b600060608082808083817fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1008054909150158015610c5e57506001810154155b610cc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4549503731323a20556e696e697469616c697a6564000000000000000000000060448201526064016107eb565b610ccc611c35565b610cd4611c86565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009c939b5091995046985030975095509350915050565b60007fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0081610d47610dd5565b90508065ffffffffffff168410610d9b576040517fecd3f81e0000000000000000000000000000000000000000000000000000000081526004810185905265ffffffffffff821660248201526044016107eb565b610db1610da78561169b565b60028401906116eb565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16949350505050565b600061076a61199a565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060917f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace009161069e90613582565b73ffffffffffffffffffffffffffffffffffffffff811660009081527fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d01602052604081207fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0090610e9f90611cb0565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff169392505050565b6000336107308185856115e6565b83421115610f0d576040517f4683af0e000000000000000000000000000000000000000000000000000000008152600481018590526024016107eb565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf602082015273ffffffffffffffffffffffffffffffffffffffff8816918101919091526060810186905260808101859052600090610f9490610f8c9060a00160405160208183030381529060405280519060200120611cf6565b858585611d3e565b9050610fa08187611d6c565b610faa81886119a5565b50505050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610ffe5750825b905060008267ffffffffffffffff16600114801561101b5750303b155b905081158015611029575080155b15611060576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000016600117855583156110c15784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b6111356040518060400160405280600381526020017f57415900000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f5741590000000000000000000000000000000000000000000000000000000000815250611e11565b61113d611e23565b611145611e2b565b61114e86611e3b565b61118c6040518060400160405280600381526020017f5741590000000000000000000000000000000000000000000000000000000000815250611e4c565b611194611e23565b61119c611e23565b6111bf336111ac6012600a613818565b6111ba9063202fbf00613827565b6118e2565b83156112205784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b83421115611265576040517f62791302000000000000000000000000000000000000000000000000000000008152600481018590526024016107eb565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886112de8c73ffffffffffffffffffffffffffffffffffffffff1660009081527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006020526040902080546001810190915590565b60408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061134682611cf6565b9050600061135682878787611d3e565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113dd576040517f4b800e4600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301528b1660248201526044016107eb565b6113e88a8a8a6114e6565b50505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff8316301461145d576040517fb5a7db9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024016107eb565b60005b9392505050565b60408051808201909152600080825260208201526114608383611e93565b61148d6117b7565b73ffffffffffffffffffffffffffffffffffffffff81166114dd576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016107eb565b61088481611b1b565b6114f38383836001611f1d565b505050565b73ffffffffffffffffffffffffffffffffffffffff83811660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146115e057818110156115d1576040517ffb8f41b200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101829052604481018390526064016107eb565b6115e084848484036000611f1d565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316611636576040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600060048201526024016107eb565b73ffffffffffffffffffffffffffffffffffffffff8216611686576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016107eb565b6114f383838361208a565b600061076a612095565b600065ffffffffffff8211156116e7576040517f6dfcc65000000000000000000000000000000000000000000000000000000000815260306004820152602481018390526044016107eb565b5090565b81546000908181600581111561174a57600061170684612109565b61171090856136b6565b60008881526020902090915081015465ffffffffffff908116908716101561173a57809150611748565b6117458160016136a3565b92505b505b6000611758878785856121f1565b905080156117a95761177d8761176f6001846136b6565b600091825260209091200190565b546601000000000000900479ffffffffffffffffffffffffffffffffffffffffffffffffffff166117ac565b60005b979650505050505050565b336117f67f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610862576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016107eb565b61184d612253565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f0330080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a150565b73ffffffffffffffffffffffffffffffffffffffff8216611932576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016107eb565b6108766000838361208a565b73ffffffffffffffffffffffffffffffffffffffff821661198e576040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600060048201526024016107eb565b6108768260008361208a565b600061076a4361169b565b7fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d006000611a168473ffffffffffffffffffffffffffffffffffffffff90811660009081527fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0060205260409020541690565b73ffffffffffffffffffffffffffffffffffffffff85811660008181526020869052604080822080547fffffffffffffffffffffffff000000000000000000000000000000000000000016898616908117909155905194955093928516927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46115e08184611aa6876122ae565b6122b9565b73ffffffffffffffffffffffffffffffffffffffff811660009081527fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0160205260408120547fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0090611460906124ec565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080547fffffffffffffffffffffffff0000000000000000000000000000000000000000811673ffffffffffffffffffffffffffffffffffffffff848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b600061073682612536565b611bc461255f565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f0330080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336118b7565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10280546060917fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1009161069e90613582565b606060007fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10061068d565b8054600090801561145d57611cca8361176f6001846136b6565b546601000000000000900479ffffffffffffffffffffffffffffffffffffffffffffffffffff16611460565b6000610736611d03611691565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b600080600080611d50888888886125bb565b925092509250611d6082826126b5565b50909695505050505050565b73ffffffffffffffffffffffffffffffffffffffff821660009081527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00602052604090208054600181019091558181146114f3576040517f752d88c000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602481018290526044016107eb565b611e196127b9565b6108768282612820565b6108626127b9565b611e336127b9565b610862612883565b611e436127b9565b610884816128d4565b611e546127b9565b610884816040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152506128dc565b6040805180820182526000808252602080830182905273ffffffffffffffffffffffffffffffffffffffff861682527fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d019052919091207fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0090611f15908461294f565b949350505050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0073ffffffffffffffffffffffffffffffffffffffff8516611f8e576040517fe602df05000000000000000000000000000000000000000000000000000000008152600060048201526024016107eb565b73ffffffffffffffffffffffffffffffffffffffff8416611fde576040517f94280d62000000000000000000000000000000000000000000000000000000008152600060048201526024016107eb565b73ffffffffffffffffffffffffffffffffffffffff808616600090815260018301602090815260408083209388168352929052208390558115612083578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161207a91815260200190565b60405180910390a35b5050505050565b6114f38383836129d5565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6120c0612a94565b6120c8612b10565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60008160000361211b57506000919050565b6000600161212884612b66565b901c6001901b905060018184816121415761214161383e565b048201901c905060018184816121595761215961383e565b048201901c905060018184816121715761217161383e565b048201901c905060018184816121895761218961383e565b048201901c905060018184816121a1576121a161383e565b048201901c905060018184816121b9576121b961383e565b048201901c905060018184816121d1576121d161383e565b048201901c9050611460818285816121eb576121eb61383e565b04612bfa565b60005b8183101561224b5760006122088484612c10565b60008781526020902090915065ffffffffffff86169082015465ffffffffffff16111561223757809250612245565b6122428160016136a3565b93505b506121f4565b509392505050565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff16610862576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061073682610b8b565b7fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0073ffffffffffffffffffffffffffffffffffffffff848116908416148015906123035750600082115b156115e05773ffffffffffffffffffffffffffffffffffffffff8416156123fa5773ffffffffffffffffffffffffffffffffffffffff841660009081526001820160205260408120819061236290612c2b61235d87612c37565b612c97565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16915079ffffffffffffffffffffffffffffffffffffffffffffffffffff1691508573ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516123ef929190918252602082015260400190565b60405180910390a250505b73ffffffffffffffffffffffffffffffffffffffff8316156115e05773ffffffffffffffffffffffffffffffffffffffff831660009081526001820160205260408120819061244f90612cd061235d87612c37565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16915079ffffffffffffffffffffffffffffffffffffffffffffffffffff1691508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516124dc929190918252602082015260400190565b60405180910390a2505050505050565b600063ffffffff8211156116e7576040517f6dfcc65000000000000000000000000000000000000000000000000000000000815260206004820152602481018390526044016107eb565b6000807f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00610bb0565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff1615610862576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156125f657506000915060039050826126ab565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561264a573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166126a1575060009250600191508290506126ab565b9250600091508190505b9450945094915050565b60008260038111156126c9576126c961386d565b036126d2575050565b60018260038111156126e6576126e661386d565b0361271d576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028260038111156127315761273161386d565b0361276b576040517ffce698f7000000000000000000000000000000000000000000000000000000008152600481018290526024016107eb565b600382600381111561277f5761277f61386d565b03610876576040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600481018290526024016107eb565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610862576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6128286127b9565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0361287484826138e2565b50600481016115e083826138e2565b61288b6127b9565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f0330080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b61148d6127b9565b6128e46127b9565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1007fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10261293084826138e2565b506003810161293f83826138e2565b5060008082556001909101555050565b6040805180820190915260008082526020820152826000018263ffffffff168154811061297e5761297e6139fc565b60009182526020918290206040805180820190915291015465ffffffffffff811682526601000000000000900479ffffffffffffffffffffffffffffffffffffffffffffffffffff16918101919091529392505050565b6129e0838383612cdc565b73ffffffffffffffffffffffffffffffffffffffff8316612a89576000612a257f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b905079ffffffffffffffffffffffffffffffffffffffffffffffffffff80821115612a86576040517f1cb15d2600000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016107eb565b50505b6114f3838383612cef565b60007fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10081612ac0611c35565b805190915015612ad857805160209091012092915050565b81548015612ae7579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b60007fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10081612b3c611c86565b805190915015612b5457805160209091012092915050565b60018201548015612ae7579392505050565b600080608083901c15612b7b57608092831c92015b604083901c15612b8d57604092831c92015b602083901c15612b9f57602092831c92015b601083901c15612bb157601092831c92015b600883901c15612bc357600892831c92015b600483901c15612bd557600492831c92015b600283901c15612be757600292831c92015b600183901c156107365760010192915050565b6000818310612c095781611460565b5090919050565b6000612c1f6002848418613a2b565b611460908484166136a3565b60006114608284613a66565b600079ffffffffffffffffffffffffffffffffffffffffffffffffffff8211156116e7576040517f6dfcc65000000000000000000000000000000000000000000000000000000000815260d06004820152602481018390526044016107eb565b600080612cc3612ca5610dd5565b612cbb612cb188611cb0565b868863ffffffff16565b879190612dd0565b915091505b935093915050565b60006114608284613aa0565b612ce461255f565b6114f3838383612dde565b7fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0073ffffffffffffffffffffffffffffffffffffffff8416612d4157612d3e81600201612cd061235d85612c37565b50505b73ffffffffffffffffffffffffffffffffffffffff8316612d7257612d6f81600201612c2b61235d85612c37565b50505b73ffffffffffffffffffffffffffffffffffffffff84811660009081527fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0060205260408082205486841683529120546115e0929182169116846122b9565b600080612cc3858585612faf565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0073ffffffffffffffffffffffffffffffffffffffff8416612e395781816002016000828254612e2e91906136a3565b90915550612eeb9050565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020829052604090205482811015612ebf576040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616600482015260248101829052604481018490526064016107eb565b73ffffffffffffffffffffffffffffffffffffffff851660009081526020839052604090209083900390555b73ffffffffffffffffffffffffffffffffffffffff8316612f16576002810180548390039055612f42565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020829052604090208054830190555b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051612fa191815260200190565b60405180910390a350505050565b825460009081908015613129576000612fcd8761176f6001856136b6565b60408051808201909152905465ffffffffffff808216808452660100000000000090920479ffffffffffffffffffffffffffffffffffffffffffffffffffff1660208401529192509087161015613050576040517f2520601d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805165ffffffffffff8088169116036130b257846130738861176f6001866136b6565b805479ffffffffffffffffffffffffffffffffffffffffffffffffffff9290921666010000000000000265ffffffffffff909216919091179055613119565b6040805180820190915265ffffffffffff808816825279ffffffffffffffffffffffffffffffffffffffffffffffffffff80881660208085019182528b54600181018d5560008d815291909120945191519092166601000000000000029216919091179101555b602001519250839150612cc89050565b50506040805180820190915265ffffffffffff808516825279ffffffffffffffffffffffffffffffffffffffffffffffffffff80851660208085019182528854600181018a5560008a8152918220955192519093166601000000000000029190931617920191909155905081612cc8565b6000815180845260005b818110156131c0576020818501810151868301820152016131a4565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081526000611460602083018461319a565b73ffffffffffffffffffffffffffffffffffffffff8116811461088457600080fd5b6000806040838503121561324657600080fd5b823561325181613211565b946020939093013593505050565b60008060006060848603121561327457600080fd5b833561327f81613211565b9250602084013561328f81613211565b929592945050506040919091013590565b6000602082840312156132b257600080fd5b5035919050565b6000602082840312156132cb57600080fd5b813561146081613211565b6000806000806000608086880312156132ee57600080fd5b85356132f981613211565b9450602086013561330981613211565b935060408601359250606086013567ffffffffffffffff8082111561332d57600080fd5b818801915088601f83011261334157600080fd5b81358181111561335057600080fd5b89602082850101111561336257600080fd5b9699959850939650602001949392505050565b7fff00000000000000000000000000000000000000000000000000000000000000881681526000602060e0818401526133b160e084018a61319a565b83810360408501526133c3818a61319a565b6060850189905273ffffffffffffffffffffffffffffffffffffffff8816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561342257835183529284019291840191600101613406565b50909c9b505050505050505050505050565b803560ff8116811461344557600080fd5b919050565b60008060008060008060c0878903121561346357600080fd5b863561346e81613211565b9550602087013594506040870135935061348a60608801613434565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a0312156134bf57600080fd5b87356134ca81613211565b965060208801356134da81613211565b955060408801359450606088013593506134f660808901613434565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561352557600080fd5b823561353081613211565b9150602083013561354081613211565b809150509250929050565b6000806040838503121561355e57600080fd5b823561356981613211565b9150602083013563ffffffff8116811461354057600080fd5b600181811c9082168061359657607f821691505b6020821081036135cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600073ffffffffffffffffffffffffffffffffffffffff808916835280881660208401525085604083015284606083015260a060808301528260a0830152828460c0840137600060c0848401015260c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501168301019050979650505050505050565b60006020828403121561366d57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561073657610736613674565b8181038181111561073657610736613674565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600181815b8085111561375157817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561373757613737613674565b8085161561374457918102915b93841c93908002906136fd565b509250929050565b60008261376857506001610736565b8161377557506000610736565b816001811461378b5760028114613795576137b1565b6001915050610736565b60ff8411156137a6576137a6613674565b50506001821b610736565b5060208310610133831016604e8410600b84101617156137d4575081810a610736565b6137de83836136f8565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561381057613810613674565b029392505050565b600061146060ff841683613759565b808202811582820484141761073657610736613674565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b601f8211156114f357600081815260208120601f850160051c810160208610156138c35750805b601f850160051c820191505b81811015611220578281556001016138cf565b815167ffffffffffffffff8111156138fc576138fc6136c9565b6139108161390a8454613582565b8461389c565b602080601f831160018114613963576000841561392d5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611220565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156139b057888601518255948401946001909101908401613991565b50858210156139ec57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082613a61577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff828116828216039080821115613a9957613a99613674565b5092915050565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff818116838216019080821115613a9957613a9961367456fea26469706673582212204bd4b855c8044cd4f63d732c44ac1d7ef95d4f026de0182d4d1cb3fe417f023b64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1C PUSH3 0x22 JUMP JUMPDEST PUSH3 0xD6 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x73 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH3 0xD3 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x3B09 DUP1 PUSH3 0xE6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xD9D98CE4 EQ PUSH2 0x58A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x551 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84B0196E GT PUSH2 0x114 JUMPI DUP1 PUSH4 0x8E539E8C GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84B0196E EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x613255AB GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x613255AB EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x5CFFE9DE EQ PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x22F JUMPI DUP1 PUSH4 0x3A46B1A8 GT PUSH2 0x214 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x269 PUSH2 0x667 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x31FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x3233 JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x276 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x276 JUMP JUMPDEST PUSH2 0x292 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x325F JUMP JUMPDEST PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x276 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x760 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x3233 JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST PUSH2 0x318 PUSH2 0x852 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x318 PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0x3233 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH2 0x318 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x32A0 JUMP JUMPDEST PUSH2 0x87A JUMP JUMPDEST PUSH2 0x269 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x3A0 PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x276 JUMP JUMPDEST PUSH2 0x318 PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND PUSH2 0x292 JUMP JUMPDEST PUSH2 0x292 PUSH2 0x410 CALLDATASIZE PUSH1 0x4 PUSH2 0x32D6 JUMP JUMPDEST PUSH2 0x923 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x423 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0x43B PUSH2 0x436 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x276 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x45E CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x318 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x318 PUSH2 0x479 CALLDATASIZE PUSH1 0x4 PUSH2 0x3233 JUMP JUMPDEST PUSH2 0xBEF JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x48C CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x318 PUSH2 0xC0F JUMP JUMPDEST PUSH2 0x4A1 PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3375 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x4FF CALLDATASIZE PUSH1 0x4 PUSH2 0x32A0 JUMP JUMPDEST PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x50C PUSH2 0xDD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x276 JUMP JUMPDEST PUSH2 0x269 PUSH2 0xDDF JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x539 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0xE30 JUMP JUMPDEST PUSH2 0x292 PUSH2 0x54C CALLDATASIZE PUSH1 0x4 PUSH2 0x3233 JUMP JUMPDEST PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x318 PUSH2 0x55F CALLDATASIZE PUSH1 0x4 PUSH2 0x344A JUMP JUMPDEST PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x318 PUSH2 0x572 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0xFB3 JUMP JUMPDEST PUSH2 0x318 PUSH2 0x585 CALLDATASIZE PUSH1 0x4 PUSH2 0x34A4 JUMP JUMPDEST PUSH2 0x1228 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x598 CALLDATASIZE PUSH1 0x4 PUSH2 0x3233 JUMP JUMPDEST PUSH2 0x13F4 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x5AB CALLDATASIZE PUSH1 0x4 PUSH2 0x3512 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x615 PUSH2 0x610 CALLDATASIZE PUSH1 0x4 PUSH2 0x354B JUMP JUMPDEST PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x276 JUMP JUMPDEST PUSH2 0x318 PUSH2 0x662 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x69E SWAP1 PUSH2 0x3582 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6CA SWAP1 PUSH2 0x3582 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x717 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x717 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6FA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x730 DUP2 DUP6 DUP6 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x74A DUP6 DUP3 DUP6 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x755 DUP6 DUP6 DUP6 PUSH2 0x15E6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76A PUSH2 0x1691 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 DUP2 PUSH2 0x79B PUSH2 0xDD5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP5 LT PUSH2 0x7F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH6 0xFFFFFFFFFFFF DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x82D PUSH2 0x800 DUP6 PUSH2 0x169B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 PUSH2 0x16EB JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x85A PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x862 PUSH2 0x1845 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x86C PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x876 DUP3 DUP3 PUSH2 0x18E2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x884 CALLER DUP3 PUSH2 0x193E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x891 PUSH2 0x199A JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x8A1 PUSH2 0xDD5 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6FF0714000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST CALLER PUSH2 0x876 DUP2 DUP4 PUSH2 0x19A5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x92F DUP7 PUSH2 0xB0E JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x96E JUMPI PUSH1 0x40 MLOAD PUSH32 0xFD9A760900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97A DUP8 DUP8 PUSH2 0x13F4 JUMP JUMPDEST SWAP1 POP PUSH2 0x986 DUP9 DUP8 PUSH2 0x18E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23E30C8B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND SWAP1 PUSH4 0x23E30C8B SWAP1 PUSH2 0xA04 SWAP1 CALLER SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP9 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x35D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA47 SWAP2 SWAP1 PUSH2 0x365B JUMP JUMPDEST EQ PUSH2 0xA96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x678C5B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAC DUP10 ADDRESS PUSH2 0xAA7 DUP6 DUP12 PUSH2 0x36A3 JUMP JUMPDEST PUSH2 0x14F8 JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0xACD JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0xAEA JUMPI PUSH2 0xAE5 DUP10 PUSH2 0xAE0 DUP5 DUP11 PUSH2 0x36A3 JUMP JUMPDEST PUSH2 0x193E JUMP JUMPDEST PUSH2 0xAFF JUMP JUMPDEST PUSH2 0xAF4 DUP10 DUP9 PUSH2 0x193E JUMP JUMPDEST PUSH2 0xAFF DUP10 DUP3 DUP5 PUSH2 0x15E6 JUMP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ADDRESS EQ PUSH2 0xB34 JUMPI PUSH1 0x0 PUSH2 0x736 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH2 0x736 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x36B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP3 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBE5 PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x862 PUSH1 0x0 PUSH2 0x1B1B JUMP JUMPDEST PUSH2 0xBFA DUP3 CALLER DUP4 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x876 DUP3 DUP3 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP3 PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0xC17 PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x862 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP3 DUP1 DUP1 DUP4 DUP2 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 DUP1 SLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO PUSH2 0xC5E JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD ISZERO JUMPDEST PUSH2 0xCC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4549503731323A20556E696E697469616C697A65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0xCCC PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0xCD4 PUSH2 0x1C86 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP13 SWAP4 SWAP12 POP SWAP2 SWAP10 POP CHAINID SWAP9 POP ADDRESS SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 DUP2 PUSH2 0xD47 PUSH2 0xDD5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP5 LT PUSH2 0xD9B JUMPI PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH6 0xFFFFFFFFFFFF DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0xDB1 PUSH2 0xDA7 DUP6 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SWAP1 PUSH2 0x16EB JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76A PUSH2 0x199A JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP2 PUSH2 0x69E SWAP1 PUSH2 0x3582 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 SWAP1 PUSH2 0xE9F SWAP1 PUSH2 0x1CB0 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x730 DUP2 DUP6 DUP6 PUSH2 0x15E6 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x4683AF0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xF94 SWAP1 PUSH2 0xF8C SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1CF6 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP PUSH2 0xFA0 DUP2 DUP8 PUSH2 0x1D6C JUMP JUMPDEST PUSH2 0xFAA DUP2 DUP9 PUSH2 0x19A5 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xFFE JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x101B JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1029 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1060 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x10C1 JUMPI DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 OR DUP6 SSTORE JUMPDEST PUSH2 0x1135 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5741590000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5741590000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1E11 JUMP JUMPDEST PUSH2 0x113D PUSH2 0x1E23 JUMP JUMPDEST PUSH2 0x1145 PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x114E DUP7 PUSH2 0x1E3B JUMP JUMPDEST PUSH2 0x118C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5741590000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1E4C JUMP JUMPDEST PUSH2 0x1194 PUSH2 0x1E23 JUMP JUMPDEST PUSH2 0x119C PUSH2 0x1E23 JUMP JUMPDEST PUSH2 0x11BF CALLER PUSH2 0x11AC PUSH1 0x12 PUSH1 0xA PUSH2 0x3818 JUMP JUMPDEST PUSH2 0x11BA SWAP1 PUSH4 0x202FBF00 PUSH2 0x3827 JUMP JUMPDEST PUSH2 0x18E2 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1220 JUMPI DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1265 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x12DE DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1346 DUP3 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1356 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x13E8 DUP11 DUP11 DUP11 PUSH2 0x14E6 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ADDRESS EQ PUSH2 0x145D JUMPI PUSH1 0x40 MLOAD PUSH32 0xB5A7DB9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1460 DUP4 DUP4 PUSH2 0x1E93 JUMP JUMPDEST PUSH2 0x148D PUSH2 0x17B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x14DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x884 DUP2 PUSH2 0x1B1B JUMP JUMPDEST PUSH2 0x14F3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1F1D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x15E0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x15D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x15E0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1F1D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x1636 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1686 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x14F3 DUP4 DUP4 DUP4 PUSH2 0x208A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76A PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x30 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7EB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x174A JUMPI PUSH1 0x0 PUSH2 0x1706 DUP5 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x1710 SWAP1 DUP6 PUSH2 0x36B6 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP2 ADD SLOAD PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP8 AND LT ISZERO PUSH2 0x173A JUMPI DUP1 SWAP2 POP PUSH2 0x1748 JUMP JUMPDEST PUSH2 0x1745 DUP2 PUSH1 0x1 PUSH2 0x36A3 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x1758 DUP8 DUP8 DUP6 DUP6 PUSH2 0x21F1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x17A9 JUMPI PUSH2 0x177D DUP8 PUSH2 0x176F PUSH1 0x1 DUP5 PUSH2 0x36B6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SWAP1 JUMP JUMPDEST SLOAD PUSH7 0x1000000000000 SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x17F6 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x184D PUSH2 0x2253 JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1932 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x876 PUSH1 0x0 DUP4 DUP4 PUSH2 0x208A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x198E JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x876 DUP3 PUSH1 0x0 DUP4 PUSH2 0x208A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76A NUMBER PUSH2 0x169B JUMP JUMPDEST PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 PUSH1 0x0 PUSH2 0x1A16 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP7 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP10 DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP5 SWAP6 POP SWAP4 SWAP3 DUP6 AND SWAP3 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x15E0 DUP2 DUP5 PUSH2 0x1AA6 DUP8 PUSH2 0x22AE JUMP JUMPDEST PUSH2 0x22B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 SWAP1 PUSH2 0x1460 SWAP1 PUSH2 0x24EC JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP3 PUSH2 0x2536 JUMP JUMPDEST PUSH2 0x1BC4 PUSH2 0x255F JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x18B7 JUMP JUMPDEST PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D102 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SWAP2 PUSH2 0x69E SWAP1 PUSH2 0x3582 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 PUSH2 0x68D JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 DUP1 ISZERO PUSH2 0x145D JUMPI PUSH2 0x1CCA DUP4 PUSH2 0x176F PUSH1 0x1 DUP5 PUSH2 0x36B6 JUMP JUMPDEST SLOAD PUSH7 0x1000000000000 SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 PUSH2 0x1D03 PUSH2 0x1691 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1D50 DUP9 DUP9 DUP9 DUP9 PUSH2 0x25BB JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1D60 DUP3 DUP3 PUSH2 0x26B5 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP2 DUP2 EQ PUSH2 0x14F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x752D88C000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x1E19 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x876 DUP3 DUP3 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x862 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x1E33 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x862 PUSH2 0x2883 JUMP JUMPDEST PUSH2 0x1E43 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x884 DUP2 PUSH2 0x28D4 JUMP JUMPDEST PUSH2 0x1E54 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x884 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x28DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP3 MSTORE PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D01 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 SWAP1 PUSH2 0x1F15 SWAP1 DUP5 PUSH2 0x294F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x1F8E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x1FDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x2083 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x207A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14F3 DUP4 DUP4 DUP4 PUSH2 0x29D5 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x20C0 PUSH2 0x2A94 JUMP JUMPDEST PUSH2 0x20C8 PUSH2 0x2B10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0x211B JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2128 DUP5 PUSH2 0x2B66 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2141 JUMPI PUSH2 0x2141 PUSH2 0x383E JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2159 JUMPI PUSH2 0x2159 PUSH2 0x383E JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2171 JUMPI PUSH2 0x2171 PUSH2 0x383E JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2189 JUMPI PUSH2 0x2189 PUSH2 0x383E JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x21A1 JUMPI PUSH2 0x21A1 PUSH2 0x383E JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x21B9 JUMPI PUSH2 0x21B9 PUSH2 0x383E JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x21D1 JUMPI PUSH2 0x21D1 PUSH2 0x383E JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1460 DUP2 DUP3 DUP6 DUP2 PUSH2 0x21EB JUMPI PUSH2 0x21EB PUSH2 0x383E JUMP JUMPDEST DIV PUSH2 0x2BFA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x224B JUMPI PUSH1 0x0 PUSH2 0x2208 DUP5 DUP5 PUSH2 0x2C10 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH6 0xFFFFFFFFFFFF DUP7 AND SWAP1 DUP3 ADD SLOAD PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x2237 JUMPI DUP1 SWAP3 POP PUSH2 0x2245 JUMP JUMPDEST PUSH2 0x2242 DUP2 PUSH1 0x1 PUSH2 0x36A3 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x21F4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP3 PUSH2 0xB8B JUMP JUMPDEST PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP1 DUP5 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x2303 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST ISZERO PUSH2 0x15E0 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO PUSH2 0x23FA JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x2362 SWAP1 PUSH2 0x2C2B PUSH2 0x235D DUP8 PUSH2 0x2C37 JUMP JUMPDEST PUSH2 0x2C97 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x23EF SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO PUSH2 0x15E0 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x244F SWAP1 PUSH2 0x2CD0 PUSH2 0x235D DUP8 PUSH2 0x2C37 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x24DC SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x16E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH2 0xBB0 JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x25F6 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x26AB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x264A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x26A1 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x26AB JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x26C9 JUMPI PUSH2 0x26C9 PUSH2 0x386D JUMP JUMPDEST SUB PUSH2 0x26D2 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x26E6 JUMPI PUSH2 0x26E6 PUSH2 0x386D JUMP JUMPDEST SUB PUSH2 0x271D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2731 JUMPI PUSH2 0x2731 PUSH2 0x386D JUMP JUMPDEST SUB PUSH2 0x276B JUMPI PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x277F JUMPI PUSH2 0x277F PUSH2 0x386D JUMP JUMPDEST SUB PUSH2 0x876 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2828 PUSH2 0x27B9 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x2874 DUP5 DUP3 PUSH2 0x38E2 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x15E0 DUP4 DUP3 PUSH2 0x38E2 JUMP JUMPDEST PUSH2 0x288B PUSH2 0x27B9 JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x148D PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x28E4 PUSH2 0x27B9 JUMP JUMPDEST PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D102 PUSH2 0x2930 DUP5 DUP3 PUSH2 0x38E2 JUMP JUMPDEST POP PUSH1 0x3 DUP2 ADD PUSH2 0x293F DUP4 DUP3 PUSH2 0x38E2 JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x0 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x297E JUMPI PUSH2 0x297E PUSH2 0x39FC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP3 MSTORE PUSH7 0x1000000000000 SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x29E0 DUP4 DUP4 DUP4 PUSH2 0x2CDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x2A89 JUMPI PUSH1 0x0 PUSH2 0x2A25 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2A86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1CB15D2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7EB JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x14F3 DUP4 DUP4 DUP4 PUSH2 0x2CEF JUMP JUMPDEST PUSH1 0x0 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 DUP2 PUSH2 0x2AC0 PUSH2 0x1C35 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2AD8 JUMPI DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD DUP1 ISZERO PUSH2 0x2AE7 JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 DUP2 PUSH2 0x2B3C PUSH2 0x1C86 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2B54 JUMPI DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP1 ISZERO PUSH2 0x2AE7 JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 SWAP1 SHR ISZERO PUSH2 0x2B7B JUMPI PUSH1 0x80 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x40 DUP4 SWAP1 SHR ISZERO PUSH2 0x2B8D JUMPI PUSH1 0x40 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x20 DUP4 SWAP1 SHR ISZERO PUSH2 0x2B9F JUMPI PUSH1 0x20 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x10 DUP4 SWAP1 SHR ISZERO PUSH2 0x2BB1 JUMPI PUSH1 0x10 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x8 DUP4 SWAP1 SHR ISZERO PUSH2 0x2BC3 JUMPI PUSH1 0x8 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x4 DUP4 SWAP1 SHR ISZERO PUSH2 0x2BD5 JUMPI PUSH1 0x4 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x2 DUP4 SWAP1 SHR ISZERO PUSH2 0x2BE7 JUMPI PUSH1 0x2 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x1 DUP4 SWAP1 SHR ISZERO PUSH2 0x736 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2C09 JUMPI DUP2 PUSH2 0x1460 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C1F PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x3A2B JUMP JUMPDEST PUSH2 0x1460 SWAP1 DUP5 DUP5 AND PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1460 DUP3 DUP5 PUSH2 0x3A66 JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0xD0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CC3 PUSH2 0x2CA5 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x2CBB PUSH2 0x2CB1 DUP9 PUSH2 0x1CB0 JUMP JUMPDEST DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 SWAP2 SWAP1 PUSH2 0x2DD0 JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1460 DUP3 DUP5 PUSH2 0x3AA0 JUMP JUMPDEST PUSH2 0x2CE4 PUSH2 0x255F JUMP JUMPDEST PUSH2 0x14F3 DUP4 DUP4 DUP4 PUSH2 0x2DDE JUMP JUMPDEST PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x2D41 JUMPI PUSH2 0x2D3E DUP2 PUSH1 0x2 ADD PUSH2 0x2CD0 PUSH2 0x235D DUP6 PUSH2 0x2C37 JUMP JUMPDEST POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x2D72 JUMPI PUSH2 0x2D6F DUP2 PUSH1 0x2 ADD PUSH2 0x2C2B PUSH2 0x235D DUP6 PUSH2 0x2C37 JUMP JUMPDEST POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP7 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x15E0 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP5 PUSH2 0x22B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CC3 DUP6 DUP6 DUP6 PUSH2 0x2FAF JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x2E39 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2E2E SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2EEB SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2EBF JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x2F16 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2F42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2FA1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP1 ISZERO PUSH2 0x3129 JUMPI PUSH1 0x0 PUSH2 0x2FCD DUP8 PUSH2 0x176F PUSH1 0x1 DUP6 PUSH2 0x36B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 SLOAD PUSH6 0xFFFFFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH7 0x1000000000000 SWAP1 SWAP3 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP5 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP8 AND LT ISZERO PUSH2 0x3050 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2520601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH6 0xFFFFFFFFFFFF DUP1 DUP9 AND SWAP2 AND SUB PUSH2 0x30B2 JUMPI DUP5 PUSH2 0x3073 DUP9 PUSH2 0x176F PUSH1 0x1 DUP7 PUSH2 0x36B6 JUMP JUMPDEST DUP1 SLOAD PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH7 0x1000000000000 MUL PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x3119 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP9 AND DUP3 MSTORE PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP12 SLOAD PUSH1 0x1 DUP2 ADD DUP14 SSTORE PUSH1 0x0 DUP14 DUP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP5 MLOAD SWAP2 MLOAD SWAP1 SWAP3 AND PUSH7 0x1000000000000 MUL SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 ADD SSTORE JUMPDEST PUSH1 0x20 ADD MLOAD SWAP3 POP DUP4 SWAP2 POP PUSH2 0x2CC8 SWAP1 POP JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP6 AND DUP3 MSTORE PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP9 SLOAD PUSH1 0x1 DUP2 ADD DUP11 SSTORE PUSH1 0x0 DUP11 DUP2 MSTORE SWAP2 DUP3 KECCAK256 SWAP6 MLOAD SWAP3 MLOAD SWAP1 SWAP4 AND PUSH7 0x1000000000000 MUL SWAP2 SWAP1 SWAP4 AND OR SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP DUP2 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x31C0 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x31A4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1460 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x319A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3251 DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x327F DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x328F DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1460 DUP2 PUSH2 0x3211 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x32EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x32F9 DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x3309 DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x332D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x3362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0x33B1 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x319A JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x33C3 DUP2 DUP11 PUSH2 0x319A JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3422 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3406 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x346E DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x348A PUSH1 0x60 DUP9 ADD PUSH2 0x3434 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x34BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x34CA DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x34DA DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x34F6 PUSH1 0x80 DUP10 ADD PUSH2 0x3434 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3530 DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3540 DUP2 PUSH2 0x3211 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x355E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3569 DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3596 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x35CF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP10 AND DUP4 MSTORE DUP1 DUP9 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP6 PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE DUP3 PUSH1 0xA0 DUP4 ADD MSTORE DUP3 DUP5 PUSH1 0xC0 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0xC0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xC0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x366D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x736 JUMPI PUSH2 0x736 PUSH2 0x3674 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x736 JUMPI PUSH2 0x736 PUSH2 0x3674 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x3751 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x3737 JUMPI PUSH2 0x3737 PUSH2 0x3674 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x3744 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x36FD JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3768 JUMPI POP PUSH1 0x1 PUSH2 0x736 JUMP JUMPDEST DUP2 PUSH2 0x3775 JUMPI POP PUSH1 0x0 PUSH2 0x736 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x378B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3795 JUMPI PUSH2 0x37B1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x736 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x37A6 JUMPI PUSH2 0x37A6 PUSH2 0x3674 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x736 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x37D4 JUMPI POP DUP2 DUP2 EXP PUSH2 0x736 JUMP JUMPDEST PUSH2 0x37DE DUP4 DUP4 PUSH2 0x36F8 JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x3810 JUMPI PUSH2 0x3810 PUSH2 0x3674 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1460 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x3759 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x736 JUMPI PUSH2 0x736 PUSH2 0x3674 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x14F3 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x38C3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1220 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x38CF JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38FC JUMPI PUSH2 0x38FC PUSH2 0x36C9 JUMP JUMPDEST PUSH2 0x3910 DUP2 PUSH2 0x390A DUP5 SLOAD PUSH2 0x3582 JUMP JUMPDEST DUP5 PUSH2 0x389C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3963 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x392D JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39B0 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3991 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x39EC JUMPI DUP8 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3A61 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x3A99 JUMPI PUSH2 0x3A99 PUSH2 0x3674 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x3A99 JUMPI PUSH2 0x3A99 PUSH2 0x3674 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xD4 0xB8 SSTORE 0xC8 DIV 0x4C 0xD4 0xF6 RETURNDATASIZE PUSH20 0x2C44AC1D7EF95D4F026DE0182D4D1CB3FE417F02 EXTCODESIZE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"776:1366:31:-:0;;;1029:53;;;;;;;;;-1:-1:-1;1053:22:31;:20;:22::i;:::-;776:1366;;7711:422:2;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:2;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:2;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:2;-1:-1:-1;;;;;8035:33:2;;;;;8087:29;;158:50:32;;;8087:29:2;;146:2:32;131:18;8087:29:2;;;;;;;7981:146;7760:373;7711:422::o;14:200:32:-;776:1366:31;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CLOCK_MODE_312":{"entryPoint":2183,"id":312,"parameterSlots":0,"returnSlots":1},"@DOMAIN_SEPARATOR_2257":{"entryPoint":1888,"id":2257,"parameterSlots":0,"returnSlots":1},"@_EIP712NameHash_3030":{"entryPoint":10900,"id":3030,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_2962":{"entryPoint":7221,"id":2962,"parameterSlots":0,"returnSlots":1},"@_EIP712VersionHash_3082":{"entryPoint":11024,"id":3082,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_2978":{"entryPoint":7302,"id":2978,"parameterSlots":0,"returnSlots":1},"@__EIP712_init_unchained_2836":{"entryPoint":10460,"id":2836,"parameterSlots":2,"returnSlots":0},"@__ERC20Burnable_init_1735":{"entryPoint":7715,"id":1735,"parameterSlots":0,"returnSlots":0},"@__ERC20FlashMint_init_1819":{"entryPoint":null,"id":1819,"parameterSlots":0,"returnSlots":0},"@__ERC20Pausable_init_2060":{"entryPoint":7723,"id":2060,"parameterSlots":0,"returnSlots":0},"@__ERC20Permit_init_2145":{"entryPoint":7756,"id":2145,"parameterSlots":1,"returnSlots":0},"@__ERC20Votes_init_2288":{"entryPoint":null,"id":2288,"parameterSlots":0,"returnSlots":0},"@__ERC20_init_1165":{"entryPoint":7697,"id":1165,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_1193":{"entryPoint":10272,"id":1193,"parameterSlots":2,"returnSlots":0},"@__Ownable_init_54":{"entryPoint":7739,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":10452,"id":81,"parameterSlots":1,"returnSlots":0},"@__Pausable_init_unchained_2633":{"entryPoint":10371,"id":2633,"parameterSlots":0,"returnSlots":0},"@_add_820":{"entryPoint":11472,"id":820,"parameterSlots":2,"returnSlots":1},"@_approve_1597":{"entryPoint":5350,"id":1597,"parameterSlots":3,"returnSlots":0},"@_approve_1665":{"entryPoint":7965,"id":1665,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_2869":{"entryPoint":8341,"id":2869,"parameterSlots":0,"returnSlots":1},"@_burn_1579":{"entryPoint":6462,"id":1579,"parameterSlots":2,"returnSlots":0},"@_checkInitializing_1019":{"entryPoint":10169,"id":1019,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":6071,"id":122,"parameterSlots":0,"returnSlots":0},"@_checkpoints_771":{"entryPoint":7827,"id":771,"parameterSlots":2,"returnSlots":1},"@_delegate_571":{"entryPoint":6565,"id":571,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_2846":{"entryPoint":5777,"id":2846,"parameterSlots":0,"returnSlots":1},"@_flashFeeReceiver_1908":{"entryPoint":null,"id":1908,"parameterSlots":0,"returnSlots":1},"@_flashFee_1896":{"entryPoint":null,"id":1896,"parameterSlots":2,"returnSlots":1},"@_getEIP712Storage_2780":{"entryPoint":null,"id":2780,"parameterSlots":0,"returnSlots":1},"@_getERC20Storage_1149":{"entryPoint":null,"id":1149,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_1096":{"entryPoint":null,"id":1096,"parameterSlots":0,"returnSlots":1},"@_getNoncesStorage_2483":{"entryPoint":null,"id":2483,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":null,"id":25,"parameterSlots":0,"returnSlots":1},"@_getPausableStorage_2589":{"entryPoint":null,"id":2589,"parameterSlots":0,"returnSlots":1},"@_getVotesStorage_259":{"entryPoint":null,"id":259,"parameterSlots":0,"returnSlots":1},"@_getVotingUnits_2375":{"entryPoint":8878,"id":2375,"parameterSlots":1,"returnSlots":1},"@_hashTypedDataV4_2885":{"entryPoint":7414,"id":2885,"parameterSlots":1,"returnSlots":1},"@_insert_8075":{"entryPoint":12207,"id":8075,"parameterSlots":3,"returnSlots":2},"@_isInitializing_1087":{"entryPoint":null,"id":1087,"parameterSlots":0,"returnSlots":1},"@_maxSupply_2307":{"entryPoint":null,"id":2307,"parameterSlots":0,"returnSlots":1},"@_mint_1546":{"entryPoint":6370,"id":1546,"parameterSlots":2,"returnSlots":0},"@_moveDelegateVotes_720":{"entryPoint":8889,"id":720,"parameterSlots":3,"returnSlots":0},"@_msgSender_2434":{"entryPoint":null,"id":2434,"parameterSlots":0,"returnSlots":1},"@_numCheckpoints_745":{"entryPoint":6827,"id":745,"parameterSlots":1,"returnSlots":1},"@_pause_2714":{"entryPoint":7100,"id":2714,"parameterSlots":0,"returnSlots":0},"@_push_806":{"entryPoint":11415,"id":806,"parameterSlots":3,"returnSlots":2},"@_requireNotPaused_2677":{"entryPoint":9567,"id":2677,"parameterSlots":0,"returnSlots":0},"@_requirePaused_2690":{"entryPoint":8787,"id":2690,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_1713":{"entryPoint":5368,"id":1713,"parameterSlots":3,"returnSlots":0},"@_subtract_834":{"entryPoint":11307,"id":834,"parameterSlots":2,"returnSlots":1},"@_throwError_4155":{"entryPoint":9909,"id":4155,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":6939,"id":193,"parameterSlots":1,"returnSlots":0},"@_transferVotingUnits_634":{"entryPoint":11503,"id":634,"parameterSlots":3,"returnSlots":0},"@_transfer_1421":{"entryPoint":5606,"id":1421,"parameterSlots":3,"returnSlots":0},"@_unpause_2738":{"entryPoint":6213,"id":2738,"parameterSlots":0,"returnSlots":0},"@_unsafeAccess_8194":{"entryPoint":null,"id":8194,"parameterSlots":2,"returnSlots":1},"@_update_1513":{"entryPoint":11742,"id":1513,"parameterSlots":3,"returnSlots":0},"@_update_2088":{"entryPoint":11484,"id":2088,"parameterSlots":3,"returnSlots":0},"@_update_2361":{"entryPoint":10709,"id":2361,"parameterSlots":3,"returnSlots":0},"@_update_9124":{"entryPoint":8330,"id":9124,"parameterSlots":3,"returnSlots":0},"@_upperBinaryLookup_8127":{"entryPoint":8689,"id":8127,"parameterSlots":4,"returnSlots":1},"@_useCheckedNonce_2562":{"entryPoint":7532,"id":2562,"parameterSlots":2,"returnSlots":0},"@_useNonce_2537":{"entryPoint":null,"id":2537,"parameterSlots":1,"returnSlots":1},"@allowance_1318":{"entryPoint":null,"id":1318,"parameterSlots":2,"returnSlots":1},"@approve_1342":{"entryPoint":1826,"id":1342,"parameterSlots":2,"returnSlots":1},"@at_7984":{"entryPoint":10575,"id":7984,"parameterSlots":2,"returnSlots":1},"@average_4458":{"entryPoint":11280,"id":4458,"parameterSlots":2,"returnSlots":1},"@balanceOf_1270":{"entryPoint":2955,"id":1270,"parameterSlots":1,"returnSlots":1},"@blockNumber_8751":{"entryPoint":6554,"id":8751,"parameterSlots":0,"returnSlots":1},"@burnFrom_1775":{"entryPoint":3055,"id":1775,"parameterSlots":2,"returnSlots":0},"@burn_1754":{"entryPoint":2170,"id":1754,"parameterSlots":1,"returnSlots":0},"@checkpoints_2405":{"entryPoint":5223,"id":2405,"parameterSlots":2,"returnSlots":1},"@clock_292":{"entryPoint":3541,"id":292,"parameterSlots":0,"returnSlots":1},"@decimals_1234":{"entryPoint":null,"id":1234,"parameterSlots":0,"returnSlots":1},"@delegateBySig_528":{"entryPoint":3792,"id":528,"parameterSlots":6,"returnSlots":0},"@delegate_471":{"entryPoint":2328,"id":471,"parameterSlots":1,"returnSlots":0},"@delegates_454":{"entryPoint":null,"id":454,"parameterSlots":1,"returnSlots":1},"@eip712Domain_2946":{"entryPoint":3103,"id":2946,"parameterSlots":0,"returnSlots":7},"@flashFee_1879":{"entryPoint":5108,"id":1879,"parameterSlots":2,"returnSlots":1},"@flashLoan_2035":{"entryPoint":2339,"id":2035,"parameterSlots":5,"returnSlots":1},"@getPastTotalSupply_416":{"entryPoint":3355,"id":416,"parameterSlots":1,"returnSlots":1},"@getPastVotes_377":{"entryPoint":1903,"id":377,"parameterSlots":2,"returnSlots":1},"@getVotes_334":{"entryPoint":3632,"id":334,"parameterSlots":1,"returnSlots":1},"@initialize_9069":{"entryPoint":4019,"id":9069,"parameterSlots":1,"returnSlots":0},"@latest_7903":{"entryPoint":7344,"id":7903,"parameterSlots":1,"returnSlots":1},"@length_7966":{"entryPoint":null,"id":7966,"parameterSlots":1,"returnSlots":1},"@log2_4940":{"entryPoint":11110,"id":4940,"parameterSlots":1,"returnSlots":1},"@maxFlashLoan_1851":{"entryPoint":2830,"id":1851,"parameterSlots":1,"returnSlots":1},"@min_4435":{"entryPoint":11258,"id":4435,"parameterSlots":2,"returnSlots":1},"@mint_9102":{"entryPoint":2148,"id":9102,"parameterSlots":2,"returnSlots":0},"@name_1209":{"entryPoint":1639,"id":1209,"parameterSlots":0,"returnSlots":1},"@nonces_2247":{"entryPoint":7089,"id":2247,"parameterSlots":1,"returnSlots":1},"@nonces_2515":{"entryPoint":9526,"id":2515,"parameterSlots":1,"returnSlots":1},"@nonces_9140":{"entryPoint":3076,"id":9140,"parameterSlots":1,"returnSlots":1},"@numCheckpoints_2388":{"entryPoint":2944,"id":2388,"parameterSlots":1,"returnSlots":1},"@owner_105":{"entryPoint":null,"id":105,"parameterSlots":0,"returnSlots":1},"@pause_9078":{"entryPoint":3087,"id":9078,"parameterSlots":0,"returnSlots":0},"@paused_2665":{"entryPoint":null,"id":2665,"parameterSlots":0,"returnSlots":1},"@permit_2230":{"entryPoint":4648,"id":2230,"parameterSlots":7,"returnSlots":0},"@push_7706":{"entryPoint":11728,"id":7706,"parameterSlots":3,"returnSlots":2},"@recover_4106":{"entryPoint":7486,"id":4106,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_136":{"entryPoint":3037,"id":136,"parameterSlots":0,"returnSlots":0},"@sqrt_4773":{"entryPoint":8457,"id":4773,"parameterSlots":1,"returnSlots":1},"@symbol_1225":{"entryPoint":3551,"id":1225,"parameterSlots":0,"returnSlots":1},"@toTypedDataHash_4229":{"entryPoint":null,"id":4229,"parameterSlots":2,"returnSlots":1},"@toUint208_5479":{"entryPoint":11319,"id":5479,"parameterSlots":1,"returnSlots":1},"@toUint32_6095":{"entryPoint":9452,"id":6095,"parameterSlots":1,"returnSlots":1},"@toUint48_6039":{"entryPoint":5787,"id":6039,"parameterSlots":1,"returnSlots":1},"@totalSupply_1250":{"entryPoint":null,"id":1250,"parameterSlots":0,"returnSlots":1},"@transferFrom_1374":{"entryPoint":1852,"id":1374,"parameterSlots":3,"returnSlots":1},"@transferOwnership_164":{"entryPoint":5253,"id":164,"parameterSlots":1,"returnSlots":0},"@transfer_1294":{"entryPoint":3778,"id":1294,"parameterSlots":2,"returnSlots":1},"@tryRecover_4070":{"entryPoint":9659,"id":4070,"parameterSlots":4,"returnSlots":3},"@unpause_9087":{"entryPoint":2130,"id":9087,"parameterSlots":0,"returnSlots":0},"@upperLookupRecent_7873":{"entryPoint":5867,"id":7873,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":12985,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":13586,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":12895,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":13476,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":12851,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":13386,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":13643,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":13915,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC3156FlashBorrower_$3186t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":13014,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":12960,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint8":{"entryPoint":13364,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string":{"entryPoint":12698,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":13781,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13173,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12798,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Checkpoint208_$7683_memory_ptr__to_t_struct$_Checkpoint208_$7683_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint208":{"entryPoint":15008,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":13987,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":14891,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":14072,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":14360,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":14169,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":14375,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint208":{"entryPoint":14950,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":14006,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":14492,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":14562,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":13698,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":13940,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":14398,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":14445,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":14844,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":14025,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":12817,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:20834:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"64:432:32","statements":[{"nodeType":"YulVariableDeclaration","src":"74:26:32","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"94:5:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"88:5:32"},"nodeType":"YulFunctionCall","src":"88:12:32"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"78:6:32","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"116:3:32"},{"name":"length","nodeType":"YulIdentifier","src":"121:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"109:6:32"},"nodeType":"YulFunctionCall","src":"109:19:32"},"nodeType":"YulExpressionStatement","src":"109:19:32"},{"nodeType":"YulVariableDeclaration","src":"137:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"146:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"141:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"208:110:32","statements":[{"nodeType":"YulVariableDeclaration","src":"222:14:32","value":{"kind":"number","nodeType":"YulLiteral","src":"232:4:32","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"226:2:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"264:3:32"},{"name":"i","nodeType":"YulIdentifier","src":"269:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"260:3:32"},"nodeType":"YulFunctionCall","src":"260:11:32"},{"name":"_1","nodeType":"YulIdentifier","src":"273:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"256:3:32"},"nodeType":"YulFunctionCall","src":"256:20:32"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"292:5:32"},{"name":"i","nodeType":"YulIdentifier","src":"299:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"288:3:32"},"nodeType":"YulFunctionCall","src":"288:13:32"},{"name":"_1","nodeType":"YulIdentifier","src":"303:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"284:3:32"},"nodeType":"YulFunctionCall","src":"284:22:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"278:5:32"},"nodeType":"YulFunctionCall","src":"278:29:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"249:6:32"},"nodeType":"YulFunctionCall","src":"249:59:32"},"nodeType":"YulExpressionStatement","src":"249:59:32"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"167:1:32"},{"name":"length","nodeType":"YulIdentifier","src":"170:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"164:2:32"},"nodeType":"YulFunctionCall","src":"164:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"178:21:32","statements":[{"nodeType":"YulAssignment","src":"180:17:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"189:1:32"},{"kind":"number","nodeType":"YulLiteral","src":"192:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"185:3:32"},"nodeType":"YulFunctionCall","src":"185:12:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"180:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"160:3:32","statements":[]},"src":"156:162:32"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"342:3:32"},{"name":"length","nodeType":"YulIdentifier","src":"347:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"338:3:32"},"nodeType":"YulFunctionCall","src":"338:16:32"},{"kind":"number","nodeType":"YulLiteral","src":"356:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"334:3:32"},"nodeType":"YulFunctionCall","src":"334:27:32"},{"kind":"number","nodeType":"YulLiteral","src":"363:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"327:6:32"},"nodeType":"YulFunctionCall","src":"327:38:32"},"nodeType":"YulExpressionStatement","src":"327:38:32"},{"nodeType":"YulAssignment","src":"374:116:32","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"389:3:32"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"402:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"410:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"398:3:32"},"nodeType":"YulFunctionCall","src":"398:15:32"},{"kind":"number","nodeType":"YulLiteral","src":"415:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"394:3:32"},"nodeType":"YulFunctionCall","src":"394:88:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"385:3:32"},"nodeType":"YulFunctionCall","src":"385:98:32"},{"kind":"number","nodeType":"YulLiteral","src":"485:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"381:3:32"},"nodeType":"YulFunctionCall","src":"381:109:32"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"374:3:32"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41:5:32","type":""},{"name":"pos","nodeType":"YulTypedName","src":"48:3:32","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"56:3:32","type":""}],"src":"14:482:32"},{"body":{"nodeType":"YulBlock","src":"622:99:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"639:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"650:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"632:6:32"},"nodeType":"YulFunctionCall","src":"632:21:32"},"nodeType":"YulExpressionStatement","src":"632:21:32"},{"nodeType":"YulAssignment","src":"662:53:32","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"688:6:32"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"700:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"711:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"696:3:32"},"nodeType":"YulFunctionCall","src":"696:18:32"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"670:17:32"},"nodeType":"YulFunctionCall","src":"670:45:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"662:4:32"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"591:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"602:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"613:4:32","type":""}],"src":"501:220:32"},{"body":{"nodeType":"YulBlock","src":"771:109:32","statements":[{"body":{"nodeType":"YulBlock","src":"858:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"867:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"870:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"860:6:32"},"nodeType":"YulFunctionCall","src":"860:12:32"},"nodeType":"YulExpressionStatement","src":"860:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"794:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"805:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"812:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"801:3:32"},"nodeType":"YulFunctionCall","src":"801:54:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"791:2:32"},"nodeType":"YulFunctionCall","src":"791:65:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"784:6:32"},"nodeType":"YulFunctionCall","src":"784:73:32"},"nodeType":"YulIf","src":"781:93:32"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"760:5:32","type":""}],"src":"726:154:32"},{"body":{"nodeType":"YulBlock","src":"972:228:32","statements":[{"body":{"nodeType":"YulBlock","src":"1018:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1027:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1030:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1020:6:32"},"nodeType":"YulFunctionCall","src":"1020:12:32"},"nodeType":"YulExpressionStatement","src":"1020:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"993:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1002:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"989:3:32"},"nodeType":"YulFunctionCall","src":"989:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1014:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"985:3:32"},"nodeType":"YulFunctionCall","src":"985:32:32"},"nodeType":"YulIf","src":"982:52:32"},{"nodeType":"YulVariableDeclaration","src":"1043:36:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1069:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1056:12:32"},"nodeType":"YulFunctionCall","src":"1056:23:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1047:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1113:5:32"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1088:24:32"},"nodeType":"YulFunctionCall","src":"1088:31:32"},"nodeType":"YulExpressionStatement","src":"1088:31:32"},{"nodeType":"YulAssignment","src":"1128:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"1138:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1128:6:32"}]},{"nodeType":"YulAssignment","src":"1152:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1179:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1190:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1175:3:32"},"nodeType":"YulFunctionCall","src":"1175:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1162:12:32"},"nodeType":"YulFunctionCall","src":"1162:32:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1152:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"930:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"941:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"953:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"961:6:32","type":""}],"src":"885:315:32"},{"body":{"nodeType":"YulBlock","src":"1300:92:32","statements":[{"nodeType":"YulAssignment","src":"1310:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1322:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1333:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1318:3:32"},"nodeType":"YulFunctionCall","src":"1318:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1310:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1352:9:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1377:6:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1370:6:32"},"nodeType":"YulFunctionCall","src":"1370:14:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1363:6:32"},"nodeType":"YulFunctionCall","src":"1363:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1345:6:32"},"nodeType":"YulFunctionCall","src":"1345:41:32"},"nodeType":"YulExpressionStatement","src":"1345:41:32"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1269:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1280:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1291:4:32","type":""}],"src":"1205:187:32"},{"body":{"nodeType":"YulBlock","src":"1498:76:32","statements":[{"nodeType":"YulAssignment","src":"1508:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1520:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1531:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1516:3:32"},"nodeType":"YulFunctionCall","src":"1516:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1508:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1550:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"1561:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1543:6:32"},"nodeType":"YulFunctionCall","src":"1543:25:32"},"nodeType":"YulExpressionStatement","src":"1543:25:32"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1467:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1478:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1489:4:32","type":""}],"src":"1397:177:32"},{"body":{"nodeType":"YulBlock","src":"1683:352:32","statements":[{"body":{"nodeType":"YulBlock","src":"1729:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1738:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1741:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1731:6:32"},"nodeType":"YulFunctionCall","src":"1731:12:32"},"nodeType":"YulExpressionStatement","src":"1731:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1704:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1713:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1700:3:32"},"nodeType":"YulFunctionCall","src":"1700:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1725:2:32","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1696:3:32"},"nodeType":"YulFunctionCall","src":"1696:32:32"},"nodeType":"YulIf","src":"1693:52:32"},{"nodeType":"YulVariableDeclaration","src":"1754:36:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1780:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1767:12:32"},"nodeType":"YulFunctionCall","src":"1767:23:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1758:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1824:5:32"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1799:24:32"},"nodeType":"YulFunctionCall","src":"1799:31:32"},"nodeType":"YulExpressionStatement","src":"1799:31:32"},{"nodeType":"YulAssignment","src":"1839:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"1849:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1839:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"1863:47:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1895:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1906:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1891:3:32"},"nodeType":"YulFunctionCall","src":"1891:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1878:12:32"},"nodeType":"YulFunctionCall","src":"1878:32:32"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1867:7:32","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1944:7:32"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1919:24:32"},"nodeType":"YulFunctionCall","src":"1919:33:32"},"nodeType":"YulExpressionStatement","src":"1919:33:32"},{"nodeType":"YulAssignment","src":"1961:17:32","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1971:7:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1961:6:32"}]},{"nodeType":"YulAssignment","src":"1987:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2014:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2025:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2010:3:32"},"nodeType":"YulFunctionCall","src":"2010:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1997:12:32"},"nodeType":"YulFunctionCall","src":"1997:32:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1987:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1633:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1644:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1656:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1664:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1672:6:32","type":""}],"src":"1579:456:32"},{"body":{"nodeType":"YulBlock","src":"2137:87:32","statements":[{"nodeType":"YulAssignment","src":"2147:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2159:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2170:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2155:3:32"},"nodeType":"YulFunctionCall","src":"2155:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2147:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2189:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2204:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"2212:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2200:3:32"},"nodeType":"YulFunctionCall","src":"2200:17:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2182:6:32"},"nodeType":"YulFunctionCall","src":"2182:36:32"},"nodeType":"YulExpressionStatement","src":"2182:36:32"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2106:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2117:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2128:4:32","type":""}],"src":"2040:184:32"},{"body":{"nodeType":"YulBlock","src":"2330:76:32","statements":[{"nodeType":"YulAssignment","src":"2340:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2352:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2363:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2348:3:32"},"nodeType":"YulFunctionCall","src":"2348:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2340:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2382:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"2393:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2375:6:32"},"nodeType":"YulFunctionCall","src":"2375:25:32"},"nodeType":"YulExpressionStatement","src":"2375:25:32"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2299:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2310:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2321:4:32","type":""}],"src":"2229:177:32"},{"body":{"nodeType":"YulBlock","src":"2481:110:32","statements":[{"body":{"nodeType":"YulBlock","src":"2527:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2536:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2539:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2529:6:32"},"nodeType":"YulFunctionCall","src":"2529:12:32"},"nodeType":"YulExpressionStatement","src":"2529:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2502:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"2511:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2498:3:32"},"nodeType":"YulFunctionCall","src":"2498:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"2523:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2494:3:32"},"nodeType":"YulFunctionCall","src":"2494:32:32"},"nodeType":"YulIf","src":"2491:52:32"},{"nodeType":"YulAssignment","src":"2552:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2575:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2562:12:32"},"nodeType":"YulFunctionCall","src":"2562:23:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2552:6:32"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2447:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2458:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2470:6:32","type":""}],"src":"2411:180:32"},{"body":{"nodeType":"YulBlock","src":"2666:177:32","statements":[{"body":{"nodeType":"YulBlock","src":"2712:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2721:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2724:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2714:6:32"},"nodeType":"YulFunctionCall","src":"2714:12:32"},"nodeType":"YulExpressionStatement","src":"2714:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2687:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"2696:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2683:3:32"},"nodeType":"YulFunctionCall","src":"2683:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"2708:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2679:3:32"},"nodeType":"YulFunctionCall","src":"2679:32:32"},"nodeType":"YulIf","src":"2676:52:32"},{"nodeType":"YulVariableDeclaration","src":"2737:36:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2763:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2750:12:32"},"nodeType":"YulFunctionCall","src":"2750:23:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2741:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2807:5:32"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2782:24:32"},"nodeType":"YulFunctionCall","src":"2782:31:32"},"nodeType":"YulExpressionStatement","src":"2782:31:32"},{"nodeType":"YulAssignment","src":"2822:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"2832:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2822:6:32"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2632:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2643:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2655:6:32","type":""}],"src":"2596:247:32"},{"body":{"nodeType":"YulBlock","src":"2949:125:32","statements":[{"nodeType":"YulAssignment","src":"2959:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2971:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2982:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2967:3:32"},"nodeType":"YulFunctionCall","src":"2967:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2959:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3001:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3016:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"3024:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3012:3:32"},"nodeType":"YulFunctionCall","src":"3012:55:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2994:6:32"},"nodeType":"YulFunctionCall","src":"2994:74:32"},"nodeType":"YulExpressionStatement","src":"2994:74:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2918:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2929:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2940:4:32","type":""}],"src":"2848:226:32"},{"body":{"nodeType":"YulBlock","src":"3249:796:32","statements":[{"body":{"nodeType":"YulBlock","src":"3296:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3305:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3308:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3298:6:32"},"nodeType":"YulFunctionCall","src":"3298:12:32"},"nodeType":"YulExpressionStatement","src":"3298:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3270:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"3279:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3266:3:32"},"nodeType":"YulFunctionCall","src":"3266:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"3291:3:32","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3262:3:32"},"nodeType":"YulFunctionCall","src":"3262:33:32"},"nodeType":"YulIf","src":"3259:53:32"},{"nodeType":"YulVariableDeclaration","src":"3321:36:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3347:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3334:12:32"},"nodeType":"YulFunctionCall","src":"3334:23:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3325:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3391:5:32"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3366:24:32"},"nodeType":"YulFunctionCall","src":"3366:31:32"},"nodeType":"YulExpressionStatement","src":"3366:31:32"},{"nodeType":"YulAssignment","src":"3406:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"3416:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"3430:47:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3462:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3473:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3458:3:32"},"nodeType":"YulFunctionCall","src":"3458:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3445:12:32"},"nodeType":"YulFunctionCall","src":"3445:32:32"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"3434:7:32","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"3511:7:32"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3486:24:32"},"nodeType":"YulFunctionCall","src":"3486:33:32"},"nodeType":"YulExpressionStatement","src":"3486:33:32"},{"nodeType":"YulAssignment","src":"3528:17:32","value":{"name":"value_1","nodeType":"YulIdentifier","src":"3538:7:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3528:6:32"}]},{"nodeType":"YulAssignment","src":"3554:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3581:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3592:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3577:3:32"},"nodeType":"YulFunctionCall","src":"3577:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3564:12:32"},"nodeType":"YulFunctionCall","src":"3564:32:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3554:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"3605:46:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3636:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3647:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3632:3:32"},"nodeType":"YulFunctionCall","src":"3632:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3619:12:32"},"nodeType":"YulFunctionCall","src":"3619:32:32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3609:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3660:28:32","value":{"kind":"number","nodeType":"YulLiteral","src":"3670:18:32","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3664:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"3715:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3724:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3727:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3717:6:32"},"nodeType":"YulFunctionCall","src":"3717:12:32"},"nodeType":"YulExpressionStatement","src":"3717:12:32"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3703:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"3711:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3700:2:32"},"nodeType":"YulFunctionCall","src":"3700:14:32"},"nodeType":"YulIf","src":"3697:34:32"},{"nodeType":"YulVariableDeclaration","src":"3740:32:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3754:9:32"},{"name":"offset","nodeType":"YulIdentifier","src":"3765:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3750:3:32"},"nodeType":"YulFunctionCall","src":"3750:22:32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3744:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"3820:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3829:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3832:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3822:6:32"},"nodeType":"YulFunctionCall","src":"3822:12:32"},"nodeType":"YulExpressionStatement","src":"3822:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3799:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"3803:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3795:3:32"},"nodeType":"YulFunctionCall","src":"3795:13:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3810:7:32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3791:3:32"},"nodeType":"YulFunctionCall","src":"3791:27:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3784:6:32"},"nodeType":"YulFunctionCall","src":"3784:35:32"},"nodeType":"YulIf","src":"3781:55:32"},{"nodeType":"YulVariableDeclaration","src":"3845:30:32","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3872:2:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3859:12:32"},"nodeType":"YulFunctionCall","src":"3859:16:32"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3849:6:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"3902:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3911:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3914:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3904:6:32"},"nodeType":"YulFunctionCall","src":"3904:12:32"},"nodeType":"YulExpressionStatement","src":"3904:12:32"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3890:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"3898:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3887:2:32"},"nodeType":"YulFunctionCall","src":"3887:14:32"},"nodeType":"YulIf","src":"3884:34:32"},{"body":{"nodeType":"YulBlock","src":"3968:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3977:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3980:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3970:6:32"},"nodeType":"YulFunctionCall","src":"3970:12:32"},"nodeType":"YulExpressionStatement","src":"3970:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3941:2:32"},{"name":"length","nodeType":"YulIdentifier","src":"3945:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:32"},"nodeType":"YulFunctionCall","src":"3937:15:32"},{"kind":"number","nodeType":"YulLiteral","src":"3954:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3933:3:32"},"nodeType":"YulFunctionCall","src":"3933:24:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3959:7:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3930:2:32"},"nodeType":"YulFunctionCall","src":"3930:37:32"},"nodeType":"YulIf","src":"3927:57:32"},{"nodeType":"YulAssignment","src":"3993:21:32","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4007:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"4011:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4003:3:32"},"nodeType":"YulFunctionCall","src":"4003:11:32"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3993:6:32"}]},{"nodeType":"YulAssignment","src":"4023:16:32","value":{"name":"length","nodeType":"YulIdentifier","src":"4033:6:32"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4023:6:32"}]}]},"name":"abi_decode_tuple_t_contract$_IERC3156FlashBorrower_$3186t_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3183:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3194:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3206:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3214:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3222:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3230:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3238:6:32","type":""}],"src":"3079:966:32"},{"body":{"nodeType":"YulBlock","src":"4149:93:32","statements":[{"nodeType":"YulAssignment","src":"4159:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4171:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4182:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4167:3:32"},"nodeType":"YulFunctionCall","src":"4167:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4159:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4201:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4216:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"4224:10:32","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4212:3:32"},"nodeType":"YulFunctionCall","src":"4212:23:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4194:6:32"},"nodeType":"YulFunctionCall","src":"4194:42:32"},"nodeType":"YulExpressionStatement","src":"4194:42:32"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4118:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4129:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4140:4:32","type":""}],"src":"4050:192:32"},{"body":{"nodeType":"YulBlock","src":"4604:978:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4621:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4636:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"4644:66:32","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4632:3:32"},"nodeType":"YulFunctionCall","src":"4632:79:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4614:6:32"},"nodeType":"YulFunctionCall","src":"4614:98:32"},"nodeType":"YulExpressionStatement","src":"4614:98:32"},{"nodeType":"YulVariableDeclaration","src":"4721:12:32","value":{"kind":"number","nodeType":"YulLiteral","src":"4731:2:32","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4725:2:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4753:9:32"},{"name":"_1","nodeType":"YulIdentifier","src":"4764:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4749:3:32"},"nodeType":"YulFunctionCall","src":"4749:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"4769:3:32","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4742:6:32"},"nodeType":"YulFunctionCall","src":"4742:31:32"},"nodeType":"YulExpressionStatement","src":"4742:31:32"},{"nodeType":"YulVariableDeclaration","src":"4782:60:32","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4814:6:32"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4837:3:32","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:32"},"nodeType":"YulFunctionCall","src":"4822:19:32"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4796:17:32"},"nodeType":"YulFunctionCall","src":"4796:46:32"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4786:6:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4862:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4873:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4858:3:32"},"nodeType":"YulFunctionCall","src":"4858:18:32"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4882:6:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"4890:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4878:3:32"},"nodeType":"YulFunctionCall","src":"4878:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4851:6:32"},"nodeType":"YulFunctionCall","src":"4851:50:32"},"nodeType":"YulExpressionStatement","src":"4851:50:32"},{"nodeType":"YulVariableDeclaration","src":"4910:47:32","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4942:6:32"},{"name":"tail_1","nodeType":"YulIdentifier","src":"4950:6:32"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4924:17:32"},"nodeType":"YulFunctionCall","src":"4924:33:32"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"4914:6:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4977:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4988:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4973:3:32"},"nodeType":"YulFunctionCall","src":"4973:18:32"},{"name":"value3","nodeType":"YulIdentifier","src":"4993:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4966:6:32"},"nodeType":"YulFunctionCall","src":"4966:34:32"},"nodeType":"YulExpressionStatement","src":"4966:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5020:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5031:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5016:3:32"},"nodeType":"YulFunctionCall","src":"5016:19:32"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"5041:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"5049:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5037:3:32"},"nodeType":"YulFunctionCall","src":"5037:55:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5009:6:32"},"nodeType":"YulFunctionCall","src":"5009:84:32"},"nodeType":"YulExpressionStatement","src":"5009:84:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5113:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5124:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5109:3:32"},"nodeType":"YulFunctionCall","src":"5109:19:32"},{"name":"value5","nodeType":"YulIdentifier","src":"5130:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5102:6:32"},"nodeType":"YulFunctionCall","src":"5102:35:32"},"nodeType":"YulExpressionStatement","src":"5102:35:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5157:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5168:3:32","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5153:3:32"},"nodeType":"YulFunctionCall","src":"5153:19:32"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"5178:6:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"5186:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5174:3:32"},"nodeType":"YulFunctionCall","src":"5174:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5146:6:32"},"nodeType":"YulFunctionCall","src":"5146:51:32"},"nodeType":"YulExpressionStatement","src":"5146:51:32"},{"nodeType":"YulVariableDeclaration","src":"5206:17:32","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"5217:6:32"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"5210:3:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5232:27:32","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"5252:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5246:5:32"},"nodeType":"YulFunctionCall","src":"5246:13:32"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5236:6:32","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"5275:6:32"},{"name":"length","nodeType":"YulIdentifier","src":"5283:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5268:6:32"},"nodeType":"YulFunctionCall","src":"5268:22:32"},"nodeType":"YulExpressionStatement","src":"5268:22:32"},{"nodeType":"YulAssignment","src":"5299:22:32","value":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"5310:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"5318:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5306:3:32"},"nodeType":"YulFunctionCall","src":"5306:15:32"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5299:3:32"}]},{"nodeType":"YulVariableDeclaration","src":"5330:29:32","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"5348:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"5356:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5344:3:32"},"nodeType":"YulFunctionCall","src":"5344:15:32"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5334:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5368:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"5377:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5372:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"5436:120:32","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5457:3:32"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5468:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5462:5:32"},"nodeType":"YulFunctionCall","src":"5462:13:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5450:6:32"},"nodeType":"YulFunctionCall","src":"5450:26:32"},"nodeType":"YulExpressionStatement","src":"5450:26:32"},{"nodeType":"YulAssignment","src":"5489:19:32","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5500:3:32"},{"name":"_1","nodeType":"YulIdentifier","src":"5505:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5496:3:32"},"nodeType":"YulFunctionCall","src":"5496:12:32"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5489:3:32"}]},{"nodeType":"YulAssignment","src":"5521:25:32","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5535:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"5543:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5531:3:32"},"nodeType":"YulFunctionCall","src":"5531:15:32"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5521:6:32"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5398:1:32"},{"name":"length","nodeType":"YulIdentifier","src":"5401:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5395:2:32"},"nodeType":"YulFunctionCall","src":"5395:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5409:18:32","statements":[{"nodeType":"YulAssignment","src":"5411:14:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5420:1:32"},{"kind":"number","nodeType":"YulLiteral","src":"5423:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5416:3:32"},"nodeType":"YulFunctionCall","src":"5416:9:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5411:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"5391:3:32","statements":[]},"src":"5387:169:32"},{"nodeType":"YulAssignment","src":"5565:11:32","value":{"name":"pos","nodeType":"YulIdentifier","src":"5573:3:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5565:4:32"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4525:9:32","type":""},{"name":"value6","nodeType":"YulTypedName","src":"4536:6:32","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4544:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4552:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4560:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4568:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4576:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4584:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4595:4:32","type":""}],"src":"4247:1335:32"},{"body":{"nodeType":"YulBlock","src":"5686:97:32","statements":[{"nodeType":"YulAssignment","src":"5696:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5708:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5719:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5704:3:32"},"nodeType":"YulFunctionCall","src":"5704:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5696:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5738:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5753:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"5761:14:32","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5749:3:32"},"nodeType":"YulFunctionCall","src":"5749:27:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5731:6:32"},"nodeType":"YulFunctionCall","src":"5731:46:32"},"nodeType":"YulExpressionStatement","src":"5731:46:32"}]},"name":"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5655:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5666:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5677:4:32","type":""}],"src":"5587:196:32"},{"body":{"nodeType":"YulBlock","src":"5835:109:32","statements":[{"nodeType":"YulAssignment","src":"5845:29:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5867:6:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5854:12:32"},"nodeType":"YulFunctionCall","src":"5854:20:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5845:5:32"}]},{"body":{"nodeType":"YulBlock","src":"5922:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5931:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5934:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5924:6:32"},"nodeType":"YulFunctionCall","src":"5924:12:32"},"nodeType":"YulExpressionStatement","src":"5924:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5896:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5907:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"5914:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5903:3:32"},"nodeType":"YulFunctionCall","src":"5903:16:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5893:2:32"},"nodeType":"YulFunctionCall","src":"5893:27:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5886:6:32"},"nodeType":"YulFunctionCall","src":"5886:35:32"},"nodeType":"YulIf","src":"5883:55:32"}]},"name":"abi_decode_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5814:6:32","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5825:5:32","type":""}],"src":"5788:156:32"},{"body":{"nodeType":"YulBlock","src":"6102:439:32","statements":[{"body":{"nodeType":"YulBlock","src":"6149:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6158:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6161:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6151:6:32"},"nodeType":"YulFunctionCall","src":"6151:12:32"},"nodeType":"YulExpressionStatement","src":"6151:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6123:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"6132:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6119:3:32"},"nodeType":"YulFunctionCall","src":"6119:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"6144:3:32","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6115:3:32"},"nodeType":"YulFunctionCall","src":"6115:33:32"},"nodeType":"YulIf","src":"6112:53:32"},{"nodeType":"YulVariableDeclaration","src":"6174:36:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6200:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6187:12:32"},"nodeType":"YulFunctionCall","src":"6187:23:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6178:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6244:5:32"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6219:24:32"},"nodeType":"YulFunctionCall","src":"6219:31:32"},"nodeType":"YulExpressionStatement","src":"6219:31:32"},{"nodeType":"YulAssignment","src":"6259:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"6269:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6259:6:32"}]},{"nodeType":"YulAssignment","src":"6283:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6310:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6321:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6306:3:32"},"nodeType":"YulFunctionCall","src":"6306:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6293:12:32"},"nodeType":"YulFunctionCall","src":"6293:32:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6283:6:32"}]},{"nodeType":"YulAssignment","src":"6334:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6361:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6372:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6357:3:32"},"nodeType":"YulFunctionCall","src":"6357:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6344:12:32"},"nodeType":"YulFunctionCall","src":"6344:32:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6334:6:32"}]},{"nodeType":"YulAssignment","src":"6385:46:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6416:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6427:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6412:3:32"},"nodeType":"YulFunctionCall","src":"6412:18:32"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"6395:16:32"},"nodeType":"YulFunctionCall","src":"6395:36:32"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6385:6:32"}]},{"nodeType":"YulAssignment","src":"6440:43:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6467:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6478:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6463:3:32"},"nodeType":"YulFunctionCall","src":"6463:19:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6450:12:32"},"nodeType":"YulFunctionCall","src":"6450:33:32"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6440:6:32"}]},{"nodeType":"YulAssignment","src":"6492:43:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6519:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6530:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6515:3:32"},"nodeType":"YulFunctionCall","src":"6515:19:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6502:12:32"},"nodeType":"YulFunctionCall","src":"6502:33:32"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"6492:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6028:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6039:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6051:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6059:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6067:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6075:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6083:6:32","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6091:6:32","type":""}],"src":"5949:592:32"},{"body":{"nodeType":"YulBlock","src":"6716:564:32","statements":[{"body":{"nodeType":"YulBlock","src":"6763:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6772:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6775:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6765:6:32"},"nodeType":"YulFunctionCall","src":"6765:12:32"},"nodeType":"YulExpressionStatement","src":"6765:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6737:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"6746:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6733:3:32"},"nodeType":"YulFunctionCall","src":"6733:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"6758:3:32","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6729:3:32"},"nodeType":"YulFunctionCall","src":"6729:33:32"},"nodeType":"YulIf","src":"6726:53:32"},{"nodeType":"YulVariableDeclaration","src":"6788:36:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6814:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6801:12:32"},"nodeType":"YulFunctionCall","src":"6801:23:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6792:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6858:5:32"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6833:24:32"},"nodeType":"YulFunctionCall","src":"6833:31:32"},"nodeType":"YulExpressionStatement","src":"6833:31:32"},{"nodeType":"YulAssignment","src":"6873:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"6883:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6873:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"6897:47:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6929:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6940:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6925:3:32"},"nodeType":"YulFunctionCall","src":"6925:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6912:12:32"},"nodeType":"YulFunctionCall","src":"6912:32:32"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"6901:7:32","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"6978:7:32"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6953:24:32"},"nodeType":"YulFunctionCall","src":"6953:33:32"},"nodeType":"YulExpressionStatement","src":"6953:33:32"},{"nodeType":"YulAssignment","src":"6995:17:32","value":{"name":"value_1","nodeType":"YulIdentifier","src":"7005:7:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6995:6:32"}]},{"nodeType":"YulAssignment","src":"7021:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7048:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7059:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7044:3:32"},"nodeType":"YulFunctionCall","src":"7044:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7031:12:32"},"nodeType":"YulFunctionCall","src":"7031:32:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7021:6:32"}]},{"nodeType":"YulAssignment","src":"7072:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7099:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7110:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7095:3:32"},"nodeType":"YulFunctionCall","src":"7095:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7082:12:32"},"nodeType":"YulFunctionCall","src":"7082:32:32"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7072:6:32"}]},{"nodeType":"YulAssignment","src":"7123:47:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7154:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7165:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7150:3:32"},"nodeType":"YulFunctionCall","src":"7150:19:32"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"7133:16:32"},"nodeType":"YulFunctionCall","src":"7133:37:32"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7123:6:32"}]},{"nodeType":"YulAssignment","src":"7179:43:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7206:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7217:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7202:3:32"},"nodeType":"YulFunctionCall","src":"7202:19:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7189:12:32"},"nodeType":"YulFunctionCall","src":"7189:33:32"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7179:6:32"}]},{"nodeType":"YulAssignment","src":"7231:43:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7258:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7269:3:32","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7254:3:32"},"nodeType":"YulFunctionCall","src":"7254:19:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7241:12:32"},"nodeType":"YulFunctionCall","src":"7241:33:32"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"7231:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6634:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6645:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6657:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6665:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6673:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6681:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6689:6:32","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6697:6:32","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6705:6:32","type":""}],"src":"6546:734:32"},{"body":{"nodeType":"YulBlock","src":"7372:301:32","statements":[{"body":{"nodeType":"YulBlock","src":"7418:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7427:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7430:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7420:6:32"},"nodeType":"YulFunctionCall","src":"7420:12:32"},"nodeType":"YulExpressionStatement","src":"7420:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7393:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"7402:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7389:3:32"},"nodeType":"YulFunctionCall","src":"7389:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"7414:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7385:3:32"},"nodeType":"YulFunctionCall","src":"7385:32:32"},"nodeType":"YulIf","src":"7382:52:32"},{"nodeType":"YulVariableDeclaration","src":"7443:36:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7469:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7456:12:32"},"nodeType":"YulFunctionCall","src":"7456:23:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7447:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7513:5:32"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7488:24:32"},"nodeType":"YulFunctionCall","src":"7488:31:32"},"nodeType":"YulExpressionStatement","src":"7488:31:32"},{"nodeType":"YulAssignment","src":"7528:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"7538:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7528:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"7552:47:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7584:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7595:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7580:3:32"},"nodeType":"YulFunctionCall","src":"7580:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7567:12:32"},"nodeType":"YulFunctionCall","src":"7567:32:32"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"7556:7:32","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"7633:7:32"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7608:24:32"},"nodeType":"YulFunctionCall","src":"7608:33:32"},"nodeType":"YulExpressionStatement","src":"7608:33:32"},{"nodeType":"YulAssignment","src":"7650:17:32","value":{"name":"value_1","nodeType":"YulIdentifier","src":"7660:7:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7650:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7330:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7341:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7353:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7361:6:32","type":""}],"src":"7285:388:32"},{"body":{"nodeType":"YulBlock","src":"7764:333:32","statements":[{"body":{"nodeType":"YulBlock","src":"7810:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7819:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7822:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7812:6:32"},"nodeType":"YulFunctionCall","src":"7812:12:32"},"nodeType":"YulExpressionStatement","src":"7812:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7785:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"7794:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7781:3:32"},"nodeType":"YulFunctionCall","src":"7781:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"7806:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7777:3:32"},"nodeType":"YulFunctionCall","src":"7777:32:32"},"nodeType":"YulIf","src":"7774:52:32"},{"nodeType":"YulVariableDeclaration","src":"7835:36:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7861:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7848:12:32"},"nodeType":"YulFunctionCall","src":"7848:23:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7839:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7905:5:32"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7880:24:32"},"nodeType":"YulFunctionCall","src":"7880:31:32"},"nodeType":"YulExpressionStatement","src":"7880:31:32"},{"nodeType":"YulAssignment","src":"7920:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"7930:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7920:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"7944:47:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7976:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7987:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7972:3:32"},"nodeType":"YulFunctionCall","src":"7972:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7959:12:32"},"nodeType":"YulFunctionCall","src":"7959:32:32"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"7948:7:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"8049:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8058:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8061:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8051:6:32"},"nodeType":"YulFunctionCall","src":"8051:12:32"},"nodeType":"YulExpressionStatement","src":"8051:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"8013:7:32"},{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"8026:7:32"},{"kind":"number","nodeType":"YulLiteral","src":"8035:10:32","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8022:3:32"},"nodeType":"YulFunctionCall","src":"8022:24:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8010:2:32"},"nodeType":"YulFunctionCall","src":"8010:37:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8003:6:32"},"nodeType":"YulFunctionCall","src":"8003:45:32"},"nodeType":"YulIf","src":"8000:65:32"},{"nodeType":"YulAssignment","src":"8074:17:32","value":{"name":"value_1","nodeType":"YulIdentifier","src":"8084:7:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8074:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7722:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7733:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7745:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7753:6:32","type":""}],"src":"7678:419:32"},{"body":{"nodeType":"YulBlock","src":"8265:228:32","statements":[{"nodeType":"YulAssignment","src":"8275:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8287:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"8298:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8283:3:32"},"nodeType":"YulFunctionCall","src":"8283:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8275:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8317:9:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8338:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8332:5:32"},"nodeType":"YulFunctionCall","src":"8332:13:32"},{"kind":"number","nodeType":"YulLiteral","src":"8347:14:32","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8328:3:32"},"nodeType":"YulFunctionCall","src":"8328:34:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8310:6:32"},"nodeType":"YulFunctionCall","src":"8310:53:32"},"nodeType":"YulExpressionStatement","src":"8310:53:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8383:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"8394:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8379:3:32"},"nodeType":"YulFunctionCall","src":"8379:20:32"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8415:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"8423:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8411:3:32"},"nodeType":"YulFunctionCall","src":"8411:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8405:5:32"},"nodeType":"YulFunctionCall","src":"8405:24:32"},{"kind":"number","nodeType":"YulLiteral","src":"8431:54:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8401:3:32"},"nodeType":"YulFunctionCall","src":"8401:85:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8372:6:32"},"nodeType":"YulFunctionCall","src":"8372:115:32"},"nodeType":"YulExpressionStatement","src":"8372:115:32"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint208_$7683_memory_ptr__to_t_struct$_Checkpoint208_$7683_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8234:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8245:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8256:4:32","type":""}],"src":"8102:391:32"},{"body":{"nodeType":"YulBlock","src":"8553:382:32","statements":[{"nodeType":"YulAssignment","src":"8563:22:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8577:1:32","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"8580:4:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8573:3:32"},"nodeType":"YulFunctionCall","src":"8573:12:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8563:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"8594:38:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8624:4:32"},{"kind":"number","nodeType":"YulLiteral","src":"8630:1:32","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8620:3:32"},"nodeType":"YulFunctionCall","src":"8620:12:32"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8598:18:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"8671:31:32","statements":[{"nodeType":"YulAssignment","src":"8673:27:32","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8687:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"8695:4:32","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8683:3:32"},"nodeType":"YulFunctionCall","src":"8683:17:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8673:6:32"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8651:18:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8644:6:32"},"nodeType":"YulFunctionCall","src":"8644:26:32"},"nodeType":"YulIf","src":"8641:61:32"},{"body":{"nodeType":"YulBlock","src":"8761:168:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8782:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8785:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8775:6:32"},"nodeType":"YulFunctionCall","src":"8775:88:32"},"nodeType":"YulExpressionStatement","src":"8775:88:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8883:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8886:4:32","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8876:6:32"},"nodeType":"YulFunctionCall","src":"8876:15:32"},"nodeType":"YulExpressionStatement","src":"8876:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8911:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8914:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8904:6:32"},"nodeType":"YulFunctionCall","src":"8904:15:32"},"nodeType":"YulExpressionStatement","src":"8904:15:32"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8717:18:32"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8740:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"8748:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8737:2:32"},"nodeType":"YulFunctionCall","src":"8737:14:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8714:2:32"},"nodeType":"YulFunctionCall","src":"8714:38:32"},"nodeType":"YulIf","src":"8711:218:32"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8533:4:32","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8542:6:32","type":""}],"src":"8498:437:32"},{"body":{"nodeType":"YulBlock","src":"9067:140:32","statements":[{"nodeType":"YulAssignment","src":"9077:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9089:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9100:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9085:3:32"},"nodeType":"YulFunctionCall","src":"9085:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9077:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9119:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"9130:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9112:6:32"},"nodeType":"YulFunctionCall","src":"9112:25:32"},"nodeType":"YulExpressionStatement","src":"9112:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9157:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9168:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9153:3:32"},"nodeType":"YulFunctionCall","src":"9153:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9177:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"9185:14:32","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9173:3:32"},"nodeType":"YulFunctionCall","src":"9173:27:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9146:6:32"},"nodeType":"YulFunctionCall","src":"9146:55:32"},"nodeType":"YulExpressionStatement","src":"9146:55:32"}]},"name":"abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9028:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9039:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9047:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9058:4:32","type":""}],"src":"8940:267:32"},{"body":{"nodeType":"YulBlock","src":"9453:575:32","statements":[{"nodeType":"YulVariableDeclaration","src":"9463:52:32","value":{"kind":"number","nodeType":"YulLiteral","src":"9473:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9467:2:32","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9531:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9546:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"9554:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9542:3:32"},"nodeType":"YulFunctionCall","src":"9542:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9524:6:32"},"nodeType":"YulFunctionCall","src":"9524:34:32"},"nodeType":"YulExpressionStatement","src":"9524:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9578:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9589:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9574:3:32"},"nodeType":"YulFunctionCall","src":"9574:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9598:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"9606:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9594:3:32"},"nodeType":"YulFunctionCall","src":"9594:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9567:6:32"},"nodeType":"YulFunctionCall","src":"9567:43:32"},"nodeType":"YulExpressionStatement","src":"9567:43:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9630:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9641:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9626:3:32"},"nodeType":"YulFunctionCall","src":"9626:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"9646:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9619:6:32"},"nodeType":"YulFunctionCall","src":"9619:34:32"},"nodeType":"YulExpressionStatement","src":"9619:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9673:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9684:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9669:3:32"},"nodeType":"YulFunctionCall","src":"9669:18:32"},{"name":"value3","nodeType":"YulIdentifier","src":"9689:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9662:6:32"},"nodeType":"YulFunctionCall","src":"9662:34:32"},"nodeType":"YulExpressionStatement","src":"9662:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9716:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9727:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9712:3:32"},"nodeType":"YulFunctionCall","src":"9712:19:32"},{"kind":"number","nodeType":"YulLiteral","src":"9733:3:32","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9705:6:32"},"nodeType":"YulFunctionCall","src":"9705:32:32"},"nodeType":"YulExpressionStatement","src":"9705:32:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9757:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9768:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9753:3:32"},"nodeType":"YulFunctionCall","src":"9753:19:32"},{"name":"value5","nodeType":"YulIdentifier","src":"9774:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9746:6:32"},"nodeType":"YulFunctionCall","src":"9746:35:32"},"nodeType":"YulExpressionStatement","src":"9746:35:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9807:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9818:3:32","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9803:3:32"},"nodeType":"YulFunctionCall","src":"9803:19:32"},{"name":"value4","nodeType":"YulIdentifier","src":"9824:6:32"},{"name":"value5","nodeType":"YulIdentifier","src":"9832:6:32"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"9790:12:32"},"nodeType":"YulFunctionCall","src":"9790:49:32"},"nodeType":"YulExpressionStatement","src":"9790:49:32"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9863:9:32"},{"name":"value5","nodeType":"YulIdentifier","src":"9874:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9859:3:32"},"nodeType":"YulFunctionCall","src":"9859:22:32"},{"kind":"number","nodeType":"YulLiteral","src":"9883:3:32","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9855:3:32"},"nodeType":"YulFunctionCall","src":"9855:32:32"},{"kind":"number","nodeType":"YulLiteral","src":"9889:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9848:6:32"},"nodeType":"YulFunctionCall","src":"9848:43:32"},"nodeType":"YulExpressionStatement","src":"9848:43:32"},{"nodeType":"YulAssignment","src":"9900:122:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9916:9:32"},{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9935:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"9943:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9931:3:32"},"nodeType":"YulFunctionCall","src":"9931:15:32"},{"kind":"number","nodeType":"YulLiteral","src":"9948:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9927:3:32"},"nodeType":"YulFunctionCall","src":"9927:88:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9912:3:32"},"nodeType":"YulFunctionCall","src":"9912:104:32"},{"kind":"number","nodeType":"YulLiteral","src":"10018:3:32","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9908:3:32"},"nodeType":"YulFunctionCall","src":"9908:114:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9900:4:32"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9382:9:32","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9393:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9401:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9409:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9417:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9425:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9433:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9444:4:32","type":""}],"src":"9212:816:32"},{"body":{"nodeType":"YulBlock","src":"10114:103:32","statements":[{"body":{"nodeType":"YulBlock","src":"10160:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10169:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10172:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10162:6:32"},"nodeType":"YulFunctionCall","src":"10162:12:32"},"nodeType":"YulExpressionStatement","src":"10162:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10135:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"10144:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10131:3:32"},"nodeType":"YulFunctionCall","src":"10131:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"10156:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10127:3:32"},"nodeType":"YulFunctionCall","src":"10127:32:32"},"nodeType":"YulIf","src":"10124:52:32"},{"nodeType":"YulAssignment","src":"10185:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10201:9:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10195:5:32"},"nodeType":"YulFunctionCall","src":"10195:16:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10185:6:32"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10080:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10091:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10103:6:32","type":""}],"src":"10033:184:32"},{"body":{"nodeType":"YulBlock","src":"10254:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10271:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10274:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10264:6:32"},"nodeType":"YulFunctionCall","src":"10264:88:32"},"nodeType":"YulExpressionStatement","src":"10264:88:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10368:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10371:4:32","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10361:6:32"},"nodeType":"YulFunctionCall","src":"10361:15:32"},"nodeType":"YulExpressionStatement","src":"10361:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10392:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10395:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10385:6:32"},"nodeType":"YulFunctionCall","src":"10385:15:32"},"nodeType":"YulExpressionStatement","src":"10385:15:32"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10222:184:32"},{"body":{"nodeType":"YulBlock","src":"10459:77:32","statements":[{"nodeType":"YulAssignment","src":"10469:16:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10480:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"10483:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10476:3:32"},"nodeType":"YulFunctionCall","src":"10476:9:32"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10469:3:32"}]},{"body":{"nodeType":"YulBlock","src":"10508:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10510:16:32"},"nodeType":"YulFunctionCall","src":"10510:18:32"},"nodeType":"YulExpressionStatement","src":"10510:18:32"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10500:1:32"},{"name":"sum","nodeType":"YulIdentifier","src":"10503:3:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10497:2:32"},"nodeType":"YulFunctionCall","src":"10497:10:32"},"nodeType":"YulIf","src":"10494:36:32"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10442:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"10445:1:32","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10451:3:32","type":""}],"src":"10411:125:32"},{"body":{"nodeType":"YulBlock","src":"10590:79:32","statements":[{"nodeType":"YulAssignment","src":"10600:17:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10612:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"10615:1:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10608:3:32"},"nodeType":"YulFunctionCall","src":"10608:9:32"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"10600:4:32"}]},{"body":{"nodeType":"YulBlock","src":"10641:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10643:16:32"},"nodeType":"YulFunctionCall","src":"10643:18:32"},"nodeType":"YulExpressionStatement","src":"10643:18:32"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"10632:4:32"},{"name":"x","nodeType":"YulIdentifier","src":"10638:1:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10629:2:32"},"nodeType":"YulFunctionCall","src":"10629:11:32"},"nodeType":"YulIf","src":"10626:37:32"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10572:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"10575:1:32","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"10581:4:32","type":""}],"src":"10541:128:32"},{"body":{"nodeType":"YulBlock","src":"10848:171:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10865:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10876:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10858:6:32"},"nodeType":"YulFunctionCall","src":"10858:21:32"},"nodeType":"YulExpressionStatement","src":"10858:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10899:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10910:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10895:3:32"},"nodeType":"YulFunctionCall","src":"10895:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"10915:2:32","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10888:6:32"},"nodeType":"YulFunctionCall","src":"10888:30:32"},"nodeType":"YulExpressionStatement","src":"10888:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10938:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10949:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10934:3:32"},"nodeType":"YulFunctionCall","src":"10934:18:32"},{"hexValue":"4549503731323a20556e696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"10954:23:32","type":"","value":"EIP712: Uninitialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10927:6:32"},"nodeType":"YulFunctionCall","src":"10927:51:32"},"nodeType":"YulExpressionStatement","src":"10927:51:32"},{"nodeType":"YulAssignment","src":"10987:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10999:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11010:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10995:3:32"},"nodeType":"YulFunctionCall","src":"10995:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10987:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10825:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10839:4:32","type":""}],"src":"10674:345:32"},{"body":{"nodeType":"YulBlock","src":"11056:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11073:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11076:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11066:6:32"},"nodeType":"YulFunctionCall","src":"11066:88:32"},"nodeType":"YulExpressionStatement","src":"11066:88:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11170:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11173:4:32","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11163:6:32"},"nodeType":"YulFunctionCall","src":"11163:15:32"},"nodeType":"YulExpressionStatement","src":"11163:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11194:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11197:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11187:6:32"},"nodeType":"YulFunctionCall","src":"11187:15:32"},"nodeType":"YulExpressionStatement","src":"11187:15:32"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"11024:184:32"},{"body":{"nodeType":"YulBlock","src":"11398:255:32","statements":[{"nodeType":"YulAssignment","src":"11408:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11420:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11431:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11416:3:32"},"nodeType":"YulFunctionCall","src":"11416:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11408:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11451:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"11462:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11444:6:32"},"nodeType":"YulFunctionCall","src":"11444:25:32"},"nodeType":"YulExpressionStatement","src":"11444:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11489:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11500:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11485:3:32"},"nodeType":"YulFunctionCall","src":"11485:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11509:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"11517:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11505:3:32"},"nodeType":"YulFunctionCall","src":"11505:55:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11478:6:32"},"nodeType":"YulFunctionCall","src":"11478:83:32"},"nodeType":"YulExpressionStatement","src":"11478:83:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11581:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11592:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11577:3:32"},"nodeType":"YulFunctionCall","src":"11577:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"11597:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11570:6:32"},"nodeType":"YulFunctionCall","src":"11570:34:32"},"nodeType":"YulExpressionStatement","src":"11570:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11624:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11635:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11620:3:32"},"nodeType":"YulFunctionCall","src":"11620:18:32"},{"name":"value3","nodeType":"YulIdentifier","src":"11640:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11613:6:32"},"nodeType":"YulFunctionCall","src":"11613:34:32"},"nodeType":"YulExpressionStatement","src":"11613:34:32"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11343:9:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11354:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11362:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11370:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11378:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11389:4:32","type":""}],"src":"11213:440:32"},{"body":{"nodeType":"YulBlock","src":"11722:418:32","statements":[{"nodeType":"YulVariableDeclaration","src":"11732:16:32","value":{"kind":"number","nodeType":"YulLiteral","src":"11747:1:32","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"11736:7:32","type":""}]},{"nodeType":"YulAssignment","src":"11757:16:32","value":{"name":"power_1","nodeType":"YulIdentifier","src":"11766:7:32"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"11757:5:32"}]},{"nodeType":"YulAssignment","src":"11782:13:32","value":{"name":"_base","nodeType":"YulIdentifier","src":"11790:5:32"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"11782:4:32"}]},{"body":{"nodeType":"YulBlock","src":"11846:288:32","statements":[{"body":{"nodeType":"YulBlock","src":"11951:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11953:16:32"},"nodeType":"YulFunctionCall","src":"11953:18:32"},"nodeType":"YulExpressionStatement","src":"11953:18:32"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"11866:4:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11876:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"base","nodeType":"YulIdentifier","src":"11944:4:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11872:3:32"},"nodeType":"YulFunctionCall","src":"11872:77:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11863:2:32"},"nodeType":"YulFunctionCall","src":"11863:87:32"},"nodeType":"YulIf","src":"11860:113:32"},{"body":{"nodeType":"YulBlock","src":"12012:29:32","statements":[{"nodeType":"YulAssignment","src":"12014:25:32","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"12027:5:32"},{"name":"base","nodeType":"YulIdentifier","src":"12034:4:32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12023:3:32"},"nodeType":"YulFunctionCall","src":"12023:16:32"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"12014:5:32"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"11993:8:32"},{"name":"power_1","nodeType":"YulIdentifier","src":"12003:7:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11989:3:32"},"nodeType":"YulFunctionCall","src":"11989:22:32"},"nodeType":"YulIf","src":"11986:55:32"},{"nodeType":"YulAssignment","src":"12054:23:32","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"12066:4:32"},{"name":"base","nodeType":"YulIdentifier","src":"12072:4:32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12062:3:32"},"nodeType":"YulFunctionCall","src":"12062:15:32"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"12054:4:32"}]},{"nodeType":"YulAssignment","src":"12090:34:32","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"12106:7:32"},{"name":"exponent","nodeType":"YulIdentifier","src":"12115:8:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12102:3:32"},"nodeType":"YulFunctionCall","src":"12102:22:32"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"12090:8:32"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"11815:8:32"},{"name":"power_1","nodeType":"YulIdentifier","src":"11825:7:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11812:2:32"},"nodeType":"YulFunctionCall","src":"11812:21:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11834:3:32","statements":[]},"pre":{"nodeType":"YulBlock","src":"11808:3:32","statements":[]},"src":"11804:330:32"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"11686:5:32","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"11693:8:32","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"11706:5:32","type":""},{"name":"base","nodeType":"YulTypedName","src":"11713:4:32","type":""}],"src":"11658:482:32"},{"body":{"nodeType":"YulBlock","src":"12204:807:32","statements":[{"body":{"nodeType":"YulBlock","src":"12242:52:32","statements":[{"nodeType":"YulAssignment","src":"12256:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"12265:1:32","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"12256:5:32"}]},{"nodeType":"YulLeave","src":"12279:5:32"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"12224:8:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12217:6:32"},"nodeType":"YulFunctionCall","src":"12217:16:32"},"nodeType":"YulIf","src":"12214:80:32"},{"body":{"nodeType":"YulBlock","src":"12327:52:32","statements":[{"nodeType":"YulAssignment","src":"12341:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"12350:1:32","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"12341:5:32"}]},{"nodeType":"YulLeave","src":"12364:5:32"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"12313:4:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12306:6:32"},"nodeType":"YulFunctionCall","src":"12306:12:32"},"nodeType":"YulIf","src":"12303:76:32"},{"cases":[{"body":{"nodeType":"YulBlock","src":"12415:52:32","statements":[{"nodeType":"YulAssignment","src":"12429:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"12438:1:32","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"12429:5:32"}]},{"nodeType":"YulLeave","src":"12452:5:32"}]},"nodeType":"YulCase","src":"12408:59:32","value":{"kind":"number","nodeType":"YulLiteral","src":"12413:1:32","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"12483:123:32","statements":[{"body":{"nodeType":"YulBlock","src":"12518:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12520:16:32"},"nodeType":"YulFunctionCall","src":"12520:18:32"},"nodeType":"YulExpressionStatement","src":"12520:18:32"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"12503:8:32"},{"kind":"number","nodeType":"YulLiteral","src":"12513:3:32","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12500:2:32"},"nodeType":"YulFunctionCall","src":"12500:17:32"},"nodeType":"YulIf","src":"12497:43:32"},{"nodeType":"YulAssignment","src":"12553:25:32","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"12566:8:32"},{"kind":"number","nodeType":"YulLiteral","src":"12576:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12562:3:32"},"nodeType":"YulFunctionCall","src":"12562:16:32"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"12553:5:32"}]},{"nodeType":"YulLeave","src":"12591:5:32"}]},"nodeType":"YulCase","src":"12476:130:32","value":{"kind":"number","nodeType":"YulLiteral","src":"12481:1:32","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"12395:4:32"},"nodeType":"YulSwitch","src":"12388:218:32"},{"body":{"nodeType":"YulBlock","src":"12704:70:32","statements":[{"nodeType":"YulAssignment","src":"12718:28:32","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"12731:4:32"},{"name":"exponent","nodeType":"YulIdentifier","src":"12737:8:32"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"12727:3:32"},"nodeType":"YulFunctionCall","src":"12727:19:32"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"12718:5:32"}]},{"nodeType":"YulLeave","src":"12759:5:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"12628:4:32"},{"kind":"number","nodeType":"YulLiteral","src":"12634:2:32","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12625:2:32"},"nodeType":"YulFunctionCall","src":"12625:12:32"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"12642:8:32"},{"kind":"number","nodeType":"YulLiteral","src":"12652:2:32","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12639:2:32"},"nodeType":"YulFunctionCall","src":"12639:16:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12621:3:32"},"nodeType":"YulFunctionCall","src":"12621:35:32"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"12665:4:32"},{"kind":"number","nodeType":"YulLiteral","src":"12671:3:32","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12662:2:32"},"nodeType":"YulFunctionCall","src":"12662:13:32"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"12680:8:32"},{"kind":"number","nodeType":"YulLiteral","src":"12690:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12677:2:32"},"nodeType":"YulFunctionCall","src":"12677:16:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12658:3:32"},"nodeType":"YulFunctionCall","src":"12658:36:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"12618:2:32"},"nodeType":"YulFunctionCall","src":"12618:77:32"},"nodeType":"YulIf","src":"12615:159:32"},{"nodeType":"YulVariableDeclaration","src":"12783:57:32","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"12825:4:32"},{"name":"exponent","nodeType":"YulIdentifier","src":"12831:8:32"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"12806:18:32"},"nodeType":"YulFunctionCall","src":"12806:34:32"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"12787:7:32","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"12796:6:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"12945:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12947:16:32"},"nodeType":"YulFunctionCall","src":"12947:18:32"},"nodeType":"YulExpressionStatement","src":"12947:18:32"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"12855:7:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12868:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"base_1","nodeType":"YulIdentifier","src":"12936:6:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12864:3:32"},"nodeType":"YulFunctionCall","src":"12864:79:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12852:2:32"},"nodeType":"YulFunctionCall","src":"12852:92:32"},"nodeType":"YulIf","src":"12849:118:32"},{"nodeType":"YulAssignment","src":"12976:29:32","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"12989:7:32"},{"name":"base_1","nodeType":"YulIdentifier","src":"12998:6:32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12985:3:32"},"nodeType":"YulFunctionCall","src":"12985:20:32"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"12976:5:32"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"12175:4:32","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"12181:8:32","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"12194:5:32","type":""}],"src":"12145:866:32"},{"body":{"nodeType":"YulBlock","src":"13084:72:32","statements":[{"nodeType":"YulAssignment","src":"13094:56:32","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"13124:4:32"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"13134:8:32"},{"kind":"number","nodeType":"YulLiteral","src":"13144:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13130:3:32"},"nodeType":"YulFunctionCall","src":"13130:19:32"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"13103:20:32"},"nodeType":"YulFunctionCall","src":"13103:47:32"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"13094:5:32"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"13055:4:32","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"13061:8:32","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"13074:5:32","type":""}],"src":"13016:140:32"},{"body":{"nodeType":"YulBlock","src":"13213:116:32","statements":[{"nodeType":"YulAssignment","src":"13223:20:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13238:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"13241:1:32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13234:3:32"},"nodeType":"YulFunctionCall","src":"13234:9:32"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"13223:7:32"}]},{"body":{"nodeType":"YulBlock","src":"13301:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13303:16:32"},"nodeType":"YulFunctionCall","src":"13303:18:32"},"nodeType":"YulExpressionStatement","src":"13303:18:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13272:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13265:6:32"},"nodeType":"YulFunctionCall","src":"13265:9:32"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13279:1:32"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"13286:7:32"},{"name":"x","nodeType":"YulIdentifier","src":"13295:1:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13282:3:32"},"nodeType":"YulFunctionCall","src":"13282:15:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13276:2:32"},"nodeType":"YulFunctionCall","src":"13276:22:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"13262:2:32"},"nodeType":"YulFunctionCall","src":"13262:37:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13255:6:32"},"nodeType":"YulFunctionCall","src":"13255:45:32"},"nodeType":"YulIf","src":"13252:71:32"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13192:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"13195:1:32","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"13201:7:32","type":""}],"src":"13161:168:32"},{"body":{"nodeType":"YulBlock","src":"13442:101:32","statements":[{"nodeType":"YulAssignment","src":"13452:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13464:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13475:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13460:3:32"},"nodeType":"YulFunctionCall","src":"13460:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13452:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13494:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13509:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"13517:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13505:3:32"},"nodeType":"YulFunctionCall","src":"13505:31:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13487:6:32"},"nodeType":"YulFunctionCall","src":"13487:50:32"},"nodeType":"YulExpressionStatement","src":"13487:50:32"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13411:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13422:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13433:4:32","type":""}],"src":"13334:209:32"},{"body":{"nodeType":"YulBlock","src":"13789:373:32","statements":[{"nodeType":"YulAssignment","src":"13799:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13811:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13822:3:32","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13807:3:32"},"nodeType":"YulFunctionCall","src":"13807:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13799:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13842:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"13853:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13835:6:32"},"nodeType":"YulFunctionCall","src":"13835:25:32"},"nodeType":"YulExpressionStatement","src":"13835:25:32"},{"nodeType":"YulVariableDeclaration","src":"13869:52:32","value":{"kind":"number","nodeType":"YulLiteral","src":"13879:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13873:2:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13941:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13952:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13937:3:32"},"nodeType":"YulFunctionCall","src":"13937:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13961:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"13969:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13957:3:32"},"nodeType":"YulFunctionCall","src":"13957:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13930:6:32"},"nodeType":"YulFunctionCall","src":"13930:43:32"},"nodeType":"YulExpressionStatement","src":"13930:43:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13993:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14004:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13989:3:32"},"nodeType":"YulFunctionCall","src":"13989:18:32"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14013:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"14021:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14009:3:32"},"nodeType":"YulFunctionCall","src":"14009:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13982:6:32"},"nodeType":"YulFunctionCall","src":"13982:43:32"},"nodeType":"YulExpressionStatement","src":"13982:43:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14045:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14056:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14041:3:32"},"nodeType":"YulFunctionCall","src":"14041:18:32"},{"name":"value3","nodeType":"YulIdentifier","src":"14061:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14034:6:32"},"nodeType":"YulFunctionCall","src":"14034:34:32"},"nodeType":"YulExpressionStatement","src":"14034:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14088:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14099:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14084:3:32"},"nodeType":"YulFunctionCall","src":"14084:19:32"},{"name":"value4","nodeType":"YulIdentifier","src":"14105:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14077:6:32"},"nodeType":"YulFunctionCall","src":"14077:35:32"},"nodeType":"YulExpressionStatement","src":"14077:35:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14132:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14143:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14128:3:32"},"nodeType":"YulFunctionCall","src":"14128:19:32"},{"name":"value5","nodeType":"YulIdentifier","src":"14149:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14121:6:32"},"nodeType":"YulFunctionCall","src":"14121:35:32"},"nodeType":"YulExpressionStatement","src":"14121:35:32"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13718:9:32","type":""},{"name":"value5","nodeType":"YulTypedName","src":"13729:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13737:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13745:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13753:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13761:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13769:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13780:4:32","type":""}],"src":"13548:614:32"},{"body":{"nodeType":"YulBlock","src":"14296:198:32","statements":[{"nodeType":"YulAssignment","src":"14306:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14318:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14329:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14314:3:32"},"nodeType":"YulFunctionCall","src":"14314:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14306:4:32"}]},{"nodeType":"YulVariableDeclaration","src":"14341:52:32","value":{"kind":"number","nodeType":"YulLiteral","src":"14351:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14345:2:32","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14409:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14424:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"14432:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14420:3:32"},"nodeType":"YulFunctionCall","src":"14420:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14402:6:32"},"nodeType":"YulFunctionCall","src":"14402:34:32"},"nodeType":"YulExpressionStatement","src":"14402:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14456:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14467:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14452:3:32"},"nodeType":"YulFunctionCall","src":"14452:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14476:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"14484:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14472:3:32"},"nodeType":"YulFunctionCall","src":"14472:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14445:6:32"},"nodeType":"YulFunctionCall","src":"14445:43:32"},"nodeType":"YulExpressionStatement","src":"14445:43:32"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14257:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14268:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14276:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14287:4:32","type":""}],"src":"14167:327:32"},{"body":{"nodeType":"YulBlock","src":"14656:211:32","statements":[{"nodeType":"YulAssignment","src":"14666:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14678:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14689:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14674:3:32"},"nodeType":"YulFunctionCall","src":"14674:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14666:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14708:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14723:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"14731:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14719:3:32"},"nodeType":"YulFunctionCall","src":"14719:55:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14701:6:32"},"nodeType":"YulFunctionCall","src":"14701:74:32"},"nodeType":"YulExpressionStatement","src":"14701:74:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14795:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14806:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14791:3:32"},"nodeType":"YulFunctionCall","src":"14791:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"14811:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14784:6:32"},"nodeType":"YulFunctionCall","src":"14784:34:32"},"nodeType":"YulExpressionStatement","src":"14784:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14838:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14849:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14834:3:32"},"nodeType":"YulFunctionCall","src":"14834:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"14854:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14827:6:32"},"nodeType":"YulFunctionCall","src":"14827:34:32"},"nodeType":"YulExpressionStatement","src":"14827:34:32"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14609:9:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14620:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14628:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14636:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14647:4:32","type":""}],"src":"14499:368:32"},{"body":{"nodeType":"YulBlock","src":"15008:130:32","statements":[{"nodeType":"YulAssignment","src":"15018:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15030:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15041:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15026:3:32"},"nodeType":"YulFunctionCall","src":"15026:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15018:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15060:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15075:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"15083:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15071:3:32"},"nodeType":"YulFunctionCall","src":"15071:17:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15053:6:32"},"nodeType":"YulFunctionCall","src":"15053:36:32"},"nodeType":"YulExpressionStatement","src":"15053:36:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15109:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15120:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15105:3:32"},"nodeType":"YulFunctionCall","src":"15105:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"15125:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15098:6:32"},"nodeType":"YulFunctionCall","src":"15098:34:32"},"nodeType":"YulExpressionStatement","src":"15098:34:32"}]},"name":"abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14969:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14980:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14988:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14999:4:32","type":""}],"src":"14872:266:32"},{"body":{"nodeType":"YulBlock","src":"15272:168:32","statements":[{"nodeType":"YulAssignment","src":"15282:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15294:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15305:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15290:3:32"},"nodeType":"YulFunctionCall","src":"15290:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15282:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15324:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15339:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"15347:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15335:3:32"},"nodeType":"YulFunctionCall","src":"15335:55:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15317:6:32"},"nodeType":"YulFunctionCall","src":"15317:74:32"},"nodeType":"YulExpressionStatement","src":"15317:74:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15411:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15422:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15407:3:32"},"nodeType":"YulFunctionCall","src":"15407:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"15427:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15400:6:32"},"nodeType":"YulFunctionCall","src":"15400:34:32"},"nodeType":"YulExpressionStatement","src":"15400:34:32"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15233:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15244:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15252:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15263:4:32","type":""}],"src":"15143:297:32"},{"body":{"nodeType":"YulBlock","src":"15658:299:32","statements":[{"nodeType":"YulAssignment","src":"15668:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15680:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15691:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15676:3:32"},"nodeType":"YulFunctionCall","src":"15676:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15668:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15711:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"15722:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15704:6:32"},"nodeType":"YulFunctionCall","src":"15704:25:32"},"nodeType":"YulExpressionStatement","src":"15704:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15749:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15760:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15745:3:32"},"nodeType":"YulFunctionCall","src":"15745:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"15765:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15738:6:32"},"nodeType":"YulFunctionCall","src":"15738:34:32"},"nodeType":"YulExpressionStatement","src":"15738:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15792:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15803:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15788:3:32"},"nodeType":"YulFunctionCall","src":"15788:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"15808:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15781:6:32"},"nodeType":"YulFunctionCall","src":"15781:34:32"},"nodeType":"YulExpressionStatement","src":"15781:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15835:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15846:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15831:3:32"},"nodeType":"YulFunctionCall","src":"15831:18:32"},{"name":"value3","nodeType":"YulIdentifier","src":"15851:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15824:6:32"},"nodeType":"YulFunctionCall","src":"15824:34:32"},"nodeType":"YulExpressionStatement","src":"15824:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15878:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15889:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15874:3:32"},"nodeType":"YulFunctionCall","src":"15874:19:32"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"15899:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"15907:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15895:3:32"},"nodeType":"YulFunctionCall","src":"15895:55:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15867:6:32"},"nodeType":"YulFunctionCall","src":"15867:84:32"},"nodeType":"YulExpressionStatement","src":"15867:84:32"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15595:9:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15606:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15614:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15622:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15630:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15638:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15649:4:32","type":""}],"src":"15445:512:32"},{"body":{"nodeType":"YulBlock","src":"15994:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16011:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16014:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16004:6:32"},"nodeType":"YulFunctionCall","src":"16004:88:32"},"nodeType":"YulExpressionStatement","src":"16004:88:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16108:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16111:4:32","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16101:6:32"},"nodeType":"YulFunctionCall","src":"16101:15:32"},"nodeType":"YulExpressionStatement","src":"16101:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16132:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16135:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16125:6:32"},"nodeType":"YulFunctionCall","src":"16125:15:32"},"nodeType":"YulExpressionStatement","src":"16125:15:32"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"15962:184:32"},{"body":{"nodeType":"YulBlock","src":"16280:119:32","statements":[{"nodeType":"YulAssignment","src":"16290:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16302:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16313:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16298:3:32"},"nodeType":"YulFunctionCall","src":"16298:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16290:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16332:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"16343:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16325:6:32"},"nodeType":"YulFunctionCall","src":"16325:25:32"},"nodeType":"YulExpressionStatement","src":"16325:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16370:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16381:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16366:3:32"},"nodeType":"YulFunctionCall","src":"16366:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"16386:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16359:6:32"},"nodeType":"YulFunctionCall","src":"16359:34:32"},"nodeType":"YulExpressionStatement","src":"16359:34:32"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16241:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16252:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16260:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16271:4:32","type":""}],"src":"16151:248:32"},{"body":{"nodeType":"YulBlock","src":"16540:130:32","statements":[{"nodeType":"YulAssignment","src":"16550:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16562:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16573:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16558:3:32"},"nodeType":"YulFunctionCall","src":"16558:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16550:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16592:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16607:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"16615:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16603:3:32"},"nodeType":"YulFunctionCall","src":"16603:17:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16585:6:32"},"nodeType":"YulFunctionCall","src":"16585:36:32"},"nodeType":"YulExpressionStatement","src":"16585:36:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16641:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16652:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16637:3:32"},"nodeType":"YulFunctionCall","src":"16637:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"16657:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16630:6:32"},"nodeType":"YulFunctionCall","src":"16630:34:32"},"nodeType":"YulExpressionStatement","src":"16630:34:32"}]},"name":"abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16501:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16512:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16520:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16531:4:32","type":""}],"src":"16404:266:32"},{"body":{"nodeType":"YulBlock","src":"16856:217:32","statements":[{"nodeType":"YulAssignment","src":"16866:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16878:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16889:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16874:3:32"},"nodeType":"YulFunctionCall","src":"16874:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16866:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16909:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"16920:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16902:6:32"},"nodeType":"YulFunctionCall","src":"16902:25:32"},"nodeType":"YulExpressionStatement","src":"16902:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16947:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16958:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16943:3:32"},"nodeType":"YulFunctionCall","src":"16943:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16967:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"16975:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16963:3:32"},"nodeType":"YulFunctionCall","src":"16963:17:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16936:6:32"},"nodeType":"YulFunctionCall","src":"16936:45:32"},"nodeType":"YulExpressionStatement","src":"16936:45:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17001:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17012:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16997:3:32"},"nodeType":"YulFunctionCall","src":"16997:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"17017:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16990:6:32"},"nodeType":"YulFunctionCall","src":"16990:34:32"},"nodeType":"YulExpressionStatement","src":"16990:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17044:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17055:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17040:3:32"},"nodeType":"YulFunctionCall","src":"17040:18:32"},{"name":"value3","nodeType":"YulIdentifier","src":"17060:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17033:6:32"},"nodeType":"YulFunctionCall","src":"17033:34:32"},"nodeType":"YulExpressionStatement","src":"17033:34:32"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16801:9:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16812:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16820:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16828:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16836:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16847:4:32","type":""}],"src":"16675:398:32"},{"body":{"nodeType":"YulBlock","src":"17110:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17127:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17130:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17120:6:32"},"nodeType":"YulFunctionCall","src":"17120:88:32"},"nodeType":"YulExpressionStatement","src":"17120:88:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17224:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17227:4:32","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17217:6:32"},"nodeType":"YulFunctionCall","src":"17217:15:32"},"nodeType":"YulExpressionStatement","src":"17217:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17248:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17251:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17241:6:32"},"nodeType":"YulFunctionCall","src":"17241:15:32"},"nodeType":"YulExpressionStatement","src":"17241:15:32"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"17078:184:32"},{"body":{"nodeType":"YulBlock","src":"17323:65:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17340:1:32","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"17343:3:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17333:6:32"},"nodeType":"YulFunctionCall","src":"17333:14:32"},"nodeType":"YulExpressionStatement","src":"17333:14:32"},{"nodeType":"YulAssignment","src":"17356:26:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17374:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17377:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17364:9:32"},"nodeType":"YulFunctionCall","src":"17364:18:32"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17356:4:32"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17306:3:32","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"17314:4:32","type":""}],"src":"17267:121:32"},{"body":{"nodeType":"YulBlock","src":"17474:464:32","statements":[{"body":{"nodeType":"YulBlock","src":"17507:425:32","statements":[{"nodeType":"YulVariableDeclaration","src":"17521:11:32","value":{"kind":"number","nodeType":"YulLiteral","src":"17531:1:32","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"17525:2:32","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"17552:2:32"},{"name":"array","nodeType":"YulIdentifier","src":"17556:5:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17545:6:32"},"nodeType":"YulFunctionCall","src":"17545:17:32"},"nodeType":"YulExpressionStatement","src":"17545:17:32"},{"nodeType":"YulVariableDeclaration","src":"17575:31:32","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"17597:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"17601:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17587:9:32"},"nodeType":"YulFunctionCall","src":"17587:19:32"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"17579:4:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17619:57:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17642:4:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17652:1:32","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"17659:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"17671:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17655:3:32"},"nodeType":"YulFunctionCall","src":"17655:19:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17648:3:32"},"nodeType":"YulFunctionCall","src":"17648:27:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17638:3:32"},"nodeType":"YulFunctionCall","src":"17638:38:32"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"17623:11:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"17713:23:32","statements":[{"nodeType":"YulAssignment","src":"17715:19:32","value":{"name":"data","nodeType":"YulIdentifier","src":"17730:4:32"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"17715:11:32"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"17695:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"17707:4:32","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17692:2:32"},"nodeType":"YulFunctionCall","src":"17692:20:32"},"nodeType":"YulIf","src":"17689:47:32"},{"nodeType":"YulVariableDeclaration","src":"17749:41:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17763:4:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17773:1:32","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"17780:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"17785:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17776:3:32"},"nodeType":"YulFunctionCall","src":"17776:12:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17769:3:32"},"nodeType":"YulFunctionCall","src":"17769:20:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17759:3:32"},"nodeType":"YulFunctionCall","src":"17759:31:32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"17753:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17803:24:32","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"17816:11:32"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"17807:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"17901:21:32","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17910:5:32"},{"name":"_1","nodeType":"YulIdentifier","src":"17917:2:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17903:6:32"},"nodeType":"YulFunctionCall","src":"17903:17:32"},"nodeType":"YulExpressionStatement","src":"17903:17:32"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17851:5:32"},{"name":"_2","nodeType":"YulIdentifier","src":"17858:2:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17848:2:32"},"nodeType":"YulFunctionCall","src":"17848:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17862:26:32","statements":[{"nodeType":"YulAssignment","src":"17864:22:32","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17877:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"17884:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17873:3:32"},"nodeType":"YulFunctionCall","src":"17873:13:32"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"17864:5:32"}]}]},"pre":{"nodeType":"YulBlock","src":"17844:3:32","statements":[]},"src":"17840:82:32"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"17490:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"17495:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17487:2:32"},"nodeType":"YulFunctionCall","src":"17487:11:32"},"nodeType":"YulIf","src":"17484:448:32"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"17446:5:32","type":""},{"name":"len","nodeType":"YulTypedName","src":"17453:3:32","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"17458:10:32","type":""}],"src":"17393:545:32"},{"body":{"nodeType":"YulBlock","src":"18028:141:32","statements":[{"nodeType":"YulAssignment","src":"18038:125:32","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18053:4:32"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18071:1:32","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"18074:3:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18067:3:32"},"nodeType":"YulFunctionCall","src":"18067:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"18080:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18063:3:32"},"nodeType":"YulFunctionCall","src":"18063:84:32"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18059:3:32"},"nodeType":"YulFunctionCall","src":"18059:89:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18049:3:32"},"nodeType":"YulFunctionCall","src":"18049:100:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18155:1:32","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"18158:3:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18151:3:32"},"nodeType":"YulFunctionCall","src":"18151:11:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18046:2:32"},"nodeType":"YulFunctionCall","src":"18046:117:32"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"18038:4:32"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18005:4:32","type":""},{"name":"len","nodeType":"YulTypedName","src":"18011:3:32","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"18019:4:32","type":""}],"src":"17943:226:32"},{"body":{"nodeType":"YulBlock","src":"18270:1375:32","statements":[{"nodeType":"YulVariableDeclaration","src":"18280:24:32","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18300:3:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18294:5:32"},"nodeType":"YulFunctionCall","src":"18294:10:32"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"18284:6:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"18347:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18349:16:32"},"nodeType":"YulFunctionCall","src":"18349:18:32"},"nodeType":"YulExpressionStatement","src":"18349:18:32"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18319:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"18327:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18316:2:32"},"nodeType":"YulFunctionCall","src":"18316:30:32"},"nodeType":"YulIf","src":"18313:56:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18422:4:32"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18460:4:32"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18454:5:32"},"nodeType":"YulFunctionCall","src":"18454:11:32"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"18428:25:32"},"nodeType":"YulFunctionCall","src":"18428:38:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"18468:6:32"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"18378:43:32"},"nodeType":"YulFunctionCall","src":"18378:97:32"},"nodeType":"YulExpressionStatement","src":"18378:97:32"},{"nodeType":"YulVariableDeclaration","src":"18484:18:32","value":{"kind":"number","nodeType":"YulLiteral","src":"18501:1:32","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"18488:9:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18511:23:32","value":{"kind":"number","nodeType":"YulLiteral","src":"18530:4:32","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"18515:11:32","type":""}]},{"nodeType":"YulAssignment","src":"18543:24:32","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"18556:11:32"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"18543:9:32"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"18613:775:32","statements":[{"nodeType":"YulVariableDeclaration","src":"18627:94:32","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18646:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"18654:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18642:3:32"},"nodeType":"YulFunctionCall","src":"18642:79:32"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"18631:7:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18734:49:32","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18778:4:32"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"18748:29:32"},"nodeType":"YulFunctionCall","src":"18748:35:32"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"18738:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18796:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"18805:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18800:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"18883:172:32","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18908:6:32"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18926:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"18931:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18922:3:32"},"nodeType":"YulFunctionCall","src":"18922:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18916:5:32"},"nodeType":"YulFunctionCall","src":"18916:26:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18901:6:32"},"nodeType":"YulFunctionCall","src":"18901:42:32"},"nodeType":"YulExpressionStatement","src":"18901:42:32"},{"nodeType":"YulAssignment","src":"18960:24:32","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18974:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"18982:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18970:3:32"},"nodeType":"YulFunctionCall","src":"18970:14:32"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18960:6:32"}]},{"nodeType":"YulAssignment","src":"19001:40:32","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19018:9:32"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"19029:11:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19014:3:32"},"nodeType":"YulFunctionCall","src":"19014:27:32"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19001:9:32"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18830:1:32"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"18833:7:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18827:2:32"},"nodeType":"YulFunctionCall","src":"18827:14:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18842:28:32","statements":[{"nodeType":"YulAssignment","src":"18844:24:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18853:1:32"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"18856:11:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18849:3:32"},"nodeType":"YulFunctionCall","src":"18849:19:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18844:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"18823:3:32","statements":[]},"src":"18819:236:32"},{"body":{"nodeType":"YulBlock","src":"19103:226:32","statements":[{"nodeType":"YulVariableDeclaration","src":"19121:43:32","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19148:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19153:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19144:3:32"},"nodeType":"YulFunctionCall","src":"19144:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19138:5:32"},"nodeType":"YulFunctionCall","src":"19138:26:32"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"19125:9:32","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19188:6:32"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"19200:9:32"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19227:1:32","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"19230:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19223:3:32"},"nodeType":"YulFunctionCall","src":"19223:14:32"},{"kind":"number","nodeType":"YulLiteral","src":"19239:3:32","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19219:3:32"},"nodeType":"YulFunctionCall","src":"19219:24:32"},{"kind":"number","nodeType":"YulLiteral","src":"19245:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19215:3:32"},"nodeType":"YulFunctionCall","src":"19215:97:32"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19211:3:32"},"nodeType":"YulFunctionCall","src":"19211:102:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19196:3:32"},"nodeType":"YulFunctionCall","src":"19196:118:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19181:6:32"},"nodeType":"YulFunctionCall","src":"19181:134:32"},"nodeType":"YulExpressionStatement","src":"19181:134:32"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"19074:7:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"19083:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19071:2:32"},"nodeType":"YulFunctionCall","src":"19071:19:32"},"nodeType":"YulIf","src":"19068:261:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19349:4:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19363:1:32","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"19366:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19359:3:32"},"nodeType":"YulFunctionCall","src":"19359:14:32"},{"kind":"number","nodeType":"YulLiteral","src":"19375:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19355:3:32"},"nodeType":"YulFunctionCall","src":"19355:22:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19342:6:32"},"nodeType":"YulFunctionCall","src":"19342:36:32"},"nodeType":"YulExpressionStatement","src":"19342:36:32"}]},"nodeType":"YulCase","src":"18606:782:32","value":{"kind":"number","nodeType":"YulLiteral","src":"18611:1:32","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"19405:234:32","statements":[{"nodeType":"YulVariableDeclaration","src":"19419:14:32","value":{"kind":"number","nodeType":"YulLiteral","src":"19432:1:32","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"19423:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"19468:67:32","statements":[{"nodeType":"YulAssignment","src":"19486:35:32","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19505:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19510:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19501:3:32"},"nodeType":"YulFunctionCall","src":"19501:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19495:5:32"},"nodeType":"YulFunctionCall","src":"19495:26:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19486:5:32"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"19449:6:32"},"nodeType":"YulIf","src":"19446:89:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19555:4:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19614:5:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"19621:6:32"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"19561:52:32"},"nodeType":"YulFunctionCall","src":"19561:67:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19548:6:32"},"nodeType":"YulFunctionCall","src":"19548:81:32"},"nodeType":"YulExpressionStatement","src":"19548:81:32"}]},"nodeType":"YulCase","src":"19397:242:32","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18586:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"18594:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18583:2:32"},"nodeType":"YulFunctionCall","src":"18583:14:32"},"nodeType":"YulSwitch","src":"18576:1063:32"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"18255:4:32","type":""},{"name":"src","nodeType":"YulTypedName","src":"18261:3:32","type":""}],"src":"18174:1471:32"},{"body":{"nodeType":"YulBlock","src":"19682:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19699:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19702:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19692:6:32"},"nodeType":"YulFunctionCall","src":"19692:88:32"},"nodeType":"YulExpressionStatement","src":"19692:88:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19796:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19799:4:32","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:32"},"nodeType":"YulFunctionCall","src":"19789:15:32"},"nodeType":"YulExpressionStatement","src":"19789:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19820:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19823:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19813:6:32"},"nodeType":"YulFunctionCall","src":"19813:15:32"},"nodeType":"YulExpressionStatement","src":"19813:15:32"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"19650:184:32"},{"body":{"nodeType":"YulBlock","src":"19885:228:32","statements":[{"body":{"nodeType":"YulBlock","src":"19916:168:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19937:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19940:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19930:6:32"},"nodeType":"YulFunctionCall","src":"19930:88:32"},"nodeType":"YulExpressionStatement","src":"19930:88:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20038:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20041:4:32","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20031:6:32"},"nodeType":"YulFunctionCall","src":"20031:15:32"},"nodeType":"YulExpressionStatement","src":"20031:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20066:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20069:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20059:6:32"},"nodeType":"YulFunctionCall","src":"20059:15:32"},"nodeType":"YulExpressionStatement","src":"20059:15:32"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19905:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19898:6:32"},"nodeType":"YulFunctionCall","src":"19898:9:32"},"nodeType":"YulIf","src":"19895:189:32"},{"nodeType":"YulAssignment","src":"20093:14:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20102:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"20105:1:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"20098:3:32"},"nodeType":"YulFunctionCall","src":"20098:9:32"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"20093:1:32"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19870:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"19873:1:32","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"19879:1:32","type":""}],"src":"19839:274:32"},{"body":{"nodeType":"YulBlock","src":"20167:171:32","statements":[{"nodeType":"YulVariableDeclaration","src":"20177:64:32","value":{"kind":"number","nodeType":"YulLiteral","src":"20187:54:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"20181:2:32","type":""}]},{"nodeType":"YulAssignment","src":"20250:35:32","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20266:1:32"},{"name":"_1","nodeType":"YulIdentifier","src":"20269:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20262:3:32"},"nodeType":"YulFunctionCall","src":"20262:10:32"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20278:1:32"},{"name":"_1","nodeType":"YulIdentifier","src":"20281:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20274:3:32"},"nodeType":"YulFunctionCall","src":"20274:10:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20258:3:32"},"nodeType":"YulFunctionCall","src":"20258:27:32"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"20250:4:32"}]},{"body":{"nodeType":"YulBlock","src":"20310:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20312:16:32"},"nodeType":"YulFunctionCall","src":"20312:18:32"},"nodeType":"YulExpressionStatement","src":"20312:18:32"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"20300:4:32"},{"name":"_1","nodeType":"YulIdentifier","src":"20306:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20297:2:32"},"nodeType":"YulFunctionCall","src":"20297:12:32"},"nodeType":"YulIf","src":"20294:38:32"}]},"name":"checked_sub_t_uint208","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20149:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"20152:1:32","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"20158:4:32","type":""}],"src":"20118:220:32"},{"body":{"nodeType":"YulBlock","src":"20480:130:32","statements":[{"nodeType":"YulAssignment","src":"20490:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20502:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20513:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20498:3:32"},"nodeType":"YulFunctionCall","src":"20498:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20490:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20532:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20547:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"20555:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20543:3:32"},"nodeType":"YulFunctionCall","src":"20543:17:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20525:6:32"},"nodeType":"YulFunctionCall","src":"20525:36:32"},"nodeType":"YulExpressionStatement","src":"20525:36:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20581:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20592:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20577:3:32"},"nodeType":"YulFunctionCall","src":"20577:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"20597:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20570:6:32"},"nodeType":"YulFunctionCall","src":"20570:34:32"},"nodeType":"YulExpressionStatement","src":"20570:34:32"}]},"name":"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20441:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20452:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20460:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20471:4:32","type":""}],"src":"20343:267:32"},{"body":{"nodeType":"YulBlock","src":"20663:169:32","statements":[{"nodeType":"YulVariableDeclaration","src":"20673:64:32","value":{"kind":"number","nodeType":"YulLiteral","src":"20683:54:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"20677:2:32","type":""}]},{"nodeType":"YulAssignment","src":"20746:34:32","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20761:1:32"},{"name":"_1","nodeType":"YulIdentifier","src":"20764:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20757:3:32"},"nodeType":"YulFunctionCall","src":"20757:10:32"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20773:1:32"},{"name":"_1","nodeType":"YulIdentifier","src":"20776:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20769:3:32"},"nodeType":"YulFunctionCall","src":"20769:10:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20753:3:32"},"nodeType":"YulFunctionCall","src":"20753:27:32"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"20746:3:32"}]},{"body":{"nodeType":"YulBlock","src":"20804:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20806:16:32"},"nodeType":"YulFunctionCall","src":"20806:18:32"},"nodeType":"YulExpressionStatement","src":"20806:18:32"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"20795:3:32"},{"name":"_1","nodeType":"YulIdentifier","src":"20800:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20792:2:32"},"nodeType":"YulFunctionCall","src":"20792:11:32"},"nodeType":"YulIf","src":"20789:37:32"}]},"name":"checked_add_t_uint208","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20646:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"20649:1:32","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"20655:3:32","type":""}],"src":"20615:217:32"}]},"contents":"{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_contract$_IERC3156FlashBorrower_$3186t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xff00000000000000000000000000000000000000000000000000000000000000))\n        let _1 := 32\n        mstore(add(headStart, _1), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, _1)\n        let srcPtr := add(value6, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffff))\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_uint8(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_uint8(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xffffffff))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_struct$_Checkpoint208_$7683_memory_ptr__to_t_struct$_Checkpoint208_$7683_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(mload(value0), 0xffffffffffff))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), 0xffffffffffffffffffffffffffffffffffffffffffffffffffff))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), value5)\n        calldatacopy(add(headStart, 192), value4, value5)\n        mstore(add(add(headStart, value5), 192), 0)\n        tail := add(add(headStart, and(add(value5, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 192)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"EIP712: Uninitialized\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint208(x, y) -> diff\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffff\n        diff := sub(and(x, _1), and(y, _1))\n        if gt(diff, _1) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint208(x, y) -> sum\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffff\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1) { panic_error_0x11() }\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061025c5760003560e01c8063715018a6116101455780639ab24eb0116100bd578063d505accf1161008c578063dd62ed3e11610071578063dd62ed3e1461059d578063f1127ed814610602578063f2fde38b1461065457600080fd5b8063d505accf14610577578063d9d98ce41461058a57600080fd5b80639ab24eb01461052b578063a9059cbb1461053e578063c3cda52014610551578063c4d66de81461056457600080fd5b806384b0196e116101145780638e539e8c116100f95780638e539e8c146104f157806391ddadf41461050457806395d89b411461052357600080fd5b806384b0196e146104995780638da5cb5b146104b457600080fd5b8063715018a61461046357806379cc67901461046b5780637ecebe001461047e5780638456cb591461049157600080fd5b806342966c68116101d85780635c975abb116101a7578063613255ab1161018c578063613255ab146104155780636fcfff451461042857806370a082311461045057600080fd5b80635c975abb146103d85780635cffe9de1461040257600080fd5b806342966c681461032d5780634bf5d7e914610340578063587cde1e146103485780635c19a95c146103c557600080fd5b8063313ce5671161022f5780633a46b1a8116102145780633a46b1a8146102fd5780633f4ba83a1461031057806340c10f191461031a57600080fd5b8063313ce567146102e65780633644e515146102f557600080fd5b806306fdde0314610261578063095ea7b31461027f57806318160ddd146102a257806323b872dd146102d3575b600080fd5b610269610667565b60405161027691906131fe565b60405180910390f35b61029261028d366004613233565b610722565b6040519015158152602001610276565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b604051908152602001610276565b6102926102e136600461325f565b61073c565b60405160128152602001610276565b6102c5610760565b6102c561030b366004613233565b61076f565b610318610852565b005b610318610328366004613233565b610864565b61031861033b3660046132a0565b61087a565b610269610887565b6103a06103563660046132b9565b73ffffffffffffffffffffffffffffffffffffffff90811660009081527fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0060205260409020541690565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610276565b6103186103d33660046132b9565b610918565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff16610292565b6102926104103660046132d6565b610923565b6102c56104233660046132b9565b610b0e565b61043b6104363660046132b9565b610b80565b60405163ffffffff9091168152602001610276565b6102c561045e3660046132b9565b610b8b565b610318610bdd565b610318610479366004613233565b610bef565b6102c561048c3660046132b9565b610c04565b610318610c0f565b6104a1610c1f565b6040516102769796959493929190613375565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005473ffffffffffffffffffffffffffffffffffffffff166103a0565b6102c56104ff3660046132a0565b610d1b565b61050c610dd5565b60405165ffffffffffff9091168152602001610276565b610269610ddf565b6102c56105393660046132b9565b610e30565b61029261054c366004613233565b610ec2565b61031861055f36600461344a565b610ed0565b6103186105723660046132b9565b610fb3565b6103186105853660046134a4565b611228565b6102c5610598366004613233565b6113f4565b6102c56105ab366004613512565b73ffffffffffffffffffffffffffffffffffffffff91821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b61061561061036600461354b565b611467565b60408051825165ffffffffffff16815260209283015179ffffffffffffffffffffffffffffffffffffffffffffffffffff169281019290925201610276565b6103186106623660046132b9565b611485565b606060007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace005b905080600301805461069e90613582565b80601f01602080910402602001604051908101604052809291908181526020018280546106ca90613582565b80156107175780601f106106ec57610100808354040283529160200191610717565b820191906000526020600020905b8154815290600101906020018083116106fa57829003601f168201915b505050505091505090565b6000336107308185856114e6565b60019150505b92915050565b60003361074a8582856114f8565b6107558585856115e6565b506001949350505050565b600061076a611691565b905090565b60007fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d008161079b610dd5565b90508065ffffffffffff1684106107f4576040517fecd3f81e0000000000000000000000000000000000000000000000000000000081526004810185905265ffffffffffff821660248201526044015b60405180910390fd5b61082d6108008561169b565b73ffffffffffffffffffffffffffffffffffffffff871660009081526001850160205260409020906116eb565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff1695945050505050565b61085a6117b7565b610862611845565b565b61086c6117b7565b61087682826118e2565b5050565b610884338261193e565b50565b606061089161199a565b65ffffffffffff166108a1610dd5565b65ffffffffffff16146108e0576040517f6ff0714000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b3361087681836119a5565b60008061092f86610b0e565b90508085111561096e576040517ffd9a7609000000000000000000000000000000000000000000000000000000008152600481018290526024016107eb565b600061097a87876113f4565b905061098688876118e2565b6040517f23e30c8b0000000000000000000000000000000000000000000000000000000081527f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99073ffffffffffffffffffffffffffffffffffffffff8a16906323e30c8b90610a049033908c908c9088908d908d906004016135d5565b6020604051808303816000875af1158015610a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a47919061365b565b14610a96576040517f678c5b0000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff891660048201526024016107eb565b6000610aac8930610aa7858b6136a3565b6114f8565b811580610acd575073ffffffffffffffffffffffffffffffffffffffff8116155b15610aea57610ae589610ae0848a6136a3565b61193e565b610aff565b610af4898861193e565b610aff8982846115e6565b50600198975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82163014610b34576000610736565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0254610736907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6136b6565b600061073682611aab565b6000807f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace005b73ffffffffffffffffffffffffffffffffffffffff90931660009081526020939093525050604090205490565b610be56117b7565b6108626000611b1b565b610bfa8233836114f8565b610876828261193e565b600061073682611bb1565b610c176117b7565b610862611bbc565b600060608082808083817fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1008054909150158015610c5e57506001810154155b610cc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4549503731323a20556e696e697469616c697a6564000000000000000000000060448201526064016107eb565b610ccc611c35565b610cd4611c86565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009c939b5091995046985030975095509350915050565b60007fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0081610d47610dd5565b90508065ffffffffffff168410610d9b576040517fecd3f81e0000000000000000000000000000000000000000000000000000000081526004810185905265ffffffffffff821660248201526044016107eb565b610db1610da78561169b565b60028401906116eb565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16949350505050565b600061076a61199a565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060917f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace009161069e90613582565b73ffffffffffffffffffffffffffffffffffffffff811660009081527fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d01602052604081207fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0090610e9f90611cb0565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff169392505050565b6000336107308185856115e6565b83421115610f0d576040517f4683af0e000000000000000000000000000000000000000000000000000000008152600481018590526024016107eb565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf602082015273ffffffffffffffffffffffffffffffffffffffff8816918101919091526060810186905260808101859052600090610f9490610f8c9060a00160405160208183030381529060405280519060200120611cf6565b858585611d3e565b9050610fa08187611d6c565b610faa81886119a5565b50505050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610ffe5750825b905060008267ffffffffffffffff16600114801561101b5750303b155b905081158015611029575080155b15611060576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000016600117855583156110c15784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b6111356040518060400160405280600381526020017f57415900000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f5741590000000000000000000000000000000000000000000000000000000000815250611e11565b61113d611e23565b611145611e2b565b61114e86611e3b565b61118c6040518060400160405280600381526020017f5741590000000000000000000000000000000000000000000000000000000000815250611e4c565b611194611e23565b61119c611e23565b6111bf336111ac6012600a613818565b6111ba9063202fbf00613827565b6118e2565b83156112205784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b83421115611265576040517f62791302000000000000000000000000000000000000000000000000000000008152600481018590526024016107eb565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886112de8c73ffffffffffffffffffffffffffffffffffffffff1660009081527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006020526040902080546001810190915590565b60408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061134682611cf6565b9050600061135682878787611d3e565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113dd576040517f4b800e4600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301528b1660248201526044016107eb565b6113e88a8a8a6114e6565b50505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff8316301461145d576040517fb5a7db9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024016107eb565b60005b9392505050565b60408051808201909152600080825260208201526114608383611e93565b61148d6117b7565b73ffffffffffffffffffffffffffffffffffffffff81166114dd576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016107eb565b61088481611b1b565b6114f38383836001611f1d565b505050565b73ffffffffffffffffffffffffffffffffffffffff83811660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146115e057818110156115d1576040517ffb8f41b200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101829052604481018390526064016107eb565b6115e084848484036000611f1d565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316611636576040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600060048201526024016107eb565b73ffffffffffffffffffffffffffffffffffffffff8216611686576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016107eb565b6114f383838361208a565b600061076a612095565b600065ffffffffffff8211156116e7576040517f6dfcc65000000000000000000000000000000000000000000000000000000000815260306004820152602481018390526044016107eb565b5090565b81546000908181600581111561174a57600061170684612109565b61171090856136b6565b60008881526020902090915081015465ffffffffffff908116908716101561173a57809150611748565b6117458160016136a3565b92505b505b6000611758878785856121f1565b905080156117a95761177d8761176f6001846136b6565b600091825260209091200190565b546601000000000000900479ffffffffffffffffffffffffffffffffffffffffffffffffffff166117ac565b60005b979650505050505050565b336117f67f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610862576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016107eb565b61184d612253565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f0330080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a150565b73ffffffffffffffffffffffffffffffffffffffff8216611932576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016107eb565b6108766000838361208a565b73ffffffffffffffffffffffffffffffffffffffff821661198e576040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600060048201526024016107eb565b6108768260008361208a565b600061076a4361169b565b7fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d006000611a168473ffffffffffffffffffffffffffffffffffffffff90811660009081527fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0060205260409020541690565b73ffffffffffffffffffffffffffffffffffffffff85811660008181526020869052604080822080547fffffffffffffffffffffffff000000000000000000000000000000000000000016898616908117909155905194955093928516927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46115e08184611aa6876122ae565b6122b9565b73ffffffffffffffffffffffffffffffffffffffff811660009081527fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0160205260408120547fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0090611460906124ec565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080547fffffffffffffffffffffffff0000000000000000000000000000000000000000811673ffffffffffffffffffffffffffffffffffffffff848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b600061073682612536565b611bc461255f565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f0330080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336118b7565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10280546060917fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1009161069e90613582565b606060007fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10061068d565b8054600090801561145d57611cca8361176f6001846136b6565b546601000000000000900479ffffffffffffffffffffffffffffffffffffffffffffffffffff16611460565b6000610736611d03611691565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b600080600080611d50888888886125bb565b925092509250611d6082826126b5565b50909695505050505050565b73ffffffffffffffffffffffffffffffffffffffff821660009081527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00602052604090208054600181019091558181146114f3576040517f752d88c000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602481018290526044016107eb565b611e196127b9565b6108768282612820565b6108626127b9565b611e336127b9565b610862612883565b611e436127b9565b610884816128d4565b611e546127b9565b610884816040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152506128dc565b6040805180820182526000808252602080830182905273ffffffffffffffffffffffffffffffffffffffff861682527fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d019052919091207fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0090611f15908461294f565b949350505050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0073ffffffffffffffffffffffffffffffffffffffff8516611f8e576040517fe602df05000000000000000000000000000000000000000000000000000000008152600060048201526024016107eb565b73ffffffffffffffffffffffffffffffffffffffff8416611fde576040517f94280d62000000000000000000000000000000000000000000000000000000008152600060048201526024016107eb565b73ffffffffffffffffffffffffffffffffffffffff808616600090815260018301602090815260408083209388168352929052208390558115612083578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161207a91815260200190565b60405180910390a35b5050505050565b6114f38383836129d5565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6120c0612a94565b6120c8612b10565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60008160000361211b57506000919050565b6000600161212884612b66565b901c6001901b905060018184816121415761214161383e565b048201901c905060018184816121595761215961383e565b048201901c905060018184816121715761217161383e565b048201901c905060018184816121895761218961383e565b048201901c905060018184816121a1576121a161383e565b048201901c905060018184816121b9576121b961383e565b048201901c905060018184816121d1576121d161383e565b048201901c9050611460818285816121eb576121eb61383e565b04612bfa565b60005b8183101561224b5760006122088484612c10565b60008781526020902090915065ffffffffffff86169082015465ffffffffffff16111561223757809250612245565b6122428160016136a3565b93505b506121f4565b509392505050565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff16610862576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061073682610b8b565b7fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0073ffffffffffffffffffffffffffffffffffffffff848116908416148015906123035750600082115b156115e05773ffffffffffffffffffffffffffffffffffffffff8416156123fa5773ffffffffffffffffffffffffffffffffffffffff841660009081526001820160205260408120819061236290612c2b61235d87612c37565b612c97565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16915079ffffffffffffffffffffffffffffffffffffffffffffffffffff1691508573ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516123ef929190918252602082015260400190565b60405180910390a250505b73ffffffffffffffffffffffffffffffffffffffff8316156115e05773ffffffffffffffffffffffffffffffffffffffff831660009081526001820160205260408120819061244f90612cd061235d87612c37565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16915079ffffffffffffffffffffffffffffffffffffffffffffffffffff1691508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516124dc929190918252602082015260400190565b60405180910390a2505050505050565b600063ffffffff8211156116e7576040517f6dfcc65000000000000000000000000000000000000000000000000000000000815260206004820152602481018390526044016107eb565b6000807f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00610bb0565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff1615610862576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156125f657506000915060039050826126ab565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561264a573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166126a1575060009250600191508290506126ab565b9250600091508190505b9450945094915050565b60008260038111156126c9576126c961386d565b036126d2575050565b60018260038111156126e6576126e661386d565b0361271d576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028260038111156127315761273161386d565b0361276b576040517ffce698f7000000000000000000000000000000000000000000000000000000008152600481018290526024016107eb565b600382600381111561277f5761277f61386d565b03610876576040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600481018290526024016107eb565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610862576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6128286127b9565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0361287484826138e2565b50600481016115e083826138e2565b61288b6127b9565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f0330080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b61148d6127b9565b6128e46127b9565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1007fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10261293084826138e2565b506003810161293f83826138e2565b5060008082556001909101555050565b6040805180820190915260008082526020820152826000018263ffffffff168154811061297e5761297e6139fc565b60009182526020918290206040805180820190915291015465ffffffffffff811682526601000000000000900479ffffffffffffffffffffffffffffffffffffffffffffffffffff16918101919091529392505050565b6129e0838383612cdc565b73ffffffffffffffffffffffffffffffffffffffff8316612a89576000612a257f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b905079ffffffffffffffffffffffffffffffffffffffffffffffffffff80821115612a86576040517f1cb15d2600000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016107eb565b50505b6114f3838383612cef565b60007fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10081612ac0611c35565b805190915015612ad857805160209091012092915050565b81548015612ae7579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b60007fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10081612b3c611c86565b805190915015612b5457805160209091012092915050565b60018201548015612ae7579392505050565b600080608083901c15612b7b57608092831c92015b604083901c15612b8d57604092831c92015b602083901c15612b9f57602092831c92015b601083901c15612bb157601092831c92015b600883901c15612bc357600892831c92015b600483901c15612bd557600492831c92015b600283901c15612be757600292831c92015b600183901c156107365760010192915050565b6000818310612c095781611460565b5090919050565b6000612c1f6002848418613a2b565b611460908484166136a3565b60006114608284613a66565b600079ffffffffffffffffffffffffffffffffffffffffffffffffffff8211156116e7576040517f6dfcc65000000000000000000000000000000000000000000000000000000000815260d06004820152602481018390526044016107eb565b600080612cc3612ca5610dd5565b612cbb612cb188611cb0565b868863ffffffff16565b879190612dd0565b915091505b935093915050565b60006114608284613aa0565b612ce461255f565b6114f3838383612dde565b7fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0073ffffffffffffffffffffffffffffffffffffffff8416612d4157612d3e81600201612cd061235d85612c37565b50505b73ffffffffffffffffffffffffffffffffffffffff8316612d7257612d6f81600201612c2b61235d85612c37565b50505b73ffffffffffffffffffffffffffffffffffffffff84811660009081527fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0060205260408082205486841683529120546115e0929182169116846122b9565b600080612cc3858585612faf565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0073ffffffffffffffffffffffffffffffffffffffff8416612e395781816002016000828254612e2e91906136a3565b90915550612eeb9050565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020829052604090205482811015612ebf576040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616600482015260248101829052604481018490526064016107eb565b73ffffffffffffffffffffffffffffffffffffffff851660009081526020839052604090209083900390555b73ffffffffffffffffffffffffffffffffffffffff8316612f16576002810180548390039055612f42565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020829052604090208054830190555b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051612fa191815260200190565b60405180910390a350505050565b825460009081908015613129576000612fcd8761176f6001856136b6565b60408051808201909152905465ffffffffffff808216808452660100000000000090920479ffffffffffffffffffffffffffffffffffffffffffffffffffff1660208401529192509087161015613050576040517f2520601d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805165ffffffffffff8088169116036130b257846130738861176f6001866136b6565b805479ffffffffffffffffffffffffffffffffffffffffffffffffffff9290921666010000000000000265ffffffffffff909216919091179055613119565b6040805180820190915265ffffffffffff808816825279ffffffffffffffffffffffffffffffffffffffffffffffffffff80881660208085019182528b54600181018d5560008d815291909120945191519092166601000000000000029216919091179101555b602001519250839150612cc89050565b50506040805180820190915265ffffffffffff808516825279ffffffffffffffffffffffffffffffffffffffffffffffffffff80851660208085019182528854600181018a5560008a8152918220955192519093166601000000000000029190931617920191909155905081612cc8565b6000815180845260005b818110156131c0576020818501810151868301820152016131a4565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081526000611460602083018461319a565b73ffffffffffffffffffffffffffffffffffffffff8116811461088457600080fd5b6000806040838503121561324657600080fd5b823561325181613211565b946020939093013593505050565b60008060006060848603121561327457600080fd5b833561327f81613211565b9250602084013561328f81613211565b929592945050506040919091013590565b6000602082840312156132b257600080fd5b5035919050565b6000602082840312156132cb57600080fd5b813561146081613211565b6000806000806000608086880312156132ee57600080fd5b85356132f981613211565b9450602086013561330981613211565b935060408601359250606086013567ffffffffffffffff8082111561332d57600080fd5b818801915088601f83011261334157600080fd5b81358181111561335057600080fd5b89602082850101111561336257600080fd5b9699959850939650602001949392505050565b7fff00000000000000000000000000000000000000000000000000000000000000881681526000602060e0818401526133b160e084018a61319a565b83810360408501526133c3818a61319a565b6060850189905273ffffffffffffffffffffffffffffffffffffffff8816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561342257835183529284019291840191600101613406565b50909c9b505050505050505050505050565b803560ff8116811461344557600080fd5b919050565b60008060008060008060c0878903121561346357600080fd5b863561346e81613211565b9550602087013594506040870135935061348a60608801613434565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a0312156134bf57600080fd5b87356134ca81613211565b965060208801356134da81613211565b955060408801359450606088013593506134f660808901613434565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561352557600080fd5b823561353081613211565b9150602083013561354081613211565b809150509250929050565b6000806040838503121561355e57600080fd5b823561356981613211565b9150602083013563ffffffff8116811461354057600080fd5b600181811c9082168061359657607f821691505b6020821081036135cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600073ffffffffffffffffffffffffffffffffffffffff808916835280881660208401525085604083015284606083015260a060808301528260a0830152828460c0840137600060c0848401015260c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501168301019050979650505050505050565b60006020828403121561366d57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561073657610736613674565b8181038181111561073657610736613674565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600181815b8085111561375157817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561373757613737613674565b8085161561374457918102915b93841c93908002906136fd565b509250929050565b60008261376857506001610736565b8161377557506000610736565b816001811461378b5760028114613795576137b1565b6001915050610736565b60ff8411156137a6576137a6613674565b50506001821b610736565b5060208310610133831016604e8410600b84101617156137d4575081810a610736565b6137de83836136f8565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561381057613810613674565b029392505050565b600061146060ff841683613759565b808202811582820484141761073657610736613674565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b601f8211156114f357600081815260208120601f850160051c810160208610156138c35750805b601f850160051c820191505b81811015611220578281556001016138cf565b815167ffffffffffffffff8111156138fc576138fc6136c9565b6139108161390a8454613582565b8461389c565b602080601f831160018114613963576000841561392d5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611220565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156139b057888601518255948401946001909101908401613991565b50858210156139ec57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082613a61577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff828116828216039080821115613a9957613a99613674565b5092915050565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff818116838216019080821115613a9957613a9961367456fea26469706673582212204bd4b855c8044cd4f63d732c44ac1d7ef95d4f026de0182d4d1cb3fe417f023b64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xD9D98CE4 EQ PUSH2 0x58A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x551 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84B0196E GT PUSH2 0x114 JUMPI DUP1 PUSH4 0x8E539E8C GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84B0196E EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x613255AB GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x613255AB EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x5CFFE9DE EQ PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x22F JUMPI DUP1 PUSH4 0x3A46B1A8 GT PUSH2 0x214 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x269 PUSH2 0x667 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x31FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x3233 JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x276 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x276 JUMP JUMPDEST PUSH2 0x292 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x325F JUMP JUMPDEST PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x276 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x760 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x3233 JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST PUSH2 0x318 PUSH2 0x852 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x318 PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0x3233 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH2 0x318 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x32A0 JUMP JUMPDEST PUSH2 0x87A JUMP JUMPDEST PUSH2 0x269 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x3A0 PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x276 JUMP JUMPDEST PUSH2 0x318 PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND PUSH2 0x292 JUMP JUMPDEST PUSH2 0x292 PUSH2 0x410 CALLDATASIZE PUSH1 0x4 PUSH2 0x32D6 JUMP JUMPDEST PUSH2 0x923 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x423 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0x43B PUSH2 0x436 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x276 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x45E CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x318 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x318 PUSH2 0x479 CALLDATASIZE PUSH1 0x4 PUSH2 0x3233 JUMP JUMPDEST PUSH2 0xBEF JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x48C CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x318 PUSH2 0xC0F JUMP JUMPDEST PUSH2 0x4A1 PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3375 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x4FF CALLDATASIZE PUSH1 0x4 PUSH2 0x32A0 JUMP JUMPDEST PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x50C PUSH2 0xDD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x276 JUMP JUMPDEST PUSH2 0x269 PUSH2 0xDDF JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x539 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0xE30 JUMP JUMPDEST PUSH2 0x292 PUSH2 0x54C CALLDATASIZE PUSH1 0x4 PUSH2 0x3233 JUMP JUMPDEST PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x318 PUSH2 0x55F CALLDATASIZE PUSH1 0x4 PUSH2 0x344A JUMP JUMPDEST PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x318 PUSH2 0x572 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0xFB3 JUMP JUMPDEST PUSH2 0x318 PUSH2 0x585 CALLDATASIZE PUSH1 0x4 PUSH2 0x34A4 JUMP JUMPDEST PUSH2 0x1228 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x598 CALLDATASIZE PUSH1 0x4 PUSH2 0x3233 JUMP JUMPDEST PUSH2 0x13F4 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x5AB CALLDATASIZE PUSH1 0x4 PUSH2 0x3512 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x615 PUSH2 0x610 CALLDATASIZE PUSH1 0x4 PUSH2 0x354B JUMP JUMPDEST PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x276 JUMP JUMPDEST PUSH2 0x318 PUSH2 0x662 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B9 JUMP JUMPDEST PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x69E SWAP1 PUSH2 0x3582 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6CA SWAP1 PUSH2 0x3582 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x717 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x717 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6FA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x730 DUP2 DUP6 DUP6 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x74A DUP6 DUP3 DUP6 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x755 DUP6 DUP6 DUP6 PUSH2 0x15E6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76A PUSH2 0x1691 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 DUP2 PUSH2 0x79B PUSH2 0xDD5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP5 LT PUSH2 0x7F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH6 0xFFFFFFFFFFFF DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x82D PUSH2 0x800 DUP6 PUSH2 0x169B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 PUSH2 0x16EB JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x85A PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x862 PUSH2 0x1845 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x86C PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x876 DUP3 DUP3 PUSH2 0x18E2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x884 CALLER DUP3 PUSH2 0x193E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x891 PUSH2 0x199A JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x8A1 PUSH2 0xDD5 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6FF0714000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST CALLER PUSH2 0x876 DUP2 DUP4 PUSH2 0x19A5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x92F DUP7 PUSH2 0xB0E JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x96E JUMPI PUSH1 0x40 MLOAD PUSH32 0xFD9A760900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97A DUP8 DUP8 PUSH2 0x13F4 JUMP JUMPDEST SWAP1 POP PUSH2 0x986 DUP9 DUP8 PUSH2 0x18E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23E30C8B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND SWAP1 PUSH4 0x23E30C8B SWAP1 PUSH2 0xA04 SWAP1 CALLER SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP9 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x35D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA47 SWAP2 SWAP1 PUSH2 0x365B JUMP JUMPDEST EQ PUSH2 0xA96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x678C5B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAC DUP10 ADDRESS PUSH2 0xAA7 DUP6 DUP12 PUSH2 0x36A3 JUMP JUMPDEST PUSH2 0x14F8 JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0xACD JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0xAEA JUMPI PUSH2 0xAE5 DUP10 PUSH2 0xAE0 DUP5 DUP11 PUSH2 0x36A3 JUMP JUMPDEST PUSH2 0x193E JUMP JUMPDEST PUSH2 0xAFF JUMP JUMPDEST PUSH2 0xAF4 DUP10 DUP9 PUSH2 0x193E JUMP JUMPDEST PUSH2 0xAFF DUP10 DUP3 DUP5 PUSH2 0x15E6 JUMP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ADDRESS EQ PUSH2 0xB34 JUMPI PUSH1 0x0 PUSH2 0x736 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH2 0x736 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x36B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP3 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBE5 PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x862 PUSH1 0x0 PUSH2 0x1B1B JUMP JUMPDEST PUSH2 0xBFA DUP3 CALLER DUP4 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x876 DUP3 DUP3 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP3 PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0xC17 PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x862 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP3 DUP1 DUP1 DUP4 DUP2 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 DUP1 SLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO PUSH2 0xC5E JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD ISZERO JUMPDEST PUSH2 0xCC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4549503731323A20556E696E697469616C697A65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0xCCC PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0xCD4 PUSH2 0x1C86 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP13 SWAP4 SWAP12 POP SWAP2 SWAP10 POP CHAINID SWAP9 POP ADDRESS SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 DUP2 PUSH2 0xD47 PUSH2 0xDD5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP5 LT PUSH2 0xD9B JUMPI PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH6 0xFFFFFFFFFFFF DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0xDB1 PUSH2 0xDA7 DUP6 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SWAP1 PUSH2 0x16EB JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76A PUSH2 0x199A JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP2 PUSH2 0x69E SWAP1 PUSH2 0x3582 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 SWAP1 PUSH2 0xE9F SWAP1 PUSH2 0x1CB0 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x730 DUP2 DUP6 DUP6 PUSH2 0x15E6 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x4683AF0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xF94 SWAP1 PUSH2 0xF8C SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1CF6 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP PUSH2 0xFA0 DUP2 DUP8 PUSH2 0x1D6C JUMP JUMPDEST PUSH2 0xFAA DUP2 DUP9 PUSH2 0x19A5 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xFFE JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x101B JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1029 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1060 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x10C1 JUMPI DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 OR DUP6 SSTORE JUMPDEST PUSH2 0x1135 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5741590000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5741590000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1E11 JUMP JUMPDEST PUSH2 0x113D PUSH2 0x1E23 JUMP JUMPDEST PUSH2 0x1145 PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x114E DUP7 PUSH2 0x1E3B JUMP JUMPDEST PUSH2 0x118C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5741590000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1E4C JUMP JUMPDEST PUSH2 0x1194 PUSH2 0x1E23 JUMP JUMPDEST PUSH2 0x119C PUSH2 0x1E23 JUMP JUMPDEST PUSH2 0x11BF CALLER PUSH2 0x11AC PUSH1 0x12 PUSH1 0xA PUSH2 0x3818 JUMP JUMPDEST PUSH2 0x11BA SWAP1 PUSH4 0x202FBF00 PUSH2 0x3827 JUMP JUMPDEST PUSH2 0x18E2 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1220 JUMPI DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1265 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x12DE DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1346 DUP3 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1356 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x13E8 DUP11 DUP11 DUP11 PUSH2 0x14E6 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ADDRESS EQ PUSH2 0x145D JUMPI PUSH1 0x40 MLOAD PUSH32 0xB5A7DB9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1460 DUP4 DUP4 PUSH2 0x1E93 JUMP JUMPDEST PUSH2 0x148D PUSH2 0x17B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x14DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x884 DUP2 PUSH2 0x1B1B JUMP JUMPDEST PUSH2 0x14F3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1F1D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x15E0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x15D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x15E0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1F1D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x1636 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1686 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x14F3 DUP4 DUP4 DUP4 PUSH2 0x208A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76A PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x30 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7EB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x174A JUMPI PUSH1 0x0 PUSH2 0x1706 DUP5 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x1710 SWAP1 DUP6 PUSH2 0x36B6 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP2 ADD SLOAD PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP8 AND LT ISZERO PUSH2 0x173A JUMPI DUP1 SWAP2 POP PUSH2 0x1748 JUMP JUMPDEST PUSH2 0x1745 DUP2 PUSH1 0x1 PUSH2 0x36A3 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x1758 DUP8 DUP8 DUP6 DUP6 PUSH2 0x21F1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x17A9 JUMPI PUSH2 0x177D DUP8 PUSH2 0x176F PUSH1 0x1 DUP5 PUSH2 0x36B6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SWAP1 JUMP JUMPDEST SLOAD PUSH7 0x1000000000000 SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x17F6 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x184D PUSH2 0x2253 JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1932 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x876 PUSH1 0x0 DUP4 DUP4 PUSH2 0x208A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x198E JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x876 DUP3 PUSH1 0x0 DUP4 PUSH2 0x208A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76A NUMBER PUSH2 0x169B JUMP JUMPDEST PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 PUSH1 0x0 PUSH2 0x1A16 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP7 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP10 DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP5 SWAP6 POP SWAP4 SWAP3 DUP6 AND SWAP3 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x15E0 DUP2 DUP5 PUSH2 0x1AA6 DUP8 PUSH2 0x22AE JUMP JUMPDEST PUSH2 0x22B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 SWAP1 PUSH2 0x1460 SWAP1 PUSH2 0x24EC JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP3 PUSH2 0x2536 JUMP JUMPDEST PUSH2 0x1BC4 PUSH2 0x255F JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x18B7 JUMP JUMPDEST PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D102 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SWAP2 PUSH2 0x69E SWAP1 PUSH2 0x3582 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 PUSH2 0x68D JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 DUP1 ISZERO PUSH2 0x145D JUMPI PUSH2 0x1CCA DUP4 PUSH2 0x176F PUSH1 0x1 DUP5 PUSH2 0x36B6 JUMP JUMPDEST SLOAD PUSH7 0x1000000000000 SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 PUSH2 0x1D03 PUSH2 0x1691 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1D50 DUP9 DUP9 DUP9 DUP9 PUSH2 0x25BB JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1D60 DUP3 DUP3 PUSH2 0x26B5 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP2 DUP2 EQ PUSH2 0x14F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x752D88C000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x1E19 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x876 DUP3 DUP3 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x862 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x1E33 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x862 PUSH2 0x2883 JUMP JUMPDEST PUSH2 0x1E43 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x884 DUP2 PUSH2 0x28D4 JUMP JUMPDEST PUSH2 0x1E54 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x884 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x28DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP3 MSTORE PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D01 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 SWAP1 PUSH2 0x1F15 SWAP1 DUP5 PUSH2 0x294F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x1F8E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x1FDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x2083 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x207A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14F3 DUP4 DUP4 DUP4 PUSH2 0x29D5 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x20C0 PUSH2 0x2A94 JUMP JUMPDEST PUSH2 0x20C8 PUSH2 0x2B10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0x211B JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2128 DUP5 PUSH2 0x2B66 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2141 JUMPI PUSH2 0x2141 PUSH2 0x383E JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2159 JUMPI PUSH2 0x2159 PUSH2 0x383E JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2171 JUMPI PUSH2 0x2171 PUSH2 0x383E JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2189 JUMPI PUSH2 0x2189 PUSH2 0x383E JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x21A1 JUMPI PUSH2 0x21A1 PUSH2 0x383E JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x21B9 JUMPI PUSH2 0x21B9 PUSH2 0x383E JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x21D1 JUMPI PUSH2 0x21D1 PUSH2 0x383E JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1460 DUP2 DUP3 DUP6 DUP2 PUSH2 0x21EB JUMPI PUSH2 0x21EB PUSH2 0x383E JUMP JUMPDEST DIV PUSH2 0x2BFA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x224B JUMPI PUSH1 0x0 PUSH2 0x2208 DUP5 DUP5 PUSH2 0x2C10 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH6 0xFFFFFFFFFFFF DUP7 AND SWAP1 DUP3 ADD SLOAD PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x2237 JUMPI DUP1 SWAP3 POP PUSH2 0x2245 JUMP JUMPDEST PUSH2 0x2242 DUP2 PUSH1 0x1 PUSH2 0x36A3 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x21F4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP3 PUSH2 0xB8B JUMP JUMPDEST PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP1 DUP5 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x2303 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST ISZERO PUSH2 0x15E0 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO PUSH2 0x23FA JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x2362 SWAP1 PUSH2 0x2C2B PUSH2 0x235D DUP8 PUSH2 0x2C37 JUMP JUMPDEST PUSH2 0x2C97 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x23EF SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO PUSH2 0x15E0 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x244F SWAP1 PUSH2 0x2CD0 PUSH2 0x235D DUP8 PUSH2 0x2C37 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x24DC SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x16E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH2 0xBB0 JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x25F6 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x26AB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x264A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x26A1 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x26AB JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x26C9 JUMPI PUSH2 0x26C9 PUSH2 0x386D JUMP JUMPDEST SUB PUSH2 0x26D2 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x26E6 JUMPI PUSH2 0x26E6 PUSH2 0x386D JUMP JUMPDEST SUB PUSH2 0x271D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2731 JUMPI PUSH2 0x2731 PUSH2 0x386D JUMP JUMPDEST SUB PUSH2 0x276B JUMPI PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x277F JUMPI PUSH2 0x277F PUSH2 0x386D JUMP JUMPDEST SUB PUSH2 0x876 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2828 PUSH2 0x27B9 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x2874 DUP5 DUP3 PUSH2 0x38E2 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x15E0 DUP4 DUP3 PUSH2 0x38E2 JUMP JUMPDEST PUSH2 0x288B PUSH2 0x27B9 JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x148D PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x28E4 PUSH2 0x27B9 JUMP JUMPDEST PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D102 PUSH2 0x2930 DUP5 DUP3 PUSH2 0x38E2 JUMP JUMPDEST POP PUSH1 0x3 DUP2 ADD PUSH2 0x293F DUP4 DUP3 PUSH2 0x38E2 JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x0 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x297E JUMPI PUSH2 0x297E PUSH2 0x39FC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP3 MSTORE PUSH7 0x1000000000000 SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x29E0 DUP4 DUP4 DUP4 PUSH2 0x2CDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x2A89 JUMPI PUSH1 0x0 PUSH2 0x2A25 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2A86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1CB15D2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7EB JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x14F3 DUP4 DUP4 DUP4 PUSH2 0x2CEF JUMP JUMPDEST PUSH1 0x0 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 DUP2 PUSH2 0x2AC0 PUSH2 0x1C35 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2AD8 JUMPI DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD DUP1 ISZERO PUSH2 0x2AE7 JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 DUP2 PUSH2 0x2B3C PUSH2 0x1C86 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2B54 JUMPI DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP1 ISZERO PUSH2 0x2AE7 JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 SWAP1 SHR ISZERO PUSH2 0x2B7B JUMPI PUSH1 0x80 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x40 DUP4 SWAP1 SHR ISZERO PUSH2 0x2B8D JUMPI PUSH1 0x40 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x20 DUP4 SWAP1 SHR ISZERO PUSH2 0x2B9F JUMPI PUSH1 0x20 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x10 DUP4 SWAP1 SHR ISZERO PUSH2 0x2BB1 JUMPI PUSH1 0x10 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x8 DUP4 SWAP1 SHR ISZERO PUSH2 0x2BC3 JUMPI PUSH1 0x8 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x4 DUP4 SWAP1 SHR ISZERO PUSH2 0x2BD5 JUMPI PUSH1 0x4 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x2 DUP4 SWAP1 SHR ISZERO PUSH2 0x2BE7 JUMPI PUSH1 0x2 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x1 DUP4 SWAP1 SHR ISZERO PUSH2 0x736 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2C09 JUMPI DUP2 PUSH2 0x1460 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C1F PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x3A2B JUMP JUMPDEST PUSH2 0x1460 SWAP1 DUP5 DUP5 AND PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1460 DUP3 DUP5 PUSH2 0x3A66 JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0xD0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CC3 PUSH2 0x2CA5 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x2CBB PUSH2 0x2CB1 DUP9 PUSH2 0x1CB0 JUMP JUMPDEST DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 SWAP2 SWAP1 PUSH2 0x2DD0 JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1460 DUP3 DUP5 PUSH2 0x3AA0 JUMP JUMPDEST PUSH2 0x2CE4 PUSH2 0x255F JUMP JUMPDEST PUSH2 0x14F3 DUP4 DUP4 DUP4 PUSH2 0x2DDE JUMP JUMPDEST PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x2D41 JUMPI PUSH2 0x2D3E DUP2 PUSH1 0x2 ADD PUSH2 0x2CD0 PUSH2 0x235D DUP6 PUSH2 0x2C37 JUMP JUMPDEST POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x2D72 JUMPI PUSH2 0x2D6F DUP2 PUSH1 0x2 ADD PUSH2 0x2C2B PUSH2 0x235D DUP6 PUSH2 0x2C37 JUMP JUMPDEST POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xE8B26C30FAD74198956032A3533D903385D56DD795AF560196F9C78D4AF40D00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP7 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x15E0 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP5 PUSH2 0x22B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CC3 DUP6 DUP6 DUP6 PUSH2 0x2FAF JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x2E39 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2E2E SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2EEB SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2EBF JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x2F16 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2F42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2FA1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP1 ISZERO PUSH2 0x3129 JUMPI PUSH1 0x0 PUSH2 0x2FCD DUP8 PUSH2 0x176F PUSH1 0x1 DUP6 PUSH2 0x36B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 SLOAD PUSH6 0xFFFFFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH7 0x1000000000000 SWAP1 SWAP3 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP5 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP8 AND LT ISZERO PUSH2 0x3050 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2520601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH6 0xFFFFFFFFFFFF DUP1 DUP9 AND SWAP2 AND SUB PUSH2 0x30B2 JUMPI DUP5 PUSH2 0x3073 DUP9 PUSH2 0x176F PUSH1 0x1 DUP7 PUSH2 0x36B6 JUMP JUMPDEST DUP1 SLOAD PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH7 0x1000000000000 MUL PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x3119 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP9 AND DUP3 MSTORE PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP12 SLOAD PUSH1 0x1 DUP2 ADD DUP14 SSTORE PUSH1 0x0 DUP14 DUP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP5 MLOAD SWAP2 MLOAD SWAP1 SWAP3 AND PUSH7 0x1000000000000 MUL SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 ADD SSTORE JUMPDEST PUSH1 0x20 ADD MLOAD SWAP3 POP DUP4 SWAP2 POP PUSH2 0x2CC8 SWAP1 POP JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP6 AND DUP3 MSTORE PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP9 SLOAD PUSH1 0x1 DUP2 ADD DUP11 SSTORE PUSH1 0x0 DUP11 DUP2 MSTORE SWAP2 DUP3 KECCAK256 SWAP6 MLOAD SWAP3 MLOAD SWAP1 SWAP4 AND PUSH7 0x1000000000000 MUL SWAP2 SWAP1 SWAP4 AND OR SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP DUP2 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x31C0 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x31A4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1460 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x319A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3251 DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x327F DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x328F DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1460 DUP2 PUSH2 0x3211 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x32EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x32F9 DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x3309 DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x332D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x3362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0x33B1 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x319A JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x33C3 DUP2 DUP11 PUSH2 0x319A JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3422 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3406 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x346E DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x348A PUSH1 0x60 DUP9 ADD PUSH2 0x3434 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x34BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x34CA DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x34DA DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x34F6 PUSH1 0x80 DUP10 ADD PUSH2 0x3434 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3530 DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3540 DUP2 PUSH2 0x3211 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x355E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3569 DUP2 PUSH2 0x3211 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3596 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x35CF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP10 AND DUP4 MSTORE DUP1 DUP9 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP6 PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE DUP3 PUSH1 0xA0 DUP4 ADD MSTORE DUP3 DUP5 PUSH1 0xC0 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0xC0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xC0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x366D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x736 JUMPI PUSH2 0x736 PUSH2 0x3674 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x736 JUMPI PUSH2 0x736 PUSH2 0x3674 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x3751 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x3737 JUMPI PUSH2 0x3737 PUSH2 0x3674 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x3744 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x36FD JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3768 JUMPI POP PUSH1 0x1 PUSH2 0x736 JUMP JUMPDEST DUP2 PUSH2 0x3775 JUMPI POP PUSH1 0x0 PUSH2 0x736 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x378B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3795 JUMPI PUSH2 0x37B1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x736 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x37A6 JUMPI PUSH2 0x37A6 PUSH2 0x3674 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x736 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x37D4 JUMPI POP DUP2 DUP2 EXP PUSH2 0x736 JUMP JUMPDEST PUSH2 0x37DE DUP4 DUP4 PUSH2 0x36F8 JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x3810 JUMPI PUSH2 0x3810 PUSH2 0x3674 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1460 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x3759 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x736 JUMPI PUSH2 0x736 PUSH2 0x3674 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x14F3 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x38C3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1220 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x38CF JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38FC JUMPI PUSH2 0x38FC PUSH2 0x36C9 JUMP JUMPDEST PUSH2 0x3910 DUP2 PUSH2 0x390A DUP5 SLOAD PUSH2 0x3582 JUMP JUMPDEST DUP5 PUSH2 0x389C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3963 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x392D JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39B0 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3991 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x39EC JUMPI DUP8 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3A61 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x3A99 JUMPI PUSH2 0x3A99 PUSH2 0x3674 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x3A99 JUMPI PUSH2 0x3A99 PUSH2 0x3674 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xD4 0xB8 SSTORE 0xC8 DIV 0x4C 0xD4 0xF6 RETURNDATASIZE PUSH20 0x2C44AC1D7EF95D4F026DE0182D4D1CB3FE417F02 EXTCODESIZE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"776:1366:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5505:186;;;;;;:::i;:::-;;:::i;:::-;;;1370:14:32;;1363:22;1345:41;;1333:2;1318:18;5505:186:3;1205:187:32;4191:152:3;4322:14;;4191:152;;;1543:25:32;;;1531:2;1516:18;4191:152:3;1397:177:32;6251:244:3;;;;;;:::i;:::-;;:::i;4049:82::-;;;4122:2;2182:36:32;;2170:2;2155:18;4049:82:3;2040:184:32;3082:112:7;;;:::i;4871:419:1:-;;;;;;:::i;:::-;;:::i;1520:63:31:-;;;:::i;:::-;;1589:93;;;;;;:::i;:::-;;:::i;931:87:4:-;;;;;;:::i;:::-;;:::i;3934:272:1:-;;;:::i;6653:172::-;;;;;;:::i;:::-;6797:21;;;;6718:7;6797:21;;;3058:20;6797:21;;;;;;;;6653:172;;;;3024:42:32;3012:55;;;2994:74;;2982:2;2967:18;6653:172:1;2848:226:32;6907:138:1;;;;;;:::i;:::-;;:::i;2692:145:11:-;1270:23;2821:9;;;2692:145;;5096:962:5;;;;;;:::i;:::-;;:::i;2246:161::-;;;;;;:::i;:::-;;:::i;3530:126:8:-;;;;;;:::i;:::-;;:::i;:::-;;;4224:10:32;4212:23;;;4194:42;;4182:2;4167:18;3530:126:8;4050:192:32;4401:171:3;;;;;;:::i;:::-;;:::i;3155:101:0:-;;;:::i;1334:158:4:-;;;;;;:::i;:::-;;:::i;1964:176:31:-;;;;;;:::i;:::-;;:::i;1455:59::-;;;:::i;5173:903:12:-;;;:::i;:::-;;;;;;;;;;;;;:::i;2441:144:0:-;1313:22;2570:8;;;2441:144;;5926:396:1;;;;;;:::i;:::-;;:::i;3683:96::-;;;:::i;:::-;;;5761:14:32;5749:27;;;5731:46;;5719:2;5704:18;3683:96:1;5587:196:32;3268:148:3;;;:::i;4296:190:1:-;;;;;;:::i;:::-;;:::i;4767:178:3:-;;;;;;:::i;:::-;;:::i;7123:554:1:-;;;;;;:::i;:::-;;:::i;1088:361:31:-;;;;;;:::i;:::-;;:::i;2095:672:7:-;;;;;;:::i;:::-;;:::i;2772:232:5:-;;;;;;:::i;:::-;;:::i;5003:195:3:-;;;;;;:::i;:::-;5162:20;;;;5083:7;5162:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;5003:195;3733:163:8;;;;;;:::i;:::-;;:::i;:::-;;;;8332:13:32;;8347:14;8328:34;8310:53;;8423:4;8411:17;;;8405:24;8431:54;8401:85;8379:20;;;8372:115;;;;8283:18;3733:163:8;8102:391:32;3405:215:0;;;;;;:::i;:::-;;:::i;3011:144:3:-;3056:13;3081:22;2359:20;3106:18;3081:43;;3141:1;:7;;3134:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144;:::o;5505:186::-;5578:4;966:10:9;5632:31:3;966:10:9;5648:7:3;5657:5;5632:8;:31::i;:::-;5680:4;5673:11;;;5505:186;;;;;:::o;6251:244::-;6338:4;966:10:9;6394:37:3;6410:4;966:10:9;6425:5:3;6394:15;:37::i;:::-;6441:26;6451:4;6457:2;6461:5;6441:9;:26::i;:::-;-1:-1:-1;6484:4:3;;6251:244;-1:-1:-1;;;;6251:244:3:o;3082:112:7:-;3141:7;3167:20;:18;:20::i;:::-;3160:27;;3082:112;:::o;4871:419:1:-;4958:7;3058:20;4958:7;5056;:5;:7::i;:::-;5030:33;;5090:16;5077:29;;:9;:29;5073:115;;5129:48;;;;;;;;9112:25:32;;;9185:14;9173:27;;9153:18;;;9146:55;9085:18;;5129:48:1;;;;;;;;5073:115;5204:79;5254:28;5272:9;5254:17;:28::i;:::-;5204:31;;;;;;;:22;;;:31;;;;;;:49;:79::i;:::-;5197:86;;;4871:419;-1:-1:-1;;;;;4871:419:1:o;1520:63:31:-;2334:13:0;:11;:13::i;:::-;1566:10:31::1;:8;:10::i;:::-;1520:63::o:0;1589:93::-;2334:13:0;:11;:13::i;:::-;1658:17:31::1;1664:2;1668:6;1658:5;:17::i;:::-;1589:93:::0;;:::o;931:87:4:-;985:26;966:10:9;1005:5:4;985;:26::i;:::-;931:87;:::o;3934:272:1:-;3985:13;4074:18;:16;:18::i;:::-;4063:29;;:7;:5;:7::i;:::-;:29;;;4059:93;;4115:26;;;;;;;;;;;;;;4059:93;-1:-1:-1;4161:38:1;;;;;;;;;;;;;;;;;;3934:272::o;6907:138::-;966:10:9;7009:29:1;966:10:9;7028:9:1;7009;:29::i;5096:962:5:-;5260:4;5276:15;5294:19;5307:5;5294:12;:19::i;:::-;5276:37;;5335:7;5327:5;:15;5323:84;;;5365:31;;;;;;;;1543:25:32;;;1516:18;;5365:31:5;1397:177:32;5323:84:5;5416:11;5430:22;5439:5;5446;5430:8;:22::i;:::-;5416:36;;5462:31;5476:8;5487:5;5462;:31::i;:::-;5507:59;;;;;1197:45;;5507:20;;;;;;:59;;966:10:9;;5542:5:5;;5549;;5556:3;;5561:4;;;;5507:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:75;5503:154;;5605:41;;;;;3024:42:32;3012:55;;5605:41:5;;;2994:74:32;2967:18;;5605:41:5;2848:226:32;5503:154:5;5666:24;5722:62;5746:8;5765:4;5772:11;5780:3;5772:5;:11;:::i;:::-;5722:15;:62::i;:::-;5798:8;;;:42;;-1:-1:-1;5810:30:5;;;;5798:42;5794:237;;;5856:37;5870:8;5881:11;5889:3;5881:5;:11;:::i;:::-;5856:5;:37::i;:::-;5794:237;;;5924:31;5938:8;5949:5;5924;:31::i;:::-;5969:51;5987:8;5998:16;6016:3;5969:9;:51::i;:::-;-1:-1:-1;6047:4:5;;5096:962;-1:-1:-1;;;;;;;;5096:962:5:o;2246:161::-;2312:7;2338:22;;;2355:4;2338:22;:62;;2399:1;2338:62;;;4322:14:3;;2363:33:5;;:17;:33;:::i;3530:126:8:-;3600:6;3625:24;3641:7;3625:15;:24::i;4401:171:3:-;4466:7;;2359:20;4510:18;4545:20;;;;:11;:20;;;;;;;;-1:-1:-1;;4545:20:3;;;;;4401:171::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;1334:158:4:-:0;1409:45;1425:7;966:10:9;1448:5:4;1409:15;:45::i;:::-;1464:21;1470:7;1479:5;1464;:21::i;1964:176:31:-;2084:7;2114:19;2127:5;2114:12;:19::i;1455:59::-;2334:13:0;:11;:13::i;:::-;1499:8:31::1;:6;:8::i;5173:903:12:-:0;5271:13;5298:18;;5271:13;;;5298:18;5271:13;2839:21;5777:13;;5511:45;;-1:-1:-1;5777:18:12;:43;;;;-1:-1:-1;5799:16:12;;;;:21;5777:43;5769:77;;;;;;;10876:2:32;5769:77:12;;;10858:21:32;10915:2;10895:18;;;10888:30;10954:23;10934:18;;;10927:51;10995:18;;5769:77:12;10674:345:32;5769:77:12;5908:13;:11;:13::i;:::-;5935:16;:14;:16::i;:::-;6043;;;6027:1;6043:16;;;;;;;;;5857:212;;;;-1:-1:-1;5857:212:12;;-1:-1:-1;5965:13:12;;-1:-1:-1;6000:4:12;;-1:-1:-1;6027:1:12;-1:-1:-1;6043:16:12;-1:-1:-1;5857:212:12;-1:-1:-1;;5173:903:12:o;5926:396:1:-;6002:7;3058:20;6002:7;6100;:5;:7::i;:::-;6074:33;;6134:16;6121:29;;:9;:29;6117:115;;6173:48;;;;;;;;9112:25:32;;;9185:14;9173:27;;9153:18;;;9146:55;9085:18;;6173:48:1;8940:267:32;6117:115:1;6248:67;6286:28;6304:9;6286:17;:28::i;:::-;6248:19;;;;:37;:67::i;:::-;6241:74;;;5926:396;-1:-1:-1;;;;5926:396:1:o;3683:96::-;3729:6;3754:18;:16;:18::i;3268:148:3:-;3400:9;3393:16;;3315:13;;2359:20;;3393:16;;;:::i;4296:190:1:-;4439:31;;;4360:7;4439:31;;;:22;:31;;;;;3058:20;;4439:40;;:38;:40::i;:::-;4432:47;;;4296:190;-1:-1:-1;;;4296:190:1:o;4767:178:3:-;4836:4;966:10:9;4890:27:3;966:10:9;4907:2:3;4911:5;4890:9;:27::i;7123:554:1:-;7328:6;7310:15;:24;7306:91;;;7357:29;;;;;;;;1543:25:32;;;1516:18;;7357:29:1;1397:177:32;7306:91:1;7477:57;;;2345:71;7477:57;;;11444:25:32;11517:42;11505:55;;11485:18;;;11478:83;;;;11577:18;;;11570:34;;;11620:18;;;11613:34;;;7406:14:1;;7423:168;;7450:86;;11416:19:32;;7477:57:1;;;;;;;;;;;;7467:68;;;;;;7450:16;:86::i;:::-;7550:1;7565;7580;7423:13;:168::i;:::-;7406:185;;7601:31;7618:6;7626:5;7601:16;:31::i;:::-;7642:28;7652:6;7660:9;7642;:28::i;:::-;7296:381;7123:554;;;;;;:::o;1088:361:31:-;8870:21:2;4302:15;;;;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:2;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4951:18;;;;4968:1;4951:18;;;4979:67;;;;5013:22;;;;;;;;4979:67;1159:26:31::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:26::i;:::-;1195:22;:20;:22::i;:::-;1227;:20;:22::i;:::-;1259:28;1274:12;1259:14;:28::i;:::-;1297:25;;;;;;;;;;;;;;;;;::::0;:18:::1;:25::i;:::-;1332:19;:17;:19::i;:::-;1361:23;:21;:23::i;:::-;1395:47;1401:10;1425:16;4122:2:3::0;1425::31::1;:16;:::i;:::-;1413:28;::::0;:9:::1;:28;:::i;:::-;1395:5;:47::i;:::-;5070:14:2::0;5066:101;;;5100:23;;;;;;5142:14;;-1:-1:-1;13487:50:32;;5142:14:2;;13475:2:32;13460:18;5142:14:2;;;;;;;5066:101;4092:1081;;;;;1088:361:31;:::o;2095:672:7:-;2316:8;2298:15;:26;2294:97;;;2347:33;;;;;;;;1543:25:32;;;1516:18;;2347:33:7;1397:177:32;2294:97:7;2401:18;1277:95;2460:5;2467:7;2476:5;2483:16;2493:5;1954:16:10;;1597:7;1954:16;;;1005:21;1954:16;;;;;:18;;;;;;;;;1537:452;2483:16:7;2432:78;;;;;;13835:25:32;;;;13879:42;13957:15;;;13937:18;;;13930:43;14009:15;;;;13989:18;;;13982:43;14041:18;;;14034:34;14084:19;;;14077:35;14128:19;;;14121:35;;;13807:19;;2432:78:7;;;;;;;;;;;;2422:89;;;;;;2401:110;;2522:12;2537:28;2554:10;2537:16;:28::i;:::-;2522:43;;2576:14;2593:28;2607:4;2613:1;2616;2619;2593:13;:28::i;:::-;2576:45;;2645:5;2635:15;;:6;:15;;;2631:88;;2673:35;;;;;14351:42:32;14420:15;;;2673:35:7;;;14402:34:32;14472:15;;14452:18;;;14445:43;14314:18;;2673:35:7;14167:327:32;2631:88:7;2729:31;2738:5;2745:7;2754:5;2729:8;:31::i;:::-;2284:483;;;2095:672;;;;;;;:::o;2772:232:5:-;2849:7;2872:22;;;2889:4;2872:22;2868:90;;2917:30;;;;;3024:42:32;3012:55;;2917:30:5;;;2994:74:32;2967:18;;2917:30:5;2848:226:32;2868:90:5;3472:7;2974:23;2967:30;2772:232;-1:-1:-1;;;2772:232:5:o;3733:163:8:-;-1:-1:-1;;;;;;;;;;;;;;;;;3863:26:8;3876:7;3885:3;3863:12;:26::i;3405:215:0:-;2334:13;:11;:13::i;:::-;3489:22:::1;::::0;::::1;3485:91;;3534:31;::::0;::::1;::::0;;3562:1:::1;3534:31;::::0;::::1;2994:74:32::0;2967:18;;3534:31:0::1;2848:226:32::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;10264:128:3:-:0;10348:37;10357:5;10364:7;10373:5;10380:4;10348:8;:37::i;:::-;10264:128;;;:::o;11993:477::-;5162:20;;;;12092:24;5162:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;12178:17;12158:37;;12154:310;;12234:5;12215:16;:24;12211:130;;;12266:60;;;;;14731:42:32;14719:55;;12266:60:3;;;14701:74:32;14791:18;;;14784:34;;;14834:18;;;14827:34;;;14674:18;;12266:60:3;14499:368:32;12211:130:3;12382:57;12391:5;12398:7;12426:5;12407:16;:24;12433:5;12382:8;:57::i;:::-;12082:388;11993:477;;;:::o;6868:300::-;6951:18;;;6947:86;;6992:30;;;;;7019:1;6992:30;;;2994:74:32;2967:18;;6992:30:3;2848:226:32;6947:86:3;7046:16;;;7042:86;;7085:32;;;;;7114:1;7085:32;;;2994:74:32;2967:18;;7085:32:3;2848:226:32;7042:86:3;7137:24;7145:4;7151:2;7155:5;7137:7;:24::i;4015:109:12:-;4068:7;4094:23;:21;:23::i;14291:213:27:-;14347:6;14377:16;14369:24;;14365:103;;;14416:41;;;;;14447:2;14416:41;;;15053:36:32;15105:18;;;15098:34;;;15026:18;;14416:41:27;14872:266:32;14365:103:27;-1:-1:-1;14491:5:27;14291:213::o;9441:606:29:-;9559:24;;9526:7;;;9559:24;9658:1;9652:7;;9648:234;;;9675:11;9695:14;9705:3;9695:9;:14::i;:::-;9689:20;;:3;:20;:::i;:::-;14209:28;14272:20;;;14337:4;14324:18;;9675:34;;-1:-1:-1;14320:28:29;;9733:42;;;;;9727:48;;;;9723:149;;;9802:3;9795:10;;9723:149;;;9850:7;:3;9856:1;9850:7;:::i;:::-;9844:13;;9723:149;9661:221;9648:234;9892:11;9906:53;9925:4;9944:3;9949;9954:4;9906:18;:53::i;:::-;9892:67;-1:-1:-1;9977:8:29;;:63;;9992:41;10006:4;10025:7;10031:1;10025:3;:7;:::i;:::-;14209:28;14272:20;;;14337:4;14324:18;;;14320:28;;14099:265;9992:41;:48;;;;;;9977:63;;;9988:1;9977:63;9970:70;9441:606;-1:-1:-1;;;;;;;9441:606:29:o;2658:162:0:-;966:10:9;2717:7:0;1313:22;2570:8;;;;2441:144;2717:7;:23;;;2713:101;;2763:40;;;;;966:10:9;2763:40:0;;;2994:74:32;2967:18;;2763:40:0;2848:226:32;3674:178:11;2563:16;:14;:16::i;:::-;1270:23;3791:17;;;::::1;::::0;;3823:22:::1;966:10:9::0;3832:12:11::1;3823:22;::::0;3024:42:32;3012:55;;;2994:74;;2982:2;2967:18;3823:22:11::1;;;;;;;3722:130;3674:178::o:0;8996:208:3:-;9066:21;;;9062:91;;9110:32;;;;;9139:1;9110:32;;;2994:74:32;2967:18;;9110:32:3;2848:226:32;9062:91:3;9162:35;9178:1;9182:7;9191:5;9162:7;:35::i;9522:206::-;9592:21;;;9588:89;;9636:30;;;;;9663:1;9636:30;;;2994:74:32;2967:18;;9636:30:3;2848:226:32;9588:89:3;9686:35;9694:7;9711:1;9715:5;9686:7;:35::i;931:109:30:-;977:6;1002:31;1020:12;1002:17;:31::i;7855:367:1:-;3058:20;7937:22;8012:18;8022:7;6797:21;;;;6718:7;6797:21;;;3058:20;6797:21;;;;;;;;6653:172;8012:18;8040:21;;;;:12;:21;;;;;;;;;;;:33;;;;;;;;;;;;;8089:48;;7990:40;;-1:-1:-1;8040:33:1;8089:48;;;;;;8040:12;8089:48;8147:68;8166:11;8179:9;8190:24;8206:7;8190:15;:24::i;:::-;8147:18;:68::i;9910:217::-;10079:31;;;9983:6;10079:31;;;:22;:31;;;;;11096:24:29;3058:20:1;;10061:59;;:17;:59::i;3774:248:0:-;1313:22;3923:8;;3941:19;;;3923:8;3941:19;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;2821:154:7:-;2923:7;2949:19;2962:5;2949:12;:19::i;3366:176:11:-;2316:19;:17;:19::i;:::-;1270:23;3484:16;;;::::1;3496:4;3484:16;::::0;;3515:20:::1;966:10:9::0;3522:12:11::1;887:96:9::0;6300:155:12;6441:7;6434:14;;6354:13;;2839:21;;6434:14;;;:::i;6682:161::-;6739:13;6764:23;2839:21;6790:19;2720:156;10167:206:29;10262:24;;10229:7;;10303:8;;:63;;10318:41;10332:4;10351:7;10357:1;10351:3;:7;:::i;10318:41::-;:48;;;;;;10303:63;;4946:176:12;5023:7;5049:66;5082:20;:18;:20::i;:::-;5104:10;3555:4:25;3549:11;3585:10;3573:23;;3625:4;3616:14;;3609:39;;;;3677:4;3668:14;;3661:34;3733:4;3718:20;;;3353:401;6803:260:24;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;-1:-1:-1;7047:9:24;;6803:260;-1:-1:-1;;;;;;6803:260:24:o;2100:222:10:-;1954:16;;;2183:15;1954:16;;;1005:21;1954:16;;;;;:18;;;;;;;;2231:16;;;2227:89;;2270:35;;;;;15347:42:32;15335:55;;2270:35:10;;;15317:74:32;15407:18;;;15400:34;;;15290:18;;2270:35:10;15143:297:32;2577:147:3;6931:20:2;:18;:20::i;:::-;2679:38:3::1;2702:5;2709:7;2679:22;:38::i;666:65:4:-:0;6931:20:2;:18;:20::i;1148:102:6:-;6931:20:2;:18;:20::i;:::-;1216:27:6::1;:25;:27::i;1847:127:0:-:0;6931:20:2;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;1829:125:7:-:0;6931:20:2;:18;:20::i;:::-;1913:34:7::1;1937:4;1913:34;;;;;;;;;;;;;;;;::::0;:23:::1;:34::i;10204:254:1:-:0;-1:-1:-1;;;;;;;;;;;;;;;;;;;10412:31:1;;;;;:22;:31;;;;;;3058:20;;10412:39;;10447:3;10412:34;:39::i;:::-;10405:46;10204:254;-1:-1:-1;;;;10204:254:1:o;11224:487:3:-;2359:20;11389:19;;;11385:89;;11431:32;;;;;11460:1;11431:32;;;2994:74:32;2967:18;;11431:32:3;2848:226:32;11385:89:3;11487:21;;;11483:90;;11531:31;;;;;11559:1;11531:31;;;2994:74:32;2967:18;;11531:31:3;2848:226:32;11483:90:3;11582:20;;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11629:76;;;;11679:7;11663:31;;11672:5;11663:31;;;11688:5;11663:31;;;;1543:25:32;;1531:2;1516:18;;1397:177;11663:31:3;;;;;;;;11629:76;11322:389;11224:487;;;;:::o;1756:202:31:-;1921:30;1935:4;1941:2;1945:5;1921:13;:30::i;4130:191:12:-;4185:7;2073:95;4243:17;:15;:17::i;:::-;4262:20;:18;:20::i;:::-;4221:92;;;;;;15704:25:32;;;;15745:18;;15738:34;;;;15788:18;;;15781:34;4284:13:12;15831:18:32;;;15824:34;4307:4:12;15874:19:32;;;15867:84;15676:19;;4221:92:12;;;;;;;;;;;;4211:103;;;;;;4204:110;;4130:191;:::o;8587:1642:26:-;8635:7;8658:1;8663;8658:6;8654:45;;-1:-1:-1;8687:1:26;;8587:1642;-1:-1:-1;8587:1642:26:o;8654:45::-;9378:14;9412:1;9401:7;9406:1;9401:4;:7::i;:::-;:12;;9395:1;:19;;9378:36;;9873:1;9862:6;9858:1;:10;;;;;:::i;:::-;;9849:6;:19;9848:26;;9839:35;;9922:1;9911:6;9907:1;:10;;;;;:::i;:::-;;9898:6;:19;9897:26;;9888:35;;9971:1;9960:6;9956:1;:10;;;;;:::i;:::-;;9947:6;:19;9946:26;;9937:35;;10020:1;10009:6;10005:1;:10;;;;;:::i;:::-;;9996:6;:19;9995:26;;9986:35;;10069:1;10058:6;10054:1;:10;;;;;:::i;:::-;;10045:6;:19;10044:26;;10035:35;;10118:1;10107:6;10103:1;:10;;;;;:::i;:::-;;10094:6;:19;10093:26;;10084:35;;10167:1;10156:6;10152:1;:10;;;;;:::i;:::-;;10143:6;:19;10142:26;;10133:35;;10189:23;10193:6;10205;10201:1;:10;;;;;:::i;:::-;;10189:3;:23::i;12736:433:29:-;12893:7;12912:230;12925:4;12919:3;:10;12912:230;;;12945:11;12959:23;12972:3;12977:4;12959:12;:23::i;:::-;14209:28;14272:20;;;14337:4;14324:18;;12945:37;;-1:-1:-1;13000:35:29;;;;14320:28;;13000:29;;;:35;12996:136;;;13062:3;13055:10;;12996:136;;;13110:7;:3;13116:1;13110:7;:::i;:::-;13104:13;;12996:136;12931:211;12912:230;;;-1:-1:-1;13158:4:29;12736:433;-1:-1:-1;;;12736:433:29:o;3105:126:11:-;1270:23;2821:9;;;3163:62;;3199:15;;;;;;;;;;;;;;3322:133:8;3404:7;3430:18;3440:7;3430:9;:18::i;8998:837:1:-;3058:20;9143:10;;;;;;;;;;;:24;;;9166:1;9157:6;:10;9143:24;9139:690;;;9187:18;;;;9183:317;;9291:28;;;9226:16;9291:28;;;:22;;;:28;;;;;9226:16;;9264:152;;9341:9;9372:26;9391:6;9372:18;:26::i;:::-;9264:5;:152::i;:::-;9225:191;;;;;;;;9460:4;9439:46;;;9466:8;9476;9439:46;;;;;;16325:25:32;;;16381:2;16366:18;;16359:34;16313:2;16298:18;;16151:248;9439:46:1;;;;;;;;9207:293;;9183:317;9517:16;;;;9513:306;;9619:26;;;9554:16;9619:26;;;:22;;;:26;;;;;9554:16;;9592:145;;9667:4;9693:26;9712:6;9693:18;:26::i;9592:145::-;9553:184;;;;;;;;9781:2;9760:44;;;9785:8;9795;9760:44;;;;;;16325:25:32;;;16381:2;16366:18;;16359:34;16313:2;16298:18;;16151:248;9760:44:1;;;;;;;;9535:284;;9076:759;8998:837;;;:::o;15291:213:27:-;15347:6;15377:16;15369:24;;15365:103;;;15416:41;;;;;15447:2;15416:41;;;15053:36:32;15105:18;;;15098:34;;;15026:18;;15416:41:27;14872:266:32;1259:164:10;1319:7;;1005:21;1364:19;886:156;2905:128:11;1270:23;2821:9;;;2966:61;;;3001:15;;;;;;;;;;;;;;5140:1530:24;5266:7;;;6199:66;6186:79;;6182:164;;;-1:-1:-1;6297:1:24;;-1:-1:-1;6301:30:24;;-1:-1:-1;6333:1:24;6281:54;;6182:164;6457:24;;;6440:14;6457:24;;;;;;;;;16902:25:32;;;16975:4;16963:17;;16943:18;;;16936:45;;;;16997:18;;;16990:34;;;17040:18;;;17033:34;;;6457:24:24;;16874:19:32;;6457:24:24;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6457:24:24;;;;;;-1:-1:-1;;6495:20:24;;;6491:113;;-1:-1:-1;6547:1:24;;-1:-1:-1;6551:29:24;;-1:-1:-1;6547:1:24;;-1:-1:-1;6531:62:24;;6491:113;6622:6;-1:-1:-1;6630:20:24;;-1:-1:-1;6630:20:24;;-1:-1:-1;5140:1530:24;;;;;;;;;:::o;7196:532::-;7291:20;7282:5;:29;;;;;;;;:::i;:::-;;7278:444;;7196:532;;:::o;7278:444::-;7387:29;7378:5;:38;;;;;;;;:::i;:::-;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:5;:44;;;;;;;;:::i;:::-;;7479:243;;7550:46;;;;;;;;1543:25:32;;;1516:18;;7550:46:24;1397:177:32;7479:243:24;7626:30;7617:5;:39;;;;;;;;:::i;:::-;;7613:109;;7679:32;;;;;;;;1543:25:32;;;1516:18;;7679:32:24;1397:177:32;7084:141:2;8870:21;8560:40;;;;;;7146:73;;7191:17;;;;;;;;;;;;;;2730:216:3;6931:20:2;:18;:20::i;:::-;2359::3;2895:7;:15:::1;2905:5:::0;2895:7;:15:::1;:::i;:::-;-1:-1:-1::0;2920:9:3::1;::::0;::::1;:19;2932:7:::0;2920:9;:19:::1;:::i;1939:156:11:-:0;6931:20:2;:18;:20::i;:::-;1270:23:11;2071:17;;;::::1;::::0;;1939:156::o;1980:235:0:-;6931:20:2;:18;:20::i;3599:330:12:-;6931:20:2;:18;:20::i;:::-;2839:21:12;3766:7;:14:::1;3776:4:::0;3766:7;:14:::1;:::i;:::-;-1:-1:-1::0;3790:10:12::1;::::0;::::1;:20;3803:7:::0;3790:10;:20:::1;:::i;:::-;-1:-1:-1::0;3891:1:12::1;3875:17:::0;;;3902:16:::1;::::0;;::::1;:20:::0;-1:-1:-1;;3599:330:12:o;11199:138:29:-;-1:-1:-1;;;;;;;;;;;;;;;;;11308:4:29;:17;;11326:3;11308:22;;;;;;;;;;:::i;:::-;;;;;;;;;;11301:29;;;;;;;;;11308:22;;11301:29;;;;;;;;;;;;;;;;;;;11199:138;-1:-1:-1;;;11199:138:29:o;2649:413:8:-;2743:30;2757:4;2763:2;2767:5;2743:13;:30::i;:::-;2787:18;;;2783:226;;2821:14;2838:13;4322:14:3;;;4191:152;2838:13:8;2821:30;-1:-1:-1;2485:17:8;2909:12;;;2905:94;;;2948:36;;;;;;;;16325:25:32;;;16366:18;;;16359:34;;;16298:18;;2948:36:8;16151:248:32;2905:94:8;2807:202;;2783:226;3018:37;3039:4;3045:2;3049:5;3018:20;:37::i;7058:687:12:-;7108:7;2839:21;7108:7;7203:13;:11;:13::i;:::-;7230:18;;7182:34;;-1:-1:-1;7230:22:12;7226:513;;7275:22;;;;;;;;7058:687;-1:-1:-1;;7058:687:12:o;7226:513::-;7572:13;;7603:15;;7599:130;;7645:10;7058:687;-1:-1:-1;;;7058:687:12:o;7599:130::-;7701:13;7694:20;;;;;7058:687;:::o;7966:723::-;8019:7;2839:21;8019:7;8117:16;:14;:16::i;:::-;8147:21;;8093:40;;-1:-1:-1;8147:25:12;8143:540;;8195:25;;;;;;;;7966:723;-1:-1:-1;;7966:723:12:o;8143:540::-;8507:16;;;;8541:18;;8537:136;;8586:13;7966:723;-1:-1:-1;;;7966:723:12:o;10699:983:26:-;10751:7;;10835:3;10826:12;;;:16;10822:99;;10872:3;10862:13;;;;10893;10822:99;10947:2;10938:11;;;:15;10934:96;;10983:2;10973:12;;;;11003;10934:96;11056:2;11047:11;;;:15;11043:96;;11092:2;11082:12;;;;11112;11043:96;11165:2;11156:11;;;:15;11152:96;;11201:2;11191:12;;;;11221;11152:96;11274:1;11265:10;;;:14;11261:93;;11309:1;11299:11;;;;11328;11261:93;11380:1;11371:10;;;:14;11367:93;;11415:1;11405:11;;;;11434;11367:93;11486:1;11477:10;;;:14;11473:93;;11521:1;11511:11;;;;11540;11473:93;11592:1;11583:10;;;:14;11579:64;;11627:1;11617:11;11669:6;10699:983;-1:-1:-1;;10699:983:26:o;2557:104::-;2615:7;2645:1;2641;:5;:13;;2653:1;2641:13;;;-1:-1:-1;2649:1:26;;2557:104;-1:-1:-1;2557:104:26:o;2774:153::-;2836:7;2909:11;2919:1;2910:5;;;2909:11;:::i;:::-;2899:21;;2900:5;;;2899:21;:::i;10827:101:1:-;10890:7;10916:5;10920:1;10916;:5;:::i;4169:218:27:-;4226:7;4257:17;4249:25;;4245:105;;;4297:42;;;;;4328:3;4297:42;;;15053:36:32;15105:18;;;15098:34;;;15026:18;;4297:42:27;14872:266:32;10464:255:1;10631:7;10640;10666:46;10677:7;:5;:7::i;:::-;10686:25;10689:14;:5;:12;:14::i;:::-;10705:5;10686:2;:25;;:::i;:::-;10666:5;;:46;:10;:46::i;:::-;10659:53;;;;10464:255;;;;;;;:::o;10725:96::-;10783:7;10809:5;10813:1;10809;:5;:::i;1462:145:6:-;2316:19:11;:17;:19::i;:::-;1570:30:6::1;1584:4;1590:2;1594:5;1570:13;:30::i;8456:456:1:-:0;3058:20;8612:18;;;8608:109;;8646:60;8652:1;:19;;8673:4;8679:26;8698:6;8679:18;:26::i;8646:60::-;;;8608:109;8730:16;;;8726:112;;8762:65;8768:1;:19;;8789:9;8800:26;8819:6;8800:18;:26::i;8762:65::-;;;8726:112;6797:21;;;;6718:7;6797:21;;;3058:20;6797:21;;;;;;;;;;;;;;;8847:58;;6797:21;;;;;8898:6;8847:18;:58::i;8050:162:29:-;8132:7;;8167:38;8175:4;8194:3;8199:5;8167:7;:38::i;7483:1170:3:-;2359:20;7625:18;;;7621:546;;7779:5;7761:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7621:546:3;;-1:-1:-1;7621:546:3;;7837:17;;;7815:19;7837:17;;;;;;;;;;;7872:19;;;7868:115;;;7918:50;;;;;14731:42:32;14719:55;;7918:50:3;;;14701:74:32;14791:18;;;14784:34;;;14834:18;;;14827:34;;;14674:18;;7918:50:3;14499:368:32;7868:115:3;8103:17;;;:11;:17;;;;;;;;;;8123:19;;;;8103:39;;7621:546;8181:16;;;8177:429;;8344:14;;;:23;;;;;;;8177:429;;;8557:15;;;:11;:15;;;;;;;;;;:24;;;;;;8177:429;8636:2;8621:25;;8630:4;8621:25;;;8640:5;8621:25;;;;1543::32;;1531:2;1516:18;;1397:177;8621:25:3;;;;;;;;7558:1095;7483:1170;;;:::o;11513:870:29:-;11646:11;;11604:7;;;;11672;;11668:709;;11747:25;11775:28;11789:4;11795:7;11801:1;11795:3;:7;:::i;11775:28::-;11747:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11877:15:29;;;-1:-1:-1;11873:91:29;;;11919:30;;;;;;;;;;;;;;11873:91;12027:9;;:16;;;;;;;12023:189;;12101:5;12063:28;12077:4;12083:7;12089:1;12083:3;:7;:::i;12063:28::-;:43;;;;;;;;;;;;;;;;;;;12023:189;;;12155:41;;;;;;;;;;;;;;;;;;;;;;;;;;12145:52;;;;;;;-1:-1:-1;12145:52:29;;;;;;;;;;;;;;;;;;;;;;;;;12023:189;12233:11;;;;-1:-1:-1;12246:5:29;;-1:-1:-1;12225:27:29;;-1:-1:-1;12225:27:29;11668:709;-1:-1:-1;;12293:41:29;;;;;;;;;;;;;;;;;;;;;;;;;;12283:52;;;;;;;-1:-1:-1;12283:52:29;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12327:5:29;12349:17;;14:482:32;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;485:4;415:66;410:2;402:6;398:15;394:88;389:3;385:98;381:109;374:116;;;14:482;;;;:::o;501:220::-;650:2;639:9;632:21;613:4;670:45;711:2;700:9;696:18;688:6;670:45;:::i;726:154::-;812:42;805:5;801:54;794:5;791:65;781:93;;870:1;867;860:12;885:315;953:6;961;1014:2;1002:9;993:7;989:23;985:32;982:52;;;1030:1;1027;1020:12;982:52;1069:9;1056:23;1088:31;1113:5;1088:31;:::i;:::-;1138:5;1190:2;1175:18;;;;1162:32;;-1:-1:-1;;;885:315:32:o;1579:456::-;1656:6;1664;1672;1725:2;1713:9;1704:7;1700:23;1696:32;1693:52;;;1741:1;1738;1731:12;1693:52;1780:9;1767:23;1799:31;1824:5;1799:31;:::i;:::-;1849:5;-1:-1:-1;1906:2:32;1891:18;;1878:32;1919:33;1878:32;1919:33;:::i;:::-;1579:456;;1971:7;;-1:-1:-1;;;2025:2:32;2010:18;;;;1997:32;;1579:456::o;2411:180::-;2470:6;2523:2;2511:9;2502:7;2498:23;2494:32;2491:52;;;2539:1;2536;2529:12;2491:52;-1:-1:-1;2562:23:32;;2411:180;-1:-1:-1;2411:180:32:o;2596:247::-;2655:6;2708:2;2696:9;2687:7;2683:23;2679:32;2676:52;;;2724:1;2721;2714:12;2676:52;2763:9;2750:23;2782:31;2807:5;2782:31;:::i;3079:966::-;3206:6;3214;3222;3230;3238;3291:3;3279:9;3270:7;3266:23;3262:33;3259:53;;;3308:1;3305;3298:12;3259:53;3347:9;3334:23;3366:31;3391:5;3366:31;:::i;:::-;3416:5;-1:-1:-1;3473:2:32;3458:18;;3445:32;3486:33;3445:32;3486:33;:::i;:::-;3538:7;-1:-1:-1;3592:2:32;3577:18;;3564:32;;-1:-1:-1;3647:2:32;3632:18;;3619:32;3670:18;3700:14;;;3697:34;;;3727:1;3724;3717:12;3697:34;3765:6;3754:9;3750:22;3740:32;;3810:7;3803:4;3799:2;3795:13;3791:27;3781:55;;3832:1;3829;3822:12;3781:55;3872:2;3859:16;3898:2;3890:6;3887:14;3884:34;;;3914:1;3911;3904:12;3884:34;3959:7;3954:2;3945:6;3941:2;3937:15;3933:24;3930:37;3927:57;;;3980:1;3977;3970:12;3927:57;3079:966;;;;-1:-1:-1;3079:966:32;;-1:-1:-1;4011:2:32;4003:11;;4033:6;3079:966;-1:-1:-1;;;3079:966:32:o;4247:1335::-;4644:66;4636:6;4632:79;4621:9;4614:98;4595:4;4731:2;4769:3;4764:2;4753:9;4749:18;4742:31;4796:46;4837:3;4826:9;4822:19;4814:6;4796:46;:::i;:::-;4890:9;4882:6;4878:22;4873:2;4862:9;4858:18;4851:50;4924:33;4950:6;4942;4924:33;:::i;:::-;4988:2;4973:18;;4966:34;;;5049:42;5037:55;;5031:3;5016:19;;5009:84;5124:3;5109:19;;5102:35;;;5174:22;;;5168:3;5153:19;;5146:51;5246:13;;5268:22;;;5344:15;;;;-1:-1:-1;5306:15:32;;;;-1:-1:-1;5387:169:32;5401:6;5398:1;5395:13;5387:169;;;5462:13;;5450:26;;5531:15;;;;5496:12;;;;5423:1;5416:9;5387:169;;;-1:-1:-1;5573:3:32;;4247:1335;-1:-1:-1;;;;;;;;;;;;4247:1335:32:o;5788:156::-;5854:20;;5914:4;5903:16;;5893:27;;5883:55;;5934:1;5931;5924:12;5883:55;5788:156;;;:::o;5949:592::-;6051:6;6059;6067;6075;6083;6091;6144:3;6132:9;6123:7;6119:23;6115:33;6112:53;;;6161:1;6158;6151:12;6112:53;6200:9;6187:23;6219:31;6244:5;6219:31;:::i;:::-;6269:5;-1:-1:-1;6321:2:32;6306:18;;6293:32;;-1:-1:-1;6372:2:32;6357:18;;6344:32;;-1:-1:-1;6395:36:32;6427:2;6412:18;;6395:36;:::i;:::-;6385:46;;6478:3;6467:9;6463:19;6450:33;6440:43;;6530:3;6519:9;6515:19;6502:33;6492:43;;5949:592;;;;;;;;:::o;6546:734::-;6657:6;6665;6673;6681;6689;6697;6705;6758:3;6746:9;6737:7;6733:23;6729:33;6726:53;;;6775:1;6772;6765:12;6726:53;6814:9;6801:23;6833:31;6858:5;6833:31;:::i;:::-;6883:5;-1:-1:-1;6940:2:32;6925:18;;6912:32;6953:33;6912:32;6953:33;:::i;:::-;7005:7;-1:-1:-1;7059:2:32;7044:18;;7031:32;;-1:-1:-1;7110:2:32;7095:18;;7082:32;;-1:-1:-1;7133:37:32;7165:3;7150:19;;7133:37;:::i;:::-;7123:47;;7217:3;7206:9;7202:19;7189:33;7179:43;;7269:3;7258:9;7254:19;7241:33;7231:43;;6546:734;;;;;;;;;;:::o;7285:388::-;7353:6;7361;7414:2;7402:9;7393:7;7389:23;7385:32;7382:52;;;7430:1;7427;7420:12;7382:52;7469:9;7456:23;7488:31;7513:5;7488:31;:::i;:::-;7538:5;-1:-1:-1;7595:2:32;7580:18;;7567:32;7608:33;7567:32;7608:33;:::i;:::-;7660:7;7650:17;;;7285:388;;;;;:::o;7678:419::-;7745:6;7753;7806:2;7794:9;7785:7;7781:23;7777:32;7774:52;;;7822:1;7819;7812:12;7774:52;7861:9;7848:23;7880:31;7905:5;7880:31;:::i;:::-;7930:5;-1:-1:-1;7987:2:32;7972:18;;7959:32;8035:10;8022:24;;8010:37;;8000:65;;8061:1;8058;8051:12;8498:437;8577:1;8573:12;;;;8620;;;8641:61;;8695:4;8687:6;8683:17;8673:27;;8641:61;8748:2;8740:6;8737:14;8717:18;8714:38;8711:218;;8785:77;8782:1;8775:88;8886:4;8883:1;8876:15;8914:4;8911:1;8904:15;8711:218;;8498:437;;;:::o;9212:816::-;9444:4;9473:42;9554:2;9546:6;9542:15;9531:9;9524:34;9606:2;9598:6;9594:15;9589:2;9578:9;9574:18;9567:43;;9646:6;9641:2;9630:9;9626:18;9619:34;9689:6;9684:2;9673:9;9669:18;9662:34;9733:3;9727;9716:9;9712:19;9705:32;9774:6;9768:3;9757:9;9753:19;9746:35;9832:6;9824;9818:3;9807:9;9803:19;9790:49;9889:1;9883:3;9874:6;9863:9;9859:22;9855:32;9848:43;10018:3;9948:66;9943:2;9935:6;9931:15;9927:88;9916:9;9912:104;9908:114;9900:122;;9212:816;;;;;;;;;:::o;10033:184::-;10103:6;10156:2;10144:9;10135:7;10131:23;10127:32;10124:52;;;10172:1;10169;10162:12;10124:52;-1:-1:-1;10195:16:32;;10033:184;-1:-1:-1;10033:184:32:o;10222:::-;10274:77;10271:1;10264:88;10371:4;10368:1;10361:15;10395:4;10392:1;10385:15;10411:125;10476:9;;;10497:10;;;10494:36;;;10510:18;;:::i;10541:128::-;10608:9;;;10629:11;;;10626:37;;;10643:18;;:::i;11024:184::-;11076:77;11073:1;11066:88;11173:4;11170:1;11163:15;11197:4;11194:1;11187:15;11658:482;11747:1;11790:5;11747:1;11804:330;11825:7;11815:8;11812:21;11804:330;;;11944:4;11876:66;11872:77;11866:4;11863:87;11860:113;;;11953:18;;:::i;:::-;12003:7;11993:8;11989:22;11986:55;;;12023:16;;;;11986:55;12102:22;;;;12062:15;;;;11804:330;;;11808:3;11658:482;;;;;:::o;12145:866::-;12194:5;12224:8;12214:80;;-1:-1:-1;12265:1:32;12279:5;;12214:80;12313:4;12303:76;;-1:-1:-1;12350:1:32;12364:5;;12303:76;12395:4;12413:1;12408:59;;;;12481:1;12476:130;;;;12388:218;;12408:59;12438:1;12429:10;;12452:5;;;12476:130;12513:3;12503:8;12500:17;12497:43;;;12520:18;;:::i;:::-;-1:-1:-1;;12576:1:32;12562:16;;12591:5;;12388:218;;12690:2;12680:8;12677:16;12671:3;12665:4;12662:13;12658:36;12652:2;12642:8;12639:16;12634:2;12628:4;12625:12;12621:35;12618:77;12615:159;;;-1:-1:-1;12727:19:32;;;12759:5;;12615:159;12806:34;12831:8;12825:4;12806:34;:::i;:::-;12936:6;12868:66;12864:79;12855:7;12852:92;12849:118;;;12947:18;;:::i;:::-;12985:20;;12145:866;-1:-1:-1;;;12145:866:32:o;13016:140::-;13074:5;13103:47;13144:4;13134:8;13130:19;13124:4;13103:47;:::i;13161:168::-;13234:9;;;13265;;13282:15;;;13276:22;;13262:37;13252:71;;13303:18;;:::i;15962:184::-;16014:77;16011:1;16004:88;16111:4;16108:1;16101:15;16135:4;16132:1;16125:15;17078:184;17130:77;17127:1;17120:88;17227:4;17224:1;17217:15;17251:4;17248:1;17241:15;17393:545;17495:2;17490:3;17487:11;17484:448;;;17531:1;17556:5;17552:2;17545:17;17601:4;17597:2;17587:19;17671:2;17659:10;17655:19;17652:1;17648:27;17642:4;17638:38;17707:4;17695:10;17692:20;17689:47;;;-1:-1:-1;17730:4:32;17689:47;17785:2;17780:3;17776:12;17773:1;17769:20;17763:4;17759:31;17749:41;;17840:82;17858:2;17851:5;17848:13;17840:82;;;17903:17;;;17884:1;17873:13;17840:82;;18174:1471;18300:3;18294:10;18327:18;18319:6;18316:30;18313:56;;;18349:18;;:::i;:::-;18378:97;18468:6;18428:38;18460:4;18454:11;18428:38;:::i;:::-;18422:4;18378:97;:::i;:::-;18530:4;;18594:2;18583:14;;18611:1;18606:782;;;;19432:1;19449:6;19446:89;;;-1:-1:-1;19501:19:32;;;19495:26;19446:89;18080:66;18071:1;18067:11;;;18063:84;18059:89;18049:100;18155:1;18151:11;;;18046:117;19548:81;;18576:1063;;18606:782;17340:1;17333:14;;;17377:4;17364:18;;18654:66;18642:79;;;18819:236;18833:7;18830:1;18827:14;18819:236;;;18922:19;;;18916:26;18901:42;;19014:27;;;;18982:1;18970:14;;;;18849:19;;18819:236;;;18823:3;19083:6;19074:7;19071:19;19068:261;;;19144:19;;;19138:26;19245:66;19227:1;19223:14;;;19239:3;19219:24;19215:97;19211:102;19196:118;19181:134;;19068:261;-1:-1:-1;;;;;19375:1:32;19359:14;;;19355:22;19342:36;;-1:-1:-1;18174:1471:32:o;19650:184::-;19702:77;19699:1;19692:88;19799:4;19796:1;19789:15;19823:4;19820:1;19813:15;19839:274;19879:1;19905;19895:189;;19940:77;19937:1;19930:88;20041:4;20038:1;20031:15;20069:4;20066:1;20059:15;19895:189;-1:-1:-1;20098:9:32;;19839:274::o;20118:220::-;20187:54;20274:10;;;20262;;;20258:27;;20297:12;;;20294:38;;;20312:18;;:::i;:::-;20294:38;20118:220;;;;:::o;20615:217::-;20683:54;20757:10;;;20769;;;20753:27;;20792:11;;;20789:37;;;20806:18;;:::i"},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","initialize(address)":"c4d66de8","maxFlashLoan(address)":"613255ab","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxLoan\",\"type\":\"uint256\"}],\"name\":\"ERC3156ExceededMaxLoan\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC3156InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ERC3156UnsupportedToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"ERC3156ExceededMaxLoan(uint256)\":[{\"details\":\"The requested loan exceeds the max loan value for `token`.\"}],\"ERC3156InvalidReceiver(address)\":[{\"details\":\"The receiver of a flashloan is not a valid {onFlashLoan} implementer.\"}],\"ERC3156UnsupportedToken(address)\":[{\"details\":\"The loan token is not valid.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"flashFee(address,uint256)\":{\"details\":\"Returns the fee applied when doing flash loans. This function calls the {_flashFee} function which returns the fee applied when doing flash loans.\",\"params\":{\"token\":\"The token to be flash loaned.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"The fees applied to the corresponding flash loan.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Performs a flash loan. New tokens are minted and sent to the `receiver`, who is required to implement the {IERC3156FlashBorrower} interface. By the end of the flash loan, the receiver is expected to own value + fee tokens and have them approved back to the token contract itself so they can be burned.\",\"params\":{\"data\":\"An arbitrary datafield that is passed to the receiver.\",\"receiver\":\"The receiver of the flash loan. Should implement the {IERC3156FlashBorrower-onFlashLoan} interface.\",\"token\":\"The token to be flash loaned. Only `address(this)` is supported.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"`true` if the flash loan was successful.\"}},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"maxFlashLoan(address)\":{\"details\":\"Returns the maximum amount of tokens available for loan.\",\"params\":{\"token\":\"The address of the token that is requested.\"},\"returns\":{\"_0\":\"The amount of token that can be loaned. NOTE: This function does not consider any form of supply cap, so in case it's used in a token with a cap like {ERC20Capped}, make sure to override this function to integrate the cap instead of `type(uint256).max`.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20UpgradableV2.sol\":\"WAY\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol\":{\"keccak256\":\"0xa9db28430d1e949a78a2040f08ce0062b39f1ee436d2ca4f7bb3c99001ae0bc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c6368062fba93e56dcde4e2443a45275c1950cc889a57778d2407240c4f2ba7\",\"dweb:/ipfs/QmP6PDS6aYo1Q8U8etR2dKco7bf4WP35fazGzMUWubdETB\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f\",\"dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol\":{\"keccak256\":\"0x5419ce583668d1ab6a0833923c0f4c3eed93e87edbeca4f833c35bd5b53163bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c9a241f708d229ac116533a18d8a49b38276a5c96ccda661fbda63e93d5ad23\",\"dweb:/ipfs/QmQBwhTKBfWSR5gxG8LJS4YbfJtUz9e9yQXsLsCkQD8vr9\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":{\"keccak256\":\"0xf31761e4cd0b20c33a04e8cfa21d3b40f0a18dd26f66f97686f87668ab5ba8f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8be0ae676c129bb8ee94e32f075f5d017b257c09e02f3ed6c830ec5b9ca6e666\",\"dweb:/ipfs/QmeaPYo4t3XaAK8bbxkjTT3bTKQZHUXVadjysSfz5cuUbX\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x8a97653aeba40e9f0c2e8df1a1379b29b927b6dc3534040c668e71ad9ae89d88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e529c294c9d634eb68a1e4aeb66eb8381de5a08ccd2c0bfeebd48a6b28fcff7\",\"dweb:/ipfs/QmWCezuxfZb68nM3Hs6XzQNNiW7VJsymU4sajy2DW1CKbp\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":{\"keccak256\":\"0x804fafbc589e3c29f075239c21a0f3ee8eff5bb5579cdd27992beb5126a050f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17bfc44b6c8cf90239ff347c6ff5f1962ed96d06300ce166484d565227989928\",\"dweb:/ipfs/QmRd9kUAkegsHzCxzeh6CD4sCpfwoc6BkWdBcvZUC73eY1\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306\",\"dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]},\"contracts/ERC20UpgradableV2.sol\":{\"keccak256\":\"0xaf51b853df7d679515385f770340a75335c2d21b6322a755492db7a198a5ebba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a9d23d712a595619ff0a153d005c62665d060945a4e3ea6a9982a4cfc5c4b79\",\"dweb:/ipfs/QmcmaAtSqVaMGLsQ8yZ6uHCd6uhxwbQgneM3peu83ELeaU\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}}}}